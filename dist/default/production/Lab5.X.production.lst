

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Feb 13 14:28:54 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4320
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    34  0000                     _ADCON1	set	4033
    35  0000                     _CCP1CON	set	4029
    36  0000                     _CCP2CON	set	4026
    37  0000                     _CCPR1L	set	4030
    38  0000                     _CCPR2L	set	4027
    39  0000                     _DDRAbits	set	3986
    40  0000                     _DDRD	set	3989
    41  0000                     _DDREbits	set	3990
    42  0000                     _INTCONbits	set	4082
    43  0000                     _IPR2bits	set	4002
    44  0000                     _LATAbits	set	3977
    45  0000                     _LATD	set	3980
    46  0000                     _LATEbits	set	3981
    47  0000                     _PIE1bits	set	3997
    48  0000                     _PIE2bits	set	4000
    49  0000                     _PIR1bits	set	3998
    50  0000                     _PIR2bits	set	4001
    51  0000                     _PORTEbits	set	3972
    52  0000                     _PR2	set	4043
    53  0000                     _RCONbits	set	4048
    54  0000                     _T2CON	set	4042
    55  0000                     _T2CONbits	set	4042
    56  0000                     _T3CON	set	4017
    57  0000                     _T3CONbits	set	4017
    58  0000                     _TMR2	set	4044
    59  0000                     _TMR3H	set	4019
    60  0000                     _TMR3L	set	4018
    61  0000                     _TRISBbits	set	3987
    62  0000                     _TRISCbits	set	3988
    63                           
    64                           	psect	intcode_body
    65  0003D0                     __pintcode_body:
    66                           	opt stack 0
    67                           
    68                           ; #config settings
    69  0003D0                     int_func:
    70                           	opt stack 27
    71  0003D0  CFEA F004          	movff	fsr0h,??_highISR+3
    72  0003D4  CFE1 F005          	movff	fsr1l,??_highISR+4
    73  0003D8  CFE2 F006          	movff	fsr1h,??_highISR+5
    74  0003DC  CFD9 F007          	movff	fsr2l,??_highISR+6
    75  0003E0  CFDA F008          	movff	fsr2h,??_highISR+7
    76  0003E4  CFF3 F009          	movff	prodl,??_highISR+8
    77  0003E8  CFF4 F00A          	movff	prodh,??_highISR+9
    78  0003EC  CFF6 F00B          	movff	tblptrl,??_highISR+10
    79  0003F0  CFF7 F00C          	movff	tblptrh,??_highISR+11
    80  0003F4  CFF8 F00D          	movff	tblptru,??_highISR+12
    81  0003F8  CFF5 F00E          	movff	tablat,??_highISR+13
    82                           
    83                           ;clock.h: 46: if (1 == PIR2bits.TMR3IF) {
    84  0003FC  A2A1               	btfss	4001,1,c	;volatile
    85  0003FE  D002               	goto	i2l1061
    86                           
    87                           ;clock.h: 47: tick_units++;
    88  000400  4A41               	infsnz	_tick_units,f,c	;volatile
    89  000402  2A42               	incf	_tick_units+1,f,c	;volatile
    90  000404                     i2l1061:
    91                           
    92                           ;clock.h: 48: }
    93                           ;clock.h: 49: PIR2bits.TMR3IF = 0;
    94  000404  92A1               	bcf	4001,1,c	;volatile
    95  000406  C00E  FFF5         	movff	??_highISR+13,tablat
    96  00040A  C00D  FFF8         	movff	??_highISR+12,tblptru
    97  00040E  C00C  FFF7         	movff	??_highISR+11,tblptrh
    98  000412  C00B  FFF6         	movff	??_highISR+10,tblptrl
    99  000416  C00A  FFF4         	movff	??_highISR+9,prodh
   100  00041A  C009  FFF3         	movff	??_highISR+8,prodl
   101  00041E  C008  FFDA         	movff	??_highISR+7,fsr2h
   102  000422  C007  FFD9         	movff	??_highISR+6,fsr2l
   103  000426  C006  FFE2         	movff	??_highISR+5,fsr1h
   104  00042A  C005  FFE1         	movff	??_highISR+4,fsr1l
   105  00042E  C004  FFEA         	movff	??_highISR+3,fsr0h
   106  000432  C003  FFE9         	movff	??_highISR+2,fsr0l
   107  000436  C002  FFFB         	movff	??_highISR+1,pclatu
   108  00043A  C001  FFFA         	movff	??_highISR,pclath
   109  00043E  0011               	retfie		f
   110  000440                     __end_of_highISR:
   111                           	opt stack 0
   112  0000                     pclatu	equ	0xFFB
   113                           pclath	equ	0xFFA
   114                           tblptru	equ	0xFF8
   115                           tblptrh	equ	0xFF7
   116                           tblptrl	equ	0xFF6
   117                           tablat	equ	0xFF5
   118                           prodh	equ	0xFF4
   119                           prodl	equ	0xFF3
   120                           fsr0h	equ	0xFEA
   121                           fsr0l	equ	0xFE9
   122                           fsr1h	equ	0xFE2
   123                           fsr1l	equ	0xFE1
   124                           fsr2h	equ	0xFDA
   125                           fsr2l	equ	0xFD9
   126                           
   127                           	psect	cinit
   128  00065A                     __pcinit:
   129                           	opt stack 0
   130  00065A                     start_initialization:
   131                           	opt stack 0
   132  00065A                     __initialization:
   133                           	opt stack 0
   134                           
   135                           ; Clear objects allocated to COMRAM (7 bytes)
   136  00065A  EE00  F03D         	lfsr	0,__pbssCOMRAM
   137  00065E  0E07               	movlw	7
   138  000660                     clear_0:
   139  000660  6AEE               	clrf	postinc0,c
   140  000662  06E8               	decf	wreg,f,c
   141  000664  E1FD               	bnz	clear_0
   142  000666                     end_of_initialization:
   143                           	opt stack 0
   144  000666                     __end_of__initialization:
   145                           	opt stack 0
   146  000666  0100               	movlb	0
   147  000668  EF53  F000         	goto	_main	;jump to C main() function
   148                           pclatu	equ	0xFFB
   149                           pclath	equ	0xFFA
   150                           tblptru	equ	0xFF8
   151                           tblptrh	equ	0xFF7
   152                           tblptrl	equ	0xFF6
   153                           tablat	equ	0xFF5
   154                           prodh	equ	0xFF4
   155                           prodl	equ	0xFF3
   156                           postinc0	equ	0xFEE
   157                           fsr0h	equ	0xFEA
   158                           fsr0l	equ	0xFE9
   159                           wreg	equ	0xFE8
   160                           fsr1h	equ	0xFE2
   161                           fsr1l	equ	0xFE1
   162                           fsr2h	equ	0xFDA
   163                           fsr2l	equ	0xFD9
   164                           
   165                           	psect	bssCOMRAM
   166  00003D                     __pbssCOMRAM:
   167                           	opt stack 0
   168  00003D                     _randx:
   169                           	opt stack 0
   170  00003D                     	ds	4
   171  000041                     _tick_units:
   172                           	opt stack 0
   173  000041                     	ds	2
   174  000043                     _randf:
   175                           	opt stack 0
   176  000043                     	ds	1
   177                           pclatu	equ	0xFFB
   178                           pclath	equ	0xFFA
   179                           tblptru	equ	0xFF8
   180                           tblptrh	equ	0xFF7
   181                           tblptrl	equ	0xFF6
   182                           tablat	equ	0xFF5
   183                           prodh	equ	0xFF4
   184                           prodl	equ	0xFF3
   185                           postinc0	equ	0xFEE
   186                           fsr0h	equ	0xFEA
   187                           fsr0l	equ	0xFE9
   188                           wreg	equ	0xFE8
   189                           fsr1h	equ	0xFE2
   190                           fsr1l	equ	0xFE1
   191                           fsr2h	equ	0xFDA
   192                           fsr2l	equ	0xFD9
   193                           
   194                           	psect	cstackCOMRAM
   195  000001                     __pcstackCOMRAM:
   196                           	opt stack 0
   197  000001                     ??_highISR:
   198  000001                     
   199                           ; 2 bytes @ 0x0
   200  000001                     	ds	14
   201  00000F                     ??_lowISR:
   202                           
   203                           ; 0 bytes @ 0xE
   204  00000F                     	ds	17
   205  000020                     ??_Delay10KTCYx:
   206  000020                     ??_OpenPWM2:
   207  000020                     ?_abs:
   208                           	opt stack 0
   209  000020                     ?___lmul:
   210                           	opt stack 0
   211  000020                     setLED@value:
   212                           	opt stack 0
   213  000020                     OpenPWM1@period:
   214                           	opt stack 0
   215  000020                     OpenTimer2@config:
   216                           	opt stack 0
   217  000020                     Delay1KTCYx@unit:
   218                           	opt stack 0
   219  000020                     abs@a:
   220                           	opt stack 0
   221  000020                     srand@x:
   222                           	opt stack 0
   223  000020                     ___lmul@multiplier:
   224                           	opt stack 0
   225                           
   226                           ; 4 bytes @ 0x1F
   227  000020                     	ds	1
   228  000021                     OpenPWM2@period:
   229                           	opt stack 0
   230  000021                     Delay10KTCYx@unit:
   231                           	opt stack 0
   232  000021                     DetectIRPD30@action:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x20
   236  000021                     	ds	1
   237  000022                     ??_abs:
   238  000022                     OpenPWM2@ccp2mx:
   239                           	opt stack 0
   240  000022                     delay_ms@x:
   241                           	opt stack 0
   242  000022                     delay_s@x:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x21
   246  000022                     	ds	1
   247  000023                     DetectIRPD30@x:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x22
   251  000023                     	ds	1
   252  000024                     ??_delay_ms:
   253  000024                     DetectIRPD30@i:
   254                           	opt stack 0
   255  000024                     SetDCPWM1@dutycycle:
   256                           	opt stack 0
   257  000024                     SetDCPWM2@dutycycle:
   258                           	opt stack 0
   259  000024                     ___lmul@multiplicand:
   260                           	opt stack 0
   261                           
   262                           ; 4 bytes @ 0x23
   263  000024                     	ds	2
   264  000026                     ??_SetDCPWM1:
   265  000026                     ??_SetDCPWM2:
   266  000026                     DetectIRPD30@i_764:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x25
   270  000026                     	ds	2
   271  000028                     DetectIRPD30@right:
   272                           	opt stack 0
   273  000028                     SetDCPWM1@DCycle:
   274                           	opt stack 0
   275  000028                     SetDCPWM2@DCycle:
   276                           	opt stack 0
   277  000028                     ___lmul@product:
   278                           	opt stack 0
   279                           
   280                           ; 4 bytes @ 0x27
   281  000028                     	ds	2
   282  00002A                     DetectIRPD30@left:
   283                           	opt stack 0
   284  00002A                     Runlchb100@starboard:
   285                           	opt stack 0
   286                           
   287                           ; 2 bytes @ 0x29
   288  00002A                     	ds	2
   289  00002C                     ?_rand:
   290                           	opt stack 0
   291  00002C                     Runlchb100@port:
   292                           	opt stack 0
   293                           
   294                           ; 2 bytes @ 0x2B
   295  00002C                     	ds	2
   296  00002E                     ??_rand:
   297  00002E                     
   298                           ; 0 bytes @ 0x2D
   299  00002E                     	ds	4
   300  000032                     
   301                           ; 2 bytes @ 0x31
   302  000032                     	ds	2
   303  000034                     
   304                           ; 3 bytes @ 0x33
   305  000034                     	ds	3
   306  000037                     main@x:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0x36
   310  000037                     	ds	2
   311  000039                     main@i:
   312                           	opt stack 0
   313                           
   314                           ; 2 bytes @ 0x38
   315  000039                     	ds	2
   316  00003B                     main@state:
   317                           	opt stack 0
   318                           
   319                           ; 1 bytes @ 0x3A
   320  00003B                     	ds	1
   321  00003C                     main@action:
   322                           	opt stack 0
   323                           
   324                           ; 1 bytes @ 0x3B
   325  00003C                     	ds	1
   326                           pclatu	equ	0xFFB
   327                           pclath	equ	0xFFA
   328                           tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           prodh	equ	0xFF4
   333                           prodl	equ	0xFF3
   334                           postinc0	equ	0xFEE
   335                           fsr0h	equ	0xFEA
   336                           fsr0l	equ	0xFE9
   337                           wreg	equ	0xFE8
   338                           fsr1h	equ	0xFE2
   339                           fsr1l	equ	0xFE1
   340                           fsr2h	equ	0xFDA
   341                           fsr2l	equ	0xFD9
   342                           
   343 ;;
   344 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   345 ;;
   346 ;; *************** function _main *****************
   347 ;; Defined at:
   348 ;;		line 29 in file "Main.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;  argc            2   49[COMRAM] int 
   351 ;;  argv            3   51[COMRAM] PTR PTR unsigned char 
   352 ;; Auto vars:     Size  Location     Type
   353 ;;  action          1   59[COMRAM] unsigned char 
   354 ;;  i               2   56[COMRAM] int 
   355 ;;  x               2   54[COMRAM] int 
   356 ;;  state           1   58[COMRAM] enum E4183
   357 ;; Return value:  Size  Location     Type
   358 ;;                  2   49[COMRAM] int 
   359 ;; Registers used:
   360 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMRAM   BANK0   BANK1
   366 ;;      Params:         5       0       0
   367 ;;      Locals:         6       0       0
   368 ;;      Temps:          0       0       0
   369 ;;      Totals:        11       0       0
   370 ;;Total ram usage:       11 bytes
   371 ;; Hardware stack levels required when called:    4
   372 ;; This function calls:
   373 ;;		_Closelchb100
   374 ;;		_DetectIRPD30
   375 ;;		_OpenIRPD30
   376 ;;		_Openlchb100
   377 ;;		_Runlchb100
   378 ;;		_delay_ms
   379 ;;		_delay_s
   380 ;;		_openLED
   381 ;;		_rand
   382 ;;		_setLED
   383 ;; This function is called by:
   384 ;;		Startup code after reset
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388                           	psect	text0
   389  0000A6                     __ptext0:
   390                           	opt stack 0
   391  0000A6                     _main:
   392                           	opt stack 27
   393                           
   394                           ;Main.c: 32: openLED();
   395                           
   396                           ;incstack = 0
   397  0000A6  EC65  F003         	call	_openLED	;wreg free
   398                           
   399                           ;Main.c: 33: OpenIRPD30();
   400  0000AA  EC56  F003         	call	_OpenIRPD30	;wreg free
   401                           
   402                           ;Main.c: 34: Openlchb100();
   403  0000AE  EC04  F003         	call	_Openlchb100	;wreg free
   404  0000B2                     
   405                           ;Main.c: 36: enum STATE state = start;
   406  0000B2  0E00               	movlw	0
   407  0000B4                     L5:
   408  0000B4  6E3B               	movwf	main@state,c
   409  0000B6                     l1085:
   410                           
   411                           ;Main.c: 39: int x = 0;
   412  0000B6  0E00               	movlw	0
   413  0000B8  6E38               	movwf	main@x+1,c
   414  0000BA  0E00               	movlw	0
   415  0000BC  6E37               	movwf	main@x,c
   416                           
   417                           ;Main.c: 40: for (int i = 0; i < 1000; i++) {
   418  0000BE  0E00               	movlw	0
   419  0000C0  6E3A               	movwf	main@i+1,c
   420  0000C2  0E00               	movlw	0
   421  0000C4  6E39               	movwf	main@i,c
   422  0000C6  503A               	movf	main@i+1,w,c
   423  0000C8  0A80               	xorlw	128
   424  0000CA  0F7D               	addlw	-131
   425  0000CC  0EE8               	movlw	232
   426  0000CE  B4D8               	btfsc	status,2,c
   427  0000D0  5C39               	subwf	main@i,w,c
   428  0000D2  B0D8               	btfsc	status,0,c
   429  0000D4  D09B               	goto	l1167
   430                           
   431                           ;Main.c: 41: x++;
   432  0000D6  4A37               	infsnz	main@x,f,c
   433  0000D8  2A38               	incf	main@x+1,f,c
   434  0000DA  4A39               	infsnz	main@i,f,c
   435  0000DC  2A3A               	incf	main@i+1,f,c
   436  0000DE  D7F3               	goto	L1
   437  0000E0                     l1097:
   438                           
   439                           ;Main.c: 46: unsigned char action = DetectIRPD30();
   440  0000E0  EC23  F001         	call	_DetectIRPD30	;wreg free
   441  0000E4  6E3C               	movwf	main@action,c
   442                           
   443                           ;Main.c: 47: if (action == 0b00000001) {
   444  0000E6  043C               	decf	main@action,w,c
   445  0000E8  A4D8               	btfss	status,2,c
   446  0000EA  D002               	goto	l1103
   447                           
   448                           ;Main.c: 48: state = left_start;
   449  0000EC  0E05               	movlw	5
   450  0000EE  D010               	goto	L4
   451  0000F0                     l1103:
   452  0000F0  503C               	movf	main@action,w,c
   453  0000F2  0A02               	xorlw	2
   454  0000F4  A4D8               	btfss	status,2,c
   455  0000F6  D002               	goto	l1107
   456                           
   457                           ;Main.c: 50: state = right_start;
   458  0000F8  0E06               	movlw	6
   459  0000FA  D00A               	goto	L4
   460  0000FC                     l1107:
   461  0000FC  503C               	movf	main@action,w,c
   462  0000FE  0A03               	xorlw	3
   463  000100  A4D8               	btfss	status,2,c
   464  000102  D002               	goto	l1111
   465                           
   466                           ;Main.c: 52: state = straight_start;
   467  000104  0E07               	movlw	7
   468  000106  D004               	goto	L4
   469  000108                     l1111:
   470  000108  283C               	incf	main@action,w,c
   471  00010A  A4D8               	btfss	status,2,c
   472  00010C  D002               	goto	l1115
   473                           
   474                           ;Main.c: 54: state = error;
   475  00010E  0E04               	movlw	4
   476  000110                     L4:
   477  000110  6E3B               	movwf	main@state,c
   478  000112                     l1115:
   479                           
   480                           ;Main.c: 55: }
   481                           ;Main.c: 56: setLED(action);
   482  000112  503C               	movf	main@action,w,c
   483  000114  EC61  F003         	call	_setLED
   484                           
   485                           ;Main.c: 57: break;
   486  000118  D7CE               	goto	l1085
   487  00011A                     l1117:
   488                           
   489                           ;Main.c: 60: delay_s(2);
   490  00011A  0E00               	movlw	0
   491  00011C  6E23               	movwf	delay_s@x+1,c
   492  00011E  0E02               	movlw	2
   493  000120  6E22               	movwf	delay_s@x,c
   494  000122  EC50  F003         	call	_delay_s	;wreg free
   495                           
   496                           ;Main.c: 61: Closelchb100();
   497  000126  EC5C  F003         	call	_Closelchb100	;wreg free
   498                           
   499                           ;Main.c: 64: if ((rand() % 2) < 1) {
   500  00012A  EC20  F002         	call	_rand	;wreg free
   501  00012E  0E01               	movlw	1
   502  000130  162C               	andwf	?_rand,f,c
   503  000132  0E00               	movlw	0
   504  000134  162D               	andwf	?_rand+1,f,c
   505  000136  502D               	movf	?_rand+1,w,c
   506  000138  0A80               	xorlw	128
   507  00013A  6EF3               	movwf	prodl,c
   508  00013C  0E80               	movlw	128
   509  00013E  5CF3               	subwf	prodl,w,c
   510  000140  0E01               	movlw	1
   511  000142  B4D8               	btfsc	status,2,c
   512  000144  5C2C               	subwf	?_rand,w,c
   513  000146  B0D8               	btfsc	status,0,c
   514  000148  D002               	goto	l1125
   515                           
   516                           ;Main.c: 65: state = right_start;
   517  00014A  0E06               	movlw	6
   518  00014C  D7B3               	goto	L5
   519  00014E                     l1125:
   520                           
   521                           ;Main.c: 67: state = left_start;
   522  00014E  0E05               	movlw	5
   523  000150  D7B1               	goto	L5
   524  000152                     l1127:
   525                           
   526                           ;Main.c: 74: delay_s(1);
   527  000152  0E00               	movlw	0
   528  000154  6E23               	movwf	delay_s@x+1,c
   529  000156  0E01               	movlw	1
   530  000158  6E22               	movwf	delay_s@x,c
   531  00015A  EC50  F003         	call	_delay_s	;wreg free
   532                           
   533                           ;Main.c: 75: Closelchb100();
   534  00015E  EC5C  F003         	call	_Closelchb100	;wreg free
   535  000162  D008               	goto	L6
   536  000164                     l1133:
   537                           
   538                           ;Main.c: 80: delay_s(1);
   539  000164  0E00               	movlw	0
   540  000166  6E23               	movwf	delay_s@x+1,c
   541  000168  0E01               	movlw	1
   542  00016A  6E22               	movwf	delay_s@x,c
   543  00016C  EC50  F003         	call	_delay_s	;wreg free
   544                           
   545                           ;Main.c: 81: Closelchb100();
   546  000170  EC5C  F003         	call	_Closelchb100	;wreg free
   547  000174                     L6:
   548                           
   549                           ;Main.c: 82: state = forward;
   550  000174  0E08               	movlw	8
   551  000176  D79E               	goto	L5
   552  000178                     l1139:
   553                           
   554                           ;Main.c: 87: setLED(0b11111111);
   555  000178  0EFF               	movlw	255
   556  00017A  EC61  F003         	call	_setLED
   557                           
   558                           ;Main.c: 88: delay_ms(500);
   559  00017E  0E01               	movlw	1
   560  000180  6E23               	movwf	delay_ms@x+1,c
   561  000182  0EF4               	movlw	244
   562  000184  6E22               	movwf	delay_ms@x,c
   563  000186  ECF3  F002         	call	_delay_ms	;wreg free
   564                           
   565                           ;Main.c: 89: setLED(0b00000000);
   566  00018A  0E00               	movlw	0
   567  00018C  EC61  F003         	call	_setLED
   568                           
   569                           ;Main.c: 90: delay_ms(500);
   570  000190  0E01               	movlw	1
   571  000192  6E23               	movwf	delay_ms@x+1,c
   572  000194  0EF4               	movlw	244
   573  000196  6E22               	movwf	delay_ms@x,c
   574  000198  ECF3  F002         	call	_delay_ms	;wreg free
   575  00019C  D7ED               	goto	l1139
   576  00019E                     l1145:
   577                           
   578                           ;Main.c: 94: Runlchb100(230, 230);
   579  00019E  0E00               	movlw	0
   580  0001A0  6E2B               	movwf	Runlchb100@starboard+1,c
   581  0001A2  0EE6               	movlw	230
   582  0001A4  6E2A               	movwf	Runlchb100@starboard,c
   583  0001A6  0E00               	movlw	0
   584  0001A8  6E2D               	movwf	Runlchb100@port+1,c
   585  0001AA  0EE6               	movlw	230
   586  0001AC  6E2C               	movwf	Runlchb100@port,c
   587  0001AE  EC90  F001         	call	_Runlchb100	;wreg free
   588                           
   589                           ;Main.c: 95: state = straight;
   590  0001B2  0E01               	movlw	1
   591  0001B4  D77F               	goto	L5
   592  0001B6                     l1149:
   593                           
   594                           ;Main.c: 99: Runlchb100(230, -230);
   595  0001B6  0E00               	movlw	0
   596  0001B8  6E2B               	movwf	Runlchb100@starboard+1,c
   597  0001BA  0EE6               	movlw	230
   598  0001BC  6E2A               	movwf	Runlchb100@starboard,c
   599  0001BE  0EFF               	movlw	255
   600  0001C0  6E2D               	movwf	Runlchb100@port+1,c
   601  0001C2  0E1A               	movlw	26
   602  0001C4  6E2C               	movwf	Runlchb100@port,c
   603  0001C6  EC90  F001         	call	_Runlchb100	;wreg free
   604                           
   605                           ;Main.c: 100: state = left;
   606  0001CA  0E02               	movlw	2
   607  0001CC  D773               	goto	L5
   608  0001CE                     l1153:
   609                           
   610                           ;Main.c: 104: Runlchb100(-230, 230);
   611  0001CE  0EFF               	movlw	255
   612  0001D0  6E2B               	movwf	Runlchb100@starboard+1,c
   613  0001D2  0E1A               	movlw	26
   614  0001D4  6E2A               	movwf	Runlchb100@starboard,c
   615  0001D6  0E00               	movlw	0
   616  0001D8  6E2D               	movwf	Runlchb100@port+1,c
   617  0001DA  0EE6               	movlw	230
   618  0001DC  6E2C               	movwf	Runlchb100@port,c
   619  0001DE  EC90  F001         	call	_Runlchb100	;wreg free
   620                           
   621                           ;Main.c: 105: state = right;
   622  0001E2  0E03               	movlw	3
   623  0001E4  D767               	goto	L5
   624  0001E6                     l1157:
   625                           
   626                           ;Main.c: 109: Runlchb100(230, 230);
   627  0001E6  0E00               	movlw	0
   628  0001E8  6E2B               	movwf	Runlchb100@starboard+1,c
   629  0001EA  0EE6               	movlw	230
   630  0001EC  6E2A               	movwf	Runlchb100@starboard,c
   631  0001EE  0E00               	movlw	0
   632  0001F0  6E2D               	movwf	Runlchb100@port+1,c
   633  0001F2  0EE6               	movlw	230
   634  0001F4  6E2C               	movwf	Runlchb100@port,c
   635  0001F6  EC90  F001         	call	_Runlchb100	;wreg free
   636                           
   637                           ;Main.c: 110: delay_s(2);
   638  0001FA  0E00               	movlw	0
   639  0001FC  6E23               	movwf	delay_s@x+1,c
   640  0001FE  0E02               	movlw	2
   641  000200  6E22               	movwf	delay_s@x,c
   642  000202  EC50  F003         	call	_delay_s	;wreg free
   643                           
   644                           ;Main.c: 111: Closelchb100();
   645  000206  EC5C  F003         	call	_Closelchb100	;wreg free
   646  00020A  D753               	goto	L7
   647  00020C                     l1167:
   648  00020C  503B               	movf	main@state,w,c
   649                           
   650                           ; Switch size 1, requested type "space"
   651                           ; Number of cases is 9, Range of values is 0 to 8
   652                           ; switch strategies available:
   653                           ; Name         Instructions Cycles
   654                           ; simple_byte           28    15 (average)
   655                           ;	Chosen strategy is simple_byte
   656  00020E  0A00               	xorlw	0	; case 0
   657  000210  B4D8               	btfsc	status,2,c
   658  000212  D766               	goto	l1097
   659  000214  0A01               	xorlw	1	; case 1
   660  000216  B4D8               	btfsc	status,2,c
   661  000218  D780               	goto	l1117
   662  00021A  0A03               	xorlw	3	; case 2
   663  00021C  B4D8               	btfsc	status,2,c
   664  00021E  D799               	goto	l1127
   665  000220  0A01               	xorlw	1	; case 3
   666  000222  B4D8               	btfsc	status,2,c
   667  000224  D79F               	goto	l1133
   668  000226  0A07               	xorlw	7	; case 4
   669  000228  B4D8               	btfsc	status,2,c
   670  00022A  D7A6               	goto	l1139
   671  00022C  0A01               	xorlw	1	; case 5
   672  00022E  B4D8               	btfsc	status,2,c
   673  000230  D7C2               	goto	l1149
   674  000232  0A03               	xorlw	3	; case 6
   675  000234  B4D8               	btfsc	status,2,c
   676  000236  D7CB               	goto	l1153
   677  000238  0A01               	xorlw	1	; case 7
   678  00023A  B4D8               	btfsc	status,2,c
   679  00023C  D7B0               	goto	l1145
   680  00023E  0A0F               	xorlw	15	; case 8
   681  000240  B4D8               	btfsc	status,2,c
   682  000242  D7D1               	goto	l1157
   683  000244  D738               	goto	l1085
   684  000246                     __end_of_main:
   685                           	opt stack 0
   686                           pclatu	equ	0xFFB
   687                           pclath	equ	0xFFA
   688                           tblptru	equ	0xFF8
   689                           tblptrh	equ	0xFF7
   690                           tblptrl	equ	0xFF6
   691                           tablat	equ	0xFF5
   692                           prodh	equ	0xFF4
   693                           prodl	equ	0xFF3
   694                           postinc0	equ	0xFEE
   695                           fsr0h	equ	0xFEA
   696                           fsr0l	equ	0xFE9
   697                           wreg	equ	0xFE8
   698                           fsr1h	equ	0xFE2
   699                           fsr1l	equ	0xFE1
   700                           fsr2h	equ	0xFDA
   701                           fsr2l	equ	0xFD9
   702                           status	equ	0xFD8
   703                           
   704 ;; *************** function _setLED *****************
   705 ;; Defined at:
   706 ;;		line 47 in file "led.h"
   707 ;; Parameters:    Size  Location     Type
   708 ;;  value           1    wreg     unsigned char 
   709 ;; Auto vars:     Size  Location     Type
   710 ;;  value           1   31[COMRAM] unsigned char 
   711 ;; Return value:  Size  Location     Type
   712 ;;		None               void
   713 ;; Registers used:
   714 ;;		wreg
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMRAM   BANK0   BANK1
   720 ;;      Params:         0       0       0
   721 ;;      Locals:         1       0       0
   722 ;;      Temps:          0       0       0
   723 ;;      Totals:         1       0       0
   724 ;;Total ram usage:        1 bytes
   725 ;; Hardware stack levels used:    1
   726 ;; Hardware stack levels required when called:    2
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           	psect	text1
   735  0006C2                     __ptext1:
   736                           	opt stack 0
   737  0006C2                     _setLED:
   738                           	opt stack 28
   739                           
   740                           ;incstack = 0
   741                           ;setLED@value stored from wreg
   742  0006C2  6E20               	movwf	setLED@value,c
   743                           
   744                           ;led.h: 48: LATD = value;
   745  0006C4  C020  FF8C         	movff	setLED@value,3980	;volatile
   746  0006C8  0012               	return	
   747  0006CA                     __end_of_setLED:
   748                           	opt stack 0
   749                           pclatu	equ	0xFFB
   750                           pclath	equ	0xFFA
   751                           tblptru	equ	0xFF8
   752                           tblptrh	equ	0xFF7
   753                           tblptrl	equ	0xFF6
   754                           tablat	equ	0xFF5
   755                           prodh	equ	0xFF4
   756                           prodl	equ	0xFF3
   757                           postinc0	equ	0xFEE
   758                           fsr0h	equ	0xFEA
   759                           fsr0l	equ	0xFE9
   760                           wreg	equ	0xFE8
   761                           fsr1h	equ	0xFE2
   762                           fsr1l	equ	0xFE1
   763                           fsr2h	equ	0xFDA
   764                           fsr2l	equ	0xFD9
   765                           status	equ	0xFD8
   766                           
   767 ;; *************** function _rand *****************
   768 ;; Defined at:
   769 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\rand.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;		None
   772 ;; Auto vars:     Size  Location     Type
   773 ;;		None
   774 ;; Return value:  Size  Location     Type
   775 ;;                  2   43[COMRAM] int 
   776 ;; Registers used:
   777 ;;		wreg, status,2, status,0, cstack
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMRAM   BANK0   BANK1
   783 ;;      Params:         2       0       0
   784 ;;      Locals:         0       0       0
   785 ;;      Temps:          4       0       0
   786 ;;      Totals:         6       0       0
   787 ;;Total ram usage:        6 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    3
   790 ;; This function calls:
   791 ;;		___lmul
   792 ;;		_srand
   793 ;; This function is called by:
   794 ;;		_main
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           	psect	text2
   799  000440                     __ptext2:
   800                           	opt stack 0
   801  000440                     _rand:
   802                           	opt stack 27
   803                           
   804                           ;incstack = 0
   805  000440  6643               	tstfsz	_randf,c
   806  000442  D006               	goto	l1051
   807  000444  0E00               	movlw	0
   808  000446  6E21               	movwf	srand@x+1,c
   809  000448  0E01               	movlw	1
   810  00044A  6E20               	movwf	srand@x,c
   811  00044C  EC36  F003         	call	_srand	;wreg free
   812  000450                     l1051:
   813  000450  C03D  F020         	movff	_randx,___lmul@multiplier
   814  000454  C03E  F021         	movff	_randx+1,___lmul@multiplier+1
   815  000458  C03F  F022         	movff	_randx+2,___lmul@multiplier+2
   816  00045C  C040  F023         	movff	_randx+3,___lmul@multiplier+3
   817  000460  0E6D               	movlw	109
   818  000462  6E24               	movwf	___lmul@multiplicand,c
   819  000464  0E4E               	movlw	78
   820  000466  6E25               	movwf	___lmul@multiplicand+1,c
   821  000468  0EC6               	movlw	198
   822  00046A  6E26               	movwf	___lmul@multiplicand+2,c
   823  00046C  0E41               	movlw	65
   824  00046E  6E27               	movwf	___lmul@multiplicand+3,c
   825  000470  EC55  F002         	call	___lmul	;wreg free
   826  000474  C020  F02E         	movff	?___lmul,??_rand
   827  000478  C021  F02F         	movff	?___lmul+1,??_rand+1
   828  00047C  C022  F030         	movff	?___lmul+2,??_rand+2
   829  000480  C023  F031         	movff	?___lmul+3,??_rand+3
   830  000484  0E39               	movlw	57
   831  000486  242E               	addwf	??_rand,w,c
   832  000488  6E3D               	movwf	_randx,c
   833  00048A  0E30               	movlw	48
   834  00048C  202F               	addwfc	??_rand+1,w,c
   835  00048E  6E3E               	movwf	_randx+1,c
   836  000490  0E00               	movlw	0
   837  000492  2030               	addwfc	??_rand+2,w,c
   838  000494  6E3F               	movwf	_randx+2,c
   839  000496  0E00               	movlw	0
   840  000498  2031               	addwfc	??_rand+3,w,c
   841  00049A  6E40               	movwf	_randx+3,c
   842  00049C  0EFF               	movlw	255
   843  00049E  143F               	andwf	(_randx+2)& (0+255),w,c
   844  0004A0  6E2C               	movwf	?_rand,c
   845  0004A2  0E7F               	movlw	127
   846  0004A4  1440               	andwf	(_randx+3)& (0+255),w,c
   847  0004A6  6E2D               	movwf	?_rand+1,c
   848  0004A8  0012               	return	
   849  0004AA                     __end_of_rand:
   850                           	opt stack 0
   851                           pclatu	equ	0xFFB
   852                           pclath	equ	0xFFA
   853                           tblptru	equ	0xFF8
   854                           tblptrh	equ	0xFF7
   855                           tblptrl	equ	0xFF6
   856                           tablat	equ	0xFF5
   857                           prodh	equ	0xFF4
   858                           prodl	equ	0xFF3
   859                           postinc0	equ	0xFEE
   860                           fsr0h	equ	0xFEA
   861                           fsr0l	equ	0xFE9
   862                           wreg	equ	0xFE8
   863                           fsr1h	equ	0xFE2
   864                           fsr1l	equ	0xFE1
   865                           fsr2h	equ	0xFDA
   866                           fsr2l	equ	0xFD9
   867                           status	equ	0xFD8
   868                           
   869 ;; *************** function _srand *****************
   870 ;; Defined at:
   871 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\rand.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;  x               2   31[COMRAM] unsigned int 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;		None
   876 ;; Return value:  Size  Location     Type
   877 ;;		None               void
   878 ;; Registers used:
   879 ;;		wreg, status,2
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1
   885 ;;      Params:         2       0       0
   886 ;;      Locals:         0       0       0
   887 ;;      Temps:          0       0       0
   888 ;;      Totals:         2       0       0
   889 ;;Total ram usage:        2 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    2
   892 ;; This function calls:
   893 ;;		Nothing
   894 ;; This function is called by:
   895 ;;		_rand
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text3
   900  00066C                     __ptext3:
   901                           	opt stack 0
   902  00066C                     _srand:
   903                           	opt stack 27
   904                           
   905                           ;incstack = 0
   906  00066C  C020  F03D         	movff	srand@x,_randx
   907  000670  C021  F03E         	movff	srand@x+1,_randx+1
   908  000674  6A3F               	clrf	_randx+2,c
   909  000676  6A40               	clrf	_randx+3,c
   910  000678  0E01               	movlw	1
   911  00067A  6E43               	movwf	_randf,c
   912  00067C  0012               	return	
   913  00067E                     __end_of_srand:
   914                           	opt stack 0
   915                           pclatu	equ	0xFFB
   916                           pclath	equ	0xFFA
   917                           tblptru	equ	0xFF8
   918                           tblptrh	equ	0xFF7
   919                           tblptrl	equ	0xFF6
   920                           tablat	equ	0xFF5
   921                           prodh	equ	0xFF4
   922                           prodl	equ	0xFF3
   923                           postinc0	equ	0xFEE
   924                           fsr0h	equ	0xFEA
   925                           fsr0l	equ	0xFE9
   926                           wreg	equ	0xFE8
   927                           fsr1h	equ	0xFE2
   928                           fsr1l	equ	0xFE1
   929                           fsr2h	equ	0xFDA
   930                           fsr2l	equ	0xFD9
   931                           status	equ	0xFD8
   932                           
   933 ;; *************** function ___lmul *****************
   934 ;; Defined at:
   935 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;  multiplier      4   31[COMRAM] unsigned long 
   938 ;;  multiplicand    4   35[COMRAM] unsigned long 
   939 ;; Auto vars:     Size  Location     Type
   940 ;;  product         4   39[COMRAM] unsigned long 
   941 ;; Return value:  Size  Location     Type
   942 ;;                  4   31[COMRAM] unsigned long 
   943 ;; Registers used:
   944 ;;		wreg, status,2, status,0
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1
   950 ;;      Params:         8       0       0
   951 ;;      Locals:         4       0       0
   952 ;;      Temps:          0       0       0
   953 ;;      Totals:        12       0       0
   954 ;;Total ram usage:       12 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; Hardware stack levels required when called:    2
   957 ;; This function calls:
   958 ;;		Nothing
   959 ;; This function is called by:
   960 ;;		_rand
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text4
   965  0004AA                     __ptext4:
   966                           	opt stack 0
   967  0004AA                     ___lmul:
   968                           	opt stack 27
   969                           
   970                           ;incstack = 0
   971  0004AA  0E00               	movlw	0
   972  0004AC  6E28               	movwf	___lmul@product,c
   973  0004AE  0E00               	movlw	0
   974  0004B0  6E29               	movwf	___lmul@product+1,c
   975  0004B2  0E00               	movlw	0
   976  0004B4  6E2A               	movwf	___lmul@product+2,c
   977  0004B6  0E00               	movlw	0
   978  0004B8  6E2B               	movwf	___lmul@product+3,c
   979  0004BA                     l901:
   980  0004BA  A020               	btfss	___lmul@multiplier,0,c
   981  0004BC  D008               	goto	l905
   982  0004BE  5024               	movf	___lmul@multiplicand,w,c
   983  0004C0  2628               	addwf	___lmul@product,f,c
   984  0004C2  5025               	movf	___lmul@multiplicand+1,w,c
   985  0004C4  2229               	addwfc	___lmul@product+1,f,c
   986  0004C6  5026               	movf	___lmul@multiplicand+2,w,c
   987  0004C8  222A               	addwfc	___lmul@product+2,f,c
   988  0004CA  5027               	movf	___lmul@multiplicand+3,w,c
   989  0004CC  222B               	addwfc	___lmul@product+3,f,c
   990  0004CE                     l905:
   991  0004CE  90D8               	bcf	status,0,c
   992  0004D0  3624               	rlcf	___lmul@multiplicand,f,c
   993  0004D2  3625               	rlcf	___lmul@multiplicand+1,f,c
   994  0004D4  3626               	rlcf	___lmul@multiplicand+2,f,c
   995  0004D6  3627               	rlcf	___lmul@multiplicand+3,f,c
   996  0004D8  90D8               	bcf	status,0,c
   997  0004DA  3223               	rrcf	___lmul@multiplier+3,f,c
   998  0004DC  3222               	rrcf	___lmul@multiplier+2,f,c
   999  0004DE  3221               	rrcf	___lmul@multiplier+1,f,c
  1000  0004E0  3220               	rrcf	___lmul@multiplier,f,c
  1001  0004E2  5023               	movf	___lmul@multiplier+3,w,c
  1002  0004E4  1020               	iorwf	___lmul@multiplier,w,c
  1003  0004E6  1021               	iorwf	___lmul@multiplier+1,w,c
  1004  0004E8  1022               	iorwf	___lmul@multiplier+2,w,c
  1005  0004EA  A4D8               	btfss	status,2,c
  1006  0004EC  D7E6               	goto	l901
  1007  0004EE  C028  F020         	movff	___lmul@product,?___lmul
  1008  0004F2  C029  F021         	movff	___lmul@product+1,?___lmul+1
  1009  0004F6  C02A  F022         	movff	___lmul@product+2,?___lmul+2
  1010  0004FA  C02B  F023         	movff	___lmul@product+3,?___lmul+3
  1011  0004FE  0012               	return	
  1012  000500                     __end_of___lmul:
  1013                           	opt stack 0
  1014                           pclatu	equ	0xFFB
  1015                           pclath	equ	0xFFA
  1016                           tblptru	equ	0xFF8
  1017                           tblptrh	equ	0xFF7
  1018                           tblptrl	equ	0xFF6
  1019                           tablat	equ	0xFF5
  1020                           prodh	equ	0xFF4
  1021                           prodl	equ	0xFF3
  1022                           postinc0	equ	0xFEE
  1023                           fsr0h	equ	0xFEA
  1024                           fsr0l	equ	0xFE9
  1025                           wreg	equ	0xFE8
  1026                           fsr1h	equ	0xFE2
  1027                           fsr1l	equ	0xFE1
  1028                           fsr2h	equ	0xFDA
  1029                           fsr2l	equ	0xFD9
  1030                           status	equ	0xFD8
  1031                           
  1032 ;; *************** function _openLED *****************
  1033 ;; Defined at:
  1034 ;;		line 28 in file "led.h"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;		None
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;		None               void
  1041 ;; Registers used:
  1042 ;;		wreg, status,2
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1
  1048 ;;      Params:         0       0       0
  1049 ;;      Locals:         0       0       0
  1050 ;;      Temps:          0       0       0
  1051 ;;      Totals:         0       0       0
  1052 ;;Total ram usage:        0 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:    2
  1055 ;; This function calls:
  1056 ;;		Nothing
  1057 ;; This function is called by:
  1058 ;;		_main
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           	psect	text5
  1063  0006CA                     __ptext5:
  1064                           	opt stack 0
  1065  0006CA                     _openLED:
  1066                           	opt stack 28
  1067                           
  1068                           ;led.h: 30: DDRD = 0;
  1069                           
  1070                           ;incstack = 0
  1071  0006CA  0E00               	movlw	0
  1072  0006CC  6E95               	movwf	3989,c	;volatile
  1073  0006CE  0012               	return	
  1074  0006D0                     __end_of_openLED:
  1075                           	opt stack 0
  1076                           pclatu	equ	0xFFB
  1077                           pclath	equ	0xFFA
  1078                           tblptru	equ	0xFF8
  1079                           tblptrh	equ	0xFF7
  1080                           tblptrl	equ	0xFF6
  1081                           tablat	equ	0xFF5
  1082                           prodh	equ	0xFF4
  1083                           prodl	equ	0xFF3
  1084                           postinc0	equ	0xFEE
  1085                           fsr0h	equ	0xFEA
  1086                           fsr0l	equ	0xFE9
  1087                           wreg	equ	0xFE8
  1088                           fsr1h	equ	0xFE2
  1089                           fsr1l	equ	0xFE1
  1090                           fsr2h	equ	0xFDA
  1091                           fsr2l	equ	0xFD9
  1092                           status	equ	0xFD8
  1093                           
  1094 ;; *************** function _delay_s *****************
  1095 ;; Defined at:
  1096 ;;		line 37 in file "delay.h"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;  x               2   33[COMRAM] unsigned int 
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;		None
  1101 ;; Return value:  Size  Location     Type
  1102 ;;		None               void
  1103 ;; Registers used:
  1104 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1
  1110 ;;      Params:         2       0       0
  1111 ;;      Locals:         0       0       0
  1112 ;;      Temps:          0       0       0
  1113 ;;      Totals:         2       0       0
  1114 ;;Total ram usage:        2 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; Hardware stack levels required when called:    3
  1117 ;; This function calls:
  1118 ;;		_Delay10KTCYx
  1119 ;; This function is called by:
  1120 ;;		_main
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text6
  1125  0006A0                     __ptext6:
  1126                           	opt stack 0
  1127  0006A0                     _delay_s:
  1128                           	opt stack 27
  1129                           
  1130                           ;delay.h: 38: Delay10KTCYx(x * 100);
  1131                           
  1132                           ;incstack = 0
  1133  0006A0  5022               	movf	delay_s@x,w,c
  1134  0006A2  0D64               	mullw	100
  1135  0006A4  50F3               	movf	prodl,w,c
  1136  0006A6  EC22  F003         	call	_Delay10KTCYx
  1137  0006AA  0012               	return	
  1138  0006AC                     __end_of_delay_s:
  1139                           	opt stack 0
  1140                           pclatu	equ	0xFFB
  1141                           pclath	equ	0xFFA
  1142                           tblptru	equ	0xFF8
  1143                           tblptrh	equ	0xFF7
  1144                           tblptrl	equ	0xFF6
  1145                           tablat	equ	0xFF5
  1146                           prodh	equ	0xFF4
  1147                           prodl	equ	0xFF3
  1148                           postinc0	equ	0xFEE
  1149                           fsr0h	equ	0xFEA
  1150                           fsr0l	equ	0xFE9
  1151                           wreg	equ	0xFE8
  1152                           fsr1h	equ	0xFE2
  1153                           fsr1l	equ	0xFE1
  1154                           fsr2h	equ	0xFDA
  1155                           fsr2l	equ	0xFD9
  1156                           status	equ	0xFD8
  1157                           
  1158 ;; *************** function _delay_ms *****************
  1159 ;; Defined at:
  1160 ;;		line 27 in file "delay.h"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;  x               2   33[COMRAM] unsigned int 
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;		None               void
  1167 ;; Registers used:
  1168 ;;		wreg, status,2, status,0, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1
  1174 ;;      Params:         2       0       0
  1175 ;;      Locals:         0       0       0
  1176 ;;      Temps:          2       0       0
  1177 ;;      Totals:         4       0       0
  1178 ;;Total ram usage:        4 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; Hardware stack levels required when called:    3
  1181 ;; This function calls:
  1182 ;;		_Delay10KTCYx
  1183 ;; This function is called by:
  1184 ;;		_main
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text7
  1189  0005E6                     __ptext7:
  1190                           	opt stack 0
  1191  0005E6                     _delay_ms:
  1192                           	opt stack 27
  1193                           
  1194                           ;delay.h: 28: Delay10KTCYx(x / 8);
  1195                           
  1196                           ;incstack = 0
  1197  0005E6  C022  F024         	movff	delay_ms@x,??_delay_ms
  1198  0005EA  C023  F025         	movff	delay_ms@x+1,??_delay_ms+1
  1199  0005EE  90D8               	bcf	status,0,c
  1200  0005F0  3225               	rrcf	??_delay_ms+1,f,c
  1201  0005F2  3224               	rrcf	??_delay_ms,f,c
  1202  0005F4  90D8               	bcf	status,0,c
  1203  0005F6  3225               	rrcf	??_delay_ms+1,f,c
  1204  0005F8  3224               	rrcf	??_delay_ms,f,c
  1205  0005FA  90D8               	bcf	status,0,c
  1206  0005FC  3225               	rrcf	??_delay_ms+1,f,c
  1207  0005FE  3224               	rrcf	??_delay_ms,f,c
  1208  000600  5024               	movf	??_delay_ms,w,c
  1209  000602  EC22  F003         	call	_Delay10KTCYx
  1210  000606  0012               	return	
  1211  000608                     __end_of_delay_ms:
  1212                           	opt stack 0
  1213                           pclatu	equ	0xFFB
  1214                           pclath	equ	0xFFA
  1215                           tblptru	equ	0xFF8
  1216                           tblptrh	equ	0xFF7
  1217                           tblptrl	equ	0xFF6
  1218                           tablat	equ	0xFF5
  1219                           prodh	equ	0xFF4
  1220                           prodl	equ	0xFF3
  1221                           postinc0	equ	0xFEE
  1222                           fsr0h	equ	0xFEA
  1223                           fsr0l	equ	0xFE9
  1224                           wreg	equ	0xFE8
  1225                           fsr1h	equ	0xFE2
  1226                           fsr1l	equ	0xFE1
  1227                           fsr2h	equ	0xFDA
  1228                           fsr2l	equ	0xFD9
  1229                           status	equ	0xFD8
  1230                           
  1231 ;; *************** function _Delay10KTCYx *****************
  1232 ;; Defined at:
  1233 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d10ktcyx.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;  unit            1    wreg     unsigned char 
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;  unit            1   32[COMRAM] unsigned char 
  1238 ;; Return value:  Size  Location     Type
  1239 ;;		None               void
  1240 ;; Registers used:
  1241 ;;		wreg
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1
  1247 ;;      Params:         0       0       0
  1248 ;;      Locals:         1       0       0
  1249 ;;      Temps:          1       0       0
  1250 ;;      Totals:         2       0       0
  1251 ;;Total ram usage:        2 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; Hardware stack levels required when called:    2
  1254 ;; This function calls:
  1255 ;;		Nothing
  1256 ;; This function is called by:
  1257 ;;		_delay_ms
  1258 ;;		_delay_s
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text8
  1263  000644                     __ptext8:
  1264                           	opt stack 0
  1265  000644                     _Delay10KTCYx:
  1266                           	opt stack 27
  1267                           
  1268                           ;incstack = 0
  1269                           ;Delay10KTCYx@unit stored from wreg
  1270  000644  6E21               	movwf	Delay10KTCYx@unit,c
  1271  000646                     l464:
  1272  000646  0E0D               	movlw	13
  1273  000648  6E20               	movwf	??_Delay10KTCYx& (0+255),c
  1274  00064A  0EFC               	movlw	252
  1275  00064C                     u407:
  1276  00064C  2EE8               	decfsz	wreg,f,c
  1277  00064E  D7FE               	goto	u407
  1278  000650  2E20               	decfsz	??_Delay10KTCYx& (0+255),f,c
  1279  000652  D7FC               	goto	u407
  1280  000654  2E21               	decfsz	Delay10KTCYx@unit,f,c
  1281  000656  D7F7               	goto	l464
  1282  000658  0012               	return	
  1283  00065A                     __end_of_Delay10KTCYx:
  1284                           	opt stack 0
  1285                           pclatu	equ	0xFFB
  1286                           pclath	equ	0xFFA
  1287                           tblptru	equ	0xFF8
  1288                           tblptrh	equ	0xFF7
  1289                           tblptrl	equ	0xFF6
  1290                           tablat	equ	0xFF5
  1291                           prodh	equ	0xFF4
  1292                           prodl	equ	0xFF3
  1293                           postinc0	equ	0xFEE
  1294                           fsr0h	equ	0xFEA
  1295                           fsr0l	equ	0xFE9
  1296                           wreg	equ	0xFE8
  1297                           fsr1h	equ	0xFE2
  1298                           fsr1l	equ	0xFE1
  1299                           fsr2h	equ	0xFDA
  1300                           fsr2l	equ	0xFD9
  1301                           status	equ	0xFD8
  1302                           
  1303 ;; *************** function _Runlchb100 *****************
  1304 ;; Defined at:
  1305 ;;		line 104 in file "lcbh100.h"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  starboard       2   41[COMRAM] int 
  1308 ;;  port            2   43[COMRAM] int 
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;		None
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  2   41[COMRAM] int 
  1313 ;; Registers used:
  1314 ;;		wreg, status,2, status,0, prodl, cstack
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK0   BANK1
  1320 ;;      Params:         4       0       0
  1321 ;;      Locals:         0       0       0
  1322 ;;      Temps:          0       0       0
  1323 ;;      Totals:         4       0       0
  1324 ;;Total ram usage:        4 bytes
  1325 ;; Hardware stack levels used:    1
  1326 ;; Hardware stack levels required when called:    3
  1327 ;; This function calls:
  1328 ;;		_Closelchb100
  1329 ;;		_SetDCPWM1
  1330 ;;		_SetDCPWM2
  1331 ;;		_abs
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text9
  1338  000320                     __ptext9:
  1339                           	opt stack 0
  1340  000320                     _Runlchb100:
  1341                           	opt stack 27
  1342                           
  1343                           ;lcbh100.h: 105: Closelchb100();
  1344                           
  1345                           ;incstack = 0
  1346  000320  EC5C  F003         	call	_Closelchb100	;wreg free
  1347                           
  1348                           ;lcbh100.h: 108: if (port >= 0 && starboard >= 0) {
  1349  000324  AE2D               	btfss	Runlchb100@port+1,7,c
  1350  000326  BE2B               	btfsc	Runlchb100@starboard+1,7,c
  1351  000328  D003               	goto	l110
  1352                           
  1353                           ;lcbh100.h: 109: LATAbits.LATA0 = 1;
  1354  00032A  8089               	bsf	3977,0,c	;volatile
  1355                           
  1356                           ;lcbh100.h: 110: LATAbits.LATA1 = 0;
  1357  00032C  9289               	bcf	3977,1,c	;volatile
  1358  00032E  D01C               	goto	L8
  1359  000330                     l110:
  1360                           
  1361                           ;lcbh100.h: 116: else if (port >= 0 && starboard < 0) {
  1362  000330  BE2D               	btfsc	Runlchb100@port+1,7,c
  1363  000332  D00D               	goto	l1033
  1364  000334  502B               	movf	Runlchb100@starboard+1,w,c
  1365  000336  0A80               	xorlw	128
  1366  000338  6EF3               	movwf	prodl,c
  1367  00033A  0E80               	movlw	128
  1368  00033C  5CF3               	subwf	prodl,w,c
  1369  00033E  0E00               	movlw	0
  1370  000340  B4D8               	btfsc	status,2,c
  1371  000342  5C2A               	subwf	Runlchb100@starboard,w,c
  1372  000344  B0D8               	btfsc	status,0,c
  1373  000346  D003               	goto	l1033
  1374                           
  1375                           ;lcbh100.h: 117: LATAbits.LATA0 = 1;
  1376  000348  8089               	bsf	3977,0,c	;volatile
  1377                           
  1378                           ;lcbh100.h: 118: LATAbits.LATA1 = 0;
  1379  00034A  9289               	bcf	3977,1,c	;volatile
  1380  00034C  D026               	goto	L9
  1381  00034E                     l1033:
  1382                           
  1383                           ;lcbh100.h: 124: else if (port < 0 && starboard >= 0) {
  1384  00034E  502D               	movf	Runlchb100@port+1,w,c
  1385  000350  0A80               	xorlw	128
  1386  000352  6EF3               	movwf	prodl,c
  1387  000354  0E80               	movlw	128
  1388  000356  5CF3               	subwf	prodl,w,c
  1389  000358  0E00               	movlw	0
  1390  00035A  B4D8               	btfsc	status,2,c
  1391  00035C  5C2C               	subwf	Runlchb100@port,w,c
  1392  00035E  A0D8               	btfss	status,0,c
  1393  000360  BE2B               	btfsc	Runlchb100@starboard+1,7,c
  1394  000362  D005               	goto	l1039
  1395                           
  1396                           ;lcbh100.h: 125: LATAbits.LATA0 = 0;
  1397  000364  9089               	bcf	3977,0,c	;volatile
  1398                           
  1399                           ;lcbh100.h: 126: LATAbits.LATA1 = 1;
  1400  000366  8289               	bsf	3977,1,c	;volatile
  1401  000368                     L8:
  1402                           
  1403                           ;lcbh100.h: 127: LATAbits.LATA2 = 1;
  1404  000368  8489               	bsf	3977,2,c	;volatile
  1405                           
  1406                           ;lcbh100.h: 128: LATAbits.LATA3 = 0;
  1407  00036A  9689               	bcf	3977,3,c	;volatile
  1408                           
  1409                           ;lcbh100.h: 130: }
  1410  00036C  D018               	goto	l1045
  1411  00036E                     l1039:
  1412                           
  1413                           ;lcbh100.h: 132: else if (port < 0 && starboard < 0) {
  1414  00036E  502D               	movf	Runlchb100@port+1,w,c
  1415  000370  0A80               	xorlw	128
  1416  000372  6EF3               	movwf	prodl,c
  1417  000374  0E80               	movlw	128
  1418  000376  5CF3               	subwf	prodl,w,c
  1419  000378  0E00               	movlw	0
  1420  00037A  B4D8               	btfsc	status,2,c
  1421  00037C  5C2C               	subwf	Runlchb100@port,w,c
  1422  00037E  B0D8               	btfsc	status,0,c
  1423  000380  D00E               	goto	l1045
  1424  000382  502B               	movf	Runlchb100@starboard+1,w,c
  1425  000384  0A80               	xorlw	128
  1426  000386  6EF3               	movwf	prodl,c
  1427  000388  0E80               	movlw	128
  1428  00038A  5CF3               	subwf	prodl,w,c
  1429  00038C  0E00               	movlw	0
  1430  00038E  B4D8               	btfsc	status,2,c
  1431  000390  5C2A               	subwf	Runlchb100@starboard,w,c
  1432  000392  B0D8               	btfsc	status,0,c
  1433  000394  D004               	goto	l1045
  1434                           
  1435                           ;lcbh100.h: 133: LATAbits.LATA0 = 0;
  1436  000396  9089               	bcf	3977,0,c	;volatile
  1437                           
  1438                           ;lcbh100.h: 134: LATAbits.LATA1 = 1;
  1439  000398  8289               	bsf	3977,1,c	;volatile
  1440  00039A                     L9:
  1441                           
  1442                           ;lcbh100.h: 135: LATAbits.LATA2 = 0;
  1443  00039A  9489               	bcf	3977,2,c	;volatile
  1444                           
  1445                           ;lcbh100.h: 136: LATAbits.LATA3 = 1;
  1446  00039C  8689               	bsf	3977,3,c	;volatile
  1447  00039E                     l1045:
  1448                           
  1449                           ;lcbh100.h: 137: }
  1450                           ;lcbh100.h: 140: SetDCPWM1(abs(port));
  1451  00039E  C02C  F020         	movff	Runlchb100@port,abs@a
  1452  0003A2  C02D  F021         	movff	Runlchb100@port+1,abs@a+1
  1453  0003A6  ECD7  F002         	call	_abs	;wreg free
  1454  0003AA  C020  F024         	movff	?_abs,SetDCPWM1@dutycycle
  1455  0003AE  C021  F025         	movff	?_abs+1,SetDCPWM1@dutycycle+1
  1456  0003B2  EC9D  F002         	call	_SetDCPWM1	;wreg free
  1457                           
  1458                           ;lcbh100.h: 141: SetDCPWM2(abs(starboard));
  1459  0003B6  C02A  F020         	movff	Runlchb100@starboard,abs@a
  1460  0003BA  C02B  F021         	movff	Runlchb100@starboard+1,abs@a+1
  1461  0003BE  ECD7  F002         	call	_abs	;wreg free
  1462  0003C2  C020  F024         	movff	?_abs,SetDCPWM2@dutycycle
  1463  0003C6  C021  F025         	movff	?_abs+1,SetDCPWM2@dutycycle+1
  1464  0003CA  EC80  F002         	call	_SetDCPWM2	;wreg free
  1465  0003CE  0012               	return	
  1466  0003D0                     __end_of_Runlchb100:
  1467                           	opt stack 0
  1468                           pclatu	equ	0xFFB
  1469                           pclath	equ	0xFFA
  1470                           tblptru	equ	0xFF8
  1471                           tblptrh	equ	0xFF7
  1472                           tblptrl	equ	0xFF6
  1473                           tablat	equ	0xFF5
  1474                           prodh	equ	0xFF4
  1475                           prodl	equ	0xFF3
  1476                           postinc0	equ	0xFEE
  1477                           fsr0h	equ	0xFEA
  1478                           fsr0l	equ	0xFE9
  1479                           wreg	equ	0xFE8
  1480                           fsr1h	equ	0xFE2
  1481                           fsr1l	equ	0xFE1
  1482                           fsr2h	equ	0xFDA
  1483                           fsr2l	equ	0xFD9
  1484                           status	equ	0xFD8
  1485                           
  1486 ;; *************** function _abs *****************
  1487 ;; Defined at:
  1488 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\abs.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;  a               2   31[COMRAM] int 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  2   31[COMRAM] int 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, status,0, prodl
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1
  1502 ;;      Params:         2       0       0
  1503 ;;      Locals:         0       0       0
  1504 ;;      Temps:          2       0       0
  1505 ;;      Totals:         4       0       0
  1506 ;;Total ram usage:        4 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; Hardware stack levels required when called:    2
  1509 ;; This function calls:
  1510 ;;		Nothing
  1511 ;; This function is called by:
  1512 ;;		_Runlchb100
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text10
  1517  0005AE                     __ptext10:
  1518                           	opt stack 0
  1519  0005AE                     _abs:
  1520                           	opt stack 27
  1521                           
  1522                           ;incstack = 0
  1523  0005AE  5021               	movf	abs@a+1,w,c
  1524  0005B0  0A80               	xorlw	128
  1525  0005B2  6EF3               	movwf	prodl,c
  1526  0005B4  0E80               	movlw	128
  1527  0005B6  5CF3               	subwf	prodl,w,c
  1528  0005B8  0E00               	movlw	0
  1529  0005BA  B4D8               	btfsc	status,2,c
  1530  0005BC  5C20               	subwf	abs@a,w,c
  1531  0005BE  B0D8               	btfsc	status,0,c
  1532  0005C0  D00D               	goto	l284
  1533  0005C2  C020  F022         	movff	abs@a,??_abs
  1534  0005C6  C021  F023         	movff	abs@a+1,??_abs+1
  1535  0005CA  1E22               	comf	??_abs,f,c
  1536  0005CC  1E23               	comf	??_abs+1,f,c
  1537  0005CE  4A22               	infsnz	??_abs,f,c
  1538  0005D0  2A23               	incf	??_abs+1,f,c
  1539  0005D2  C022  F020         	movff	??_abs,?_abs
  1540  0005D6  C023  F021         	movff	??_abs+1,?_abs+1
  1541  0005DA  D004               	goto	l285
  1542  0005DC                     l284:
  1543  0005DC  C020  F020         	movff	abs@a,?_abs
  1544  0005E0  C021  F021         	movff	abs@a+1,?_abs+1
  1545  0005E4                     l285:
  1546  0005E4  0012               	return	
  1547  0005E6                     __end_of_abs:
  1548                           	opt stack 0
  1549                           pclatu	equ	0xFFB
  1550                           pclath	equ	0xFFA
  1551                           tblptru	equ	0xFF8
  1552                           tblptrh	equ	0xFF7
  1553                           tblptrl	equ	0xFF6
  1554                           tablat	equ	0xFF5
  1555                           prodh	equ	0xFF4
  1556                           prodl	equ	0xFF3
  1557                           postinc0	equ	0xFEE
  1558                           fsr0h	equ	0xFEA
  1559                           fsr0l	equ	0xFE9
  1560                           wreg	equ	0xFE8
  1561                           fsr1h	equ	0xFE2
  1562                           fsr1l	equ	0xFE1
  1563                           fsr2h	equ	0xFDA
  1564                           fsr2l	equ	0xFD9
  1565                           status	equ	0xFD8
  1566                           
  1567 ;; *************** function _SetDCPWM2 *****************
  1568 ;; Defined at:
  1569 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2setdc.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  dutycycle       2   35[COMRAM] unsigned int 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  DCycle          2   39[COMRAM] struct PWMDC
  1574 ;; Return value:  Size  Location     Type
  1575 ;;		None               void
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1
  1583 ;;      Params:         2       0       0
  1584 ;;      Locals:         2       0       0
  1585 ;;      Temps:          2       0       0
  1586 ;;      Totals:         6       0       0
  1587 ;;Total ram usage:        6 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    2
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_Runlchb100
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text11
  1598  000500                     __ptext11:
  1599                           	opt stack 0
  1600  000500                     _SetDCPWM2:
  1601                           	opt stack 27
  1602                           
  1603                           ;incstack = 0
  1604  000500  C024  F026         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  1605  000504  C025  F027         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  1606  000508  0E06               	movlw	6
  1607  00050A                     u65:
  1608  00050A  90D8               	bcf	status,0,c
  1609  00050C  3626               	rlcf	??_SetDCPWM2,f,c
  1610  00050E  3627               	rlcf	??_SetDCPWM2+1,f,c
  1611  000510  2EE8               	decfsz	wreg,f,c
  1612  000512  D7FB               	goto	u65
  1613  000514  C026  F028         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  1614  000518  C027  F029         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  1615  00051C  C029  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  1616  000520  C028  F026         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  1617  000524  90D8               	bcf	status,0,c
  1618  000526  3226               	rrcf	??_SetDCPWM2,f,c
  1619  000528  90D8               	bcf	status,0,c
  1620  00052A  3226               	rrcf	??_SetDCPWM2,f,c
  1621  00052C  0E30               	movlw	48
  1622  00052E  1626               	andwf	??_SetDCPWM2,f,c
  1623  000530  50BA               	movf	4026,w,c	;volatile
  1624  000532  0BCF               	andlw	207
  1625  000534  1026               	iorwf	??_SetDCPWM2,w,c
  1626  000536  6EBA               	movwf	4026,c	;volatile
  1627  000538  0012               	return	
  1628  00053A                     __end_of_SetDCPWM2:
  1629                           	opt stack 0
  1630                           pclatu	equ	0xFFB
  1631                           pclath	equ	0xFFA
  1632                           tblptru	equ	0xFF8
  1633                           tblptrh	equ	0xFF7
  1634                           tblptrl	equ	0xFF6
  1635                           tablat	equ	0xFF5
  1636                           prodh	equ	0xFF4
  1637                           prodl	equ	0xFF3
  1638                           postinc0	equ	0xFEE
  1639                           fsr0h	equ	0xFEA
  1640                           fsr0l	equ	0xFE9
  1641                           wreg	equ	0xFE8
  1642                           fsr1h	equ	0xFE2
  1643                           fsr1l	equ	0xFE1
  1644                           fsr2h	equ	0xFDA
  1645                           fsr2l	equ	0xFD9
  1646                           status	equ	0xFD8
  1647                           
  1648 ;; *************** function _SetDCPWM1 *****************
  1649 ;; Defined at:
  1650 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1setdc.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;  dutycycle       2   35[COMRAM] unsigned int 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  DCycle          2   39[COMRAM] struct PWMDC
  1655 ;; Return value:  Size  Location     Type
  1656 ;;		None               void
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1
  1664 ;;      Params:         2       0       0
  1665 ;;      Locals:         2       0       0
  1666 ;;      Temps:          2       0       0
  1667 ;;      Totals:         6       0       0
  1668 ;;Total ram usage:        6 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    2
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_Runlchb100
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text12
  1679  00053A                     __ptext12:
  1680                           	opt stack 0
  1681  00053A                     _SetDCPWM1:
  1682                           	opt stack 27
  1683                           
  1684                           ;incstack = 0
  1685  00053A  C024  F026         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  1686  00053E  C025  F027         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  1687  000542  0E06               	movlw	6
  1688  000544                     u55:
  1689  000544  90D8               	bcf	status,0,c
  1690  000546  3626               	rlcf	??_SetDCPWM1,f,c
  1691  000548  3627               	rlcf	??_SetDCPWM1+1,f,c
  1692  00054A  2EE8               	decfsz	wreg,f,c
  1693  00054C  D7FB               	goto	u55
  1694  00054E  C026  F028         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  1695  000552  C027  F029         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  1696  000556  C029  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  1697  00055A  C028  F026         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  1698  00055E  90D8               	bcf	status,0,c
  1699  000560  3226               	rrcf	??_SetDCPWM1,f,c
  1700  000562  90D8               	bcf	status,0,c
  1701  000564  3226               	rrcf	??_SetDCPWM1,f,c
  1702  000566  0E30               	movlw	48
  1703  000568  1626               	andwf	??_SetDCPWM1,f,c
  1704  00056A  50BD               	movf	4029,w,c	;volatile
  1705  00056C  0BCF               	andlw	207
  1706  00056E  1026               	iorwf	??_SetDCPWM1,w,c
  1707  000570  6EBD               	movwf	4029,c	;volatile
  1708  000572  0012               	return	
  1709  000574                     __end_of_SetDCPWM1:
  1710                           	opt stack 0
  1711                           pclatu	equ	0xFFB
  1712                           pclath	equ	0xFFA
  1713                           tblptru	equ	0xFF8
  1714                           tblptrh	equ	0xFF7
  1715                           tblptrl	equ	0xFF6
  1716                           tablat	equ	0xFF5
  1717                           prodh	equ	0xFF4
  1718                           prodl	equ	0xFF3
  1719                           postinc0	equ	0xFEE
  1720                           fsr0h	equ	0xFEA
  1721                           fsr0l	equ	0xFE9
  1722                           wreg	equ	0xFE8
  1723                           fsr1h	equ	0xFE2
  1724                           fsr1l	equ	0xFE1
  1725                           fsr2h	equ	0xFDA
  1726                           fsr2l	equ	0xFD9
  1727                           status	equ	0xFD8
  1728                           
  1729 ;; *************** function _Closelchb100 *****************
  1730 ;; Defined at:
  1731 ;;		line 84 in file "lcbh100.h"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;		None
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;		None
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  2  106[COMRAM] int 
  1738 ;; Registers used:
  1739 ;;		None
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1
  1745 ;;      Params:         0       0       0
  1746 ;;      Locals:         0       0       0
  1747 ;;      Temps:          0       0       0
  1748 ;;      Totals:         0       0       0
  1749 ;;Total ram usage:        0 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:    2
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_Runlchb100
  1756 ;;		_main
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text13
  1761  0006B8                     __ptext13:
  1762                           	opt stack 0
  1763  0006B8                     _Closelchb100:
  1764                           	opt stack 27
  1765                           
  1766                           ;lcbh100.h: 85: LATAbits.LATA0 = 0;
  1767                           
  1768                           ;incstack = 0
  1769  0006B8  9089               	bcf	3977,0,c	;volatile
  1770                           
  1771                           ;lcbh100.h: 86: LATAbits.LATA1 = 0;
  1772  0006BA  9289               	bcf	3977,1,c	;volatile
  1773                           
  1774                           ;lcbh100.h: 87: LATAbits.LATA2 = 0;
  1775  0006BC  9489               	bcf	3977,2,c	;volatile
  1776                           
  1777                           ;lcbh100.h: 88: LATAbits.LATA3 = 0;
  1778  0006BE  9689               	bcf	3977,3,c	;volatile
  1779  0006C0  0012               	return	
  1780  0006C2                     __end_of_Closelchb100:
  1781                           	opt stack 0
  1782                           pclatu	equ	0xFFB
  1783                           pclath	equ	0xFFA
  1784                           tblptru	equ	0xFF8
  1785                           tblptrh	equ	0xFF7
  1786                           tblptrl	equ	0xFF6
  1787                           tablat	equ	0xFF5
  1788                           prodh	equ	0xFF4
  1789                           prodl	equ	0xFF3
  1790                           postinc0	equ	0xFEE
  1791                           fsr0h	equ	0xFEA
  1792                           fsr0l	equ	0xFE9
  1793                           wreg	equ	0xFE8
  1794                           fsr1h	equ	0xFE2
  1795                           fsr1l	equ	0xFE1
  1796                           fsr2h	equ	0xFDA
  1797                           fsr2l	equ	0xFD9
  1798                           status	equ	0xFD8
  1799                           
  1800 ;; *************** function _Openlchb100 *****************
  1801 ;; Defined at:
  1802 ;;		line 49 in file "lcbh100.h"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;		None
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;		None
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  2  103[COMRAM] int 
  1809 ;; Registers used:
  1810 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1
  1816 ;;      Params:         0       0       0
  1817 ;;      Locals:         0       0       0
  1818 ;;      Temps:          0       0       0
  1819 ;;      Totals:         0       0       0
  1820 ;;Total ram usage:        0 bytes
  1821 ;; Hardware stack levels used:    1
  1822 ;; Hardware stack levels required when called:    3
  1823 ;; This function calls:
  1824 ;;		_OpenPWM1
  1825 ;;		_OpenPWM2
  1826 ;;		_OpenTimer2
  1827 ;; This function is called by:
  1828 ;;		_main
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text14
  1833  000608                     __ptext14:
  1834                           	opt stack 0
  1835  000608                     _Openlchb100:
  1836                           	opt stack 27
  1837                           
  1838                           ;lcbh100.h: 55: ADCON1 = 0b00001111;
  1839                           
  1840                           ;incstack = 0
  1841  000608  0E0F               	movlw	15
  1842  00060A  6EC1               	movwf	4033,c	;volatile
  1843                           
  1844                           ;lcbh100.h: 61: DDRAbits.RA0 = 0;
  1845  00060C  9092               	bcf	3986,0,c	;volatile
  1846                           
  1847                           ;lcbh100.h: 62: DDRAbits.RA1 = 0;
  1848  00060E  9292               	bcf	3986,1,c	;volatile
  1849                           
  1850                           ;lcbh100.h: 63: DDRAbits.RA2 = 0;
  1851  000610  9492               	bcf	3986,2,c	;volatile
  1852                           
  1853                           ;lcbh100.h: 64: DDRAbits.RA3 = 0;
  1854  000612  9692               	bcf	3986,3,c	;volatile
  1855                           
  1856                           ;lcbh100.h: 70: OpenTimer2(0b01111111 & 0b11111100 & 0b10000111);
  1857  000614  0E04               	movlw	4
  1858  000616  EC14  F003         	call	_OpenTimer2
  1859                           
  1860                           ;lcbh100.h: 76: OpenPWM1(0x3F);
  1861  00061A  0E3F               	movlw	63
  1862  00061C  EC3F  F003         	call	_OpenPWM1
  1863                           
  1864                           ;lcbh100.h: 77: OpenPWM2(0x3F);
  1865  000620  0E3F               	movlw	63
  1866  000622  ECBA  F002         	call	_OpenPWM2
  1867  000626  0012               	return	
  1868  000628                     __end_of_Openlchb100:
  1869                           	opt stack 0
  1870                           pclatu	equ	0xFFB
  1871                           pclath	equ	0xFFA
  1872                           tblptru	equ	0xFF8
  1873                           tblptrh	equ	0xFF7
  1874                           tblptrl	equ	0xFF6
  1875                           tablat	equ	0xFF5
  1876                           prodh	equ	0xFF4
  1877                           prodl	equ	0xFF3
  1878                           postinc0	equ	0xFEE
  1879                           fsr0h	equ	0xFEA
  1880                           fsr0l	equ	0xFE9
  1881                           wreg	equ	0xFE8
  1882                           fsr1h	equ	0xFE2
  1883                           fsr1l	equ	0xFE1
  1884                           fsr2h	equ	0xFDA
  1885                           fsr2l	equ	0xFD9
  1886                           status	equ	0xFD8
  1887                           
  1888 ;; *************** function _OpenTimer2 *****************
  1889 ;; Defined at:
  1890 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t2open.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  config          1    wreg     unsigned char 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;  config          1   31[COMRAM] unsigned char 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;		None               void
  1897 ;; Registers used:
  1898 ;;		wreg, status,2, status,0
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMRAM   BANK0   BANK1
  1904 ;;      Params:         0       0       0
  1905 ;;      Locals:         1       0       0
  1906 ;;      Temps:          0       0       0
  1907 ;;      Totals:         1       0       0
  1908 ;;Total ram usage:        1 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:    2
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_Openlchb100
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text15
  1919  000628                     __ptext15:
  1920                           	opt stack 0
  1921  000628                     _OpenTimer2:
  1922                           	opt stack 27
  1923                           
  1924                           ;incstack = 0
  1925                           ;OpenTimer2@config stored from wreg
  1926  000628  6E20               	movwf	OpenTimer2@config,c
  1927  00062A  5020               	movf	OpenTimer2@config,w,c
  1928  00062C  0BFB               	andlw	251
  1929  00062E  6ECA               	movwf	4042,c	;volatile
  1930  000630  0E00               	movlw	0
  1931  000632  6ECC               	movwf	4044,c	;volatile
  1932  000634  929E               	bcf	3998,1,c	;volatile
  1933  000636  AE20               	btfss	OpenTimer2@config,7,c
  1934  000638  D002               	goto	l206
  1935  00063A  829D               	bsf	3997,1,c	;volatile
  1936  00063C  D001               	goto	l207
  1937  00063E                     l206:
  1938  00063E  929D               	bcf	3997,1,c	;volatile
  1939  000640                     l207:
  1940  000640  84CA               	bsf	4042,2,c	;volatile
  1941  000642  0012               	return	
  1942  000644                     __end_of_OpenTimer2:
  1943                           	opt stack 0
  1944                           pclatu	equ	0xFFB
  1945                           pclath	equ	0xFFA
  1946                           tblptru	equ	0xFF8
  1947                           tblptrh	equ	0xFF7
  1948                           tblptrl	equ	0xFF6
  1949                           tablat	equ	0xFF5
  1950                           prodh	equ	0xFF4
  1951                           prodl	equ	0xFF3
  1952                           postinc0	equ	0xFEE
  1953                           fsr0h	equ	0xFEA
  1954                           fsr0l	equ	0xFE9
  1955                           wreg	equ	0xFE8
  1956                           fsr1h	equ	0xFE2
  1957                           fsr1l	equ	0xFE1
  1958                           fsr2h	equ	0xFDA
  1959                           fsr2l	equ	0xFD9
  1960                           status	equ	0xFD8
  1961                           
  1962 ;; *************** function _OpenPWM2 *****************
  1963 ;; Defined at:
  1964 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2open.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  period          1    wreg     unsigned char 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  period          1   32[COMRAM] unsigned char 
  1969 ;;  ccp2mx          1   33[COMRAM] unsigned char 
  1970 ;;  pmmode          1    0        unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;		None               void
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1
  1980 ;;      Params:         0       0       0
  1981 ;;      Locals:         2       0       0
  1982 ;;      Temps:          1       0       0
  1983 ;;      Totals:         3       0       0
  1984 ;;Total ram usage:        3 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    2
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_Openlchb100
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text16
  1995  000574                     __ptext16:
  1996                           	opt stack 0
  1997  000574                     _OpenPWM2:
  1998                           	opt stack 27
  1999                           
  2000                           ;incstack = 0
  2001                           ;OpenPWM2@period stored from wreg
  2002  000574  6E21               	movwf	OpenPWM2@period,c
  2003  000576  0E0C               	movlw	12
  2004  000578  6EBA               	movwf	4026,c	;volatile
  2005  00057A  0E05               	movlw	5
  2006  00057C  6EF6               	movwf	tblptrl,c
  2007  00057E                     	if	1	;There is more than 1 active tblptr byte
  2008  00057E  0E00               	movlw	0
  2009  000580  6EF7               	movwf	tblptrh,c
  2010  000582                     	endif
  2011  000582                     	if	1	;There are 3 active tblptr bytes
  2012  000582  0E30               	movlw	48
  2013  000584  6EF8               	movwf	tblptru,c
  2014  000586                     	endif
  2015  000586  0008               	tblrd		*
  2016  000588  CFF5 F020          	movff	tablat,??_OpenPWM2
  2017  00058C  A020               	btfss	??_OpenPWM2,0,c
  2018  00058E  D002               	goto	l881
  2019  000590  6822               	setf	OpenPWM2@ccp2mx,c
  2020  000592  D002               	goto	l183
  2021  000594                     l881:
  2022  000594  0E00               	movlw	0
  2023  000596  6E22               	movwf	OpenPWM2@ccp2mx,c
  2024  000598                     l183:
  2025  000598  5022               	movf	OpenPWM2@ccp2mx,w,c
  2026  00059A  B4D8               	btfsc	status,2,c
  2027  00059C  D002               	goto	l184
  2028  00059E  9294               	bcf	3988,1,c	;volatile
  2029  0005A0  D001               	goto	l185
  2030  0005A2                     l184:
  2031  0005A2  9693               	bcf	3987,3,c	;volatile
  2032  0005A4                     l185:
  2033  0005A4  94CA               	bcf	4042,2,c	;volatile
  2034  0005A6  C021  FFCB         	movff	OpenPWM2@period,4043	;volatile
  2035  0005AA  84CA               	bsf	4042,2,c	;volatile
  2036  0005AC  0012               	return	
  2037  0005AE                     __end_of_OpenPWM2:
  2038                           	opt stack 0
  2039                           pclatu	equ	0xFFB
  2040                           pclath	equ	0xFFA
  2041                           tblptru	equ	0xFF8
  2042                           tblptrh	equ	0xFF7
  2043                           tblptrl	equ	0xFF6
  2044                           tablat	equ	0xFF5
  2045                           prodh	equ	0xFF4
  2046                           prodl	equ	0xFF3
  2047                           postinc0	equ	0xFEE
  2048                           fsr0h	equ	0xFEA
  2049                           fsr0l	equ	0xFE9
  2050                           wreg	equ	0xFE8
  2051                           fsr1h	equ	0xFE2
  2052                           fsr1l	equ	0xFE1
  2053                           fsr2h	equ	0xFDA
  2054                           fsr2l	equ	0xFD9
  2055                           status	equ	0xFD8
  2056                           
  2057 ;; *************** function _OpenPWM1 *****************
  2058 ;; Defined at:
  2059 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1open.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;  period          1    wreg     unsigned char 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  period          1   31[COMRAM] unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;		None               void
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1
  2073 ;;      Params:         0       0       0
  2074 ;;      Locals:         1       0       0
  2075 ;;      Temps:          0       0       0
  2076 ;;      Totals:         1       0       0
  2077 ;;Total ram usage:        1 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    2
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_Openlchb100
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text17
  2088  00067E                     __ptext17:
  2089                           	opt stack 0
  2090  00067E                     _OpenPWM1:
  2091                           	opt stack 27
  2092                           
  2093                           ;incstack = 0
  2094                           ;OpenPWM1@period stored from wreg
  2095  00067E  6E20               	movwf	OpenPWM1@period,c
  2096  000680  0E0C               	movlw	12
  2097  000682  12BD               	iorwf	4029,f,c	;volatile
  2098  000684  9494               	bcf	3988,2,c	;volatile
  2099  000686  94CA               	bcf	4042,2,c	;volatile
  2100  000688  C020  FFCB         	movff	OpenPWM1@period,4043	;volatile
  2101  00068C  84CA               	bsf	4042,2,c	;volatile
  2102  00068E  0012               	return	
  2103  000690                     __end_of_OpenPWM1:
  2104                           	opt stack 0
  2105                           pclatu	equ	0xFFB
  2106                           pclath	equ	0xFFA
  2107                           tblptru	equ	0xFF8
  2108                           tblptrh	equ	0xFF7
  2109                           tblptrl	equ	0xFF6
  2110                           tablat	equ	0xFF5
  2111                           prodh	equ	0xFF4
  2112                           prodl	equ	0xFF3
  2113                           postinc0	equ	0xFEE
  2114                           fsr0h	equ	0xFEA
  2115                           fsr0l	equ	0xFE9
  2116                           wreg	equ	0xFE8
  2117                           fsr1h	equ	0xFE2
  2118                           fsr1l	equ	0xFE1
  2119                           fsr2h	equ	0xFDA
  2120                           fsr2l	equ	0xFD9
  2121                           status	equ	0xFD8
  2122                           
  2123 ;; *************** function _OpenIRPD30 *****************
  2124 ;; Defined at:
  2125 ;;		line 27 in file "irpd30.h"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  2   81[COMRAM] int 
  2132 ;; Registers used:
  2133 ;;		wreg, status,2
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1
  2139 ;;      Params:         0       0       0
  2140 ;;      Locals:         0       0       0
  2141 ;;      Temps:          0       0       0
  2142 ;;      Totals:         0       0       0
  2143 ;;Total ram usage:        0 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    2
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text18
  2154  0006AC                     __ptext18:
  2155                           	opt stack 0
  2156  0006AC                     _OpenIRPD30:
  2157                           	opt stack 28
  2158                           
  2159                           ;irpd30.h: 29: ADCON1 = 0b00001010;
  2160                           
  2161                           ;incstack = 0
  2162  0006AC  0E0A               	movlw	10
  2163  0006AE  6EC1               	movwf	4033,c	;volatile
  2164                           
  2165                           ;irpd30.h: 35: DDREbits.RE0 = 1;;
  2166  0006B0  8096               	bsf	3990,0,c	;volatile
  2167                           
  2168                           ;irpd30.h: 36: DDREbits.RE1 = 0;;
  2169  0006B2  9296               	bcf	3990,1,c	;volatile
  2170                           
  2171                           ;irpd30.h: 37: DDREbits.RE2 = 0;;
  2172  0006B4  9496               	bcf	3990,2,c	;volatile
  2173  0006B6  0012               	return	
  2174  0006B8                     __end_of_OpenIRPD30:
  2175                           	opt stack 0
  2176                           pclatu	equ	0xFFB
  2177                           pclath	equ	0xFFA
  2178                           tblptru	equ	0xFF8
  2179                           tblptrh	equ	0xFF7
  2180                           tblptrl	equ	0xFF6
  2181                           tablat	equ	0xFF5
  2182                           prodh	equ	0xFF4
  2183                           prodl	equ	0xFF3
  2184                           postinc0	equ	0xFEE
  2185                           fsr0h	equ	0xFEA
  2186                           fsr0l	equ	0xFE9
  2187                           wreg	equ	0xFE8
  2188                           fsr1h	equ	0xFE2
  2189                           fsr1l	equ	0xFE1
  2190                           fsr2h	equ	0xFDA
  2191                           fsr2l	equ	0xFD9
  2192                           status	equ	0xFD8
  2193                           
  2194 ;; *************** function _DetectIRPD30 *****************
  2195 ;; Defined at:
  2196 ;;		line 48 in file "irpd30.h"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;		None
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  i               2   37[COMRAM] int 
  2201 ;;  i               2   35[COMRAM] int 
  2202 ;;  left            2   41[COMRAM] int 
  2203 ;;  right           2   39[COMRAM] int 
  2204 ;;  action          2   32[COMRAM] int 
  2205 ;;  x               1   34[COMRAM] unsigned char 
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      unsigned char 
  2208 ;; Registers used:
  2209 ;;		wreg, status,2, status,0, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1
  2215 ;;      Params:         0       0       0
  2216 ;;      Locals:        11       0       0
  2217 ;;      Temps:          0       0       0
  2218 ;;      Totals:        11       0       0
  2219 ;;Total ram usage:       11 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; Hardware stack levels required when called:    3
  2222 ;; This function calls:
  2223 ;;		_Delay1KTCYx
  2224 ;; This function is called by:
  2225 ;;		_main
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text19
  2230  000246                     __ptext19:
  2231                           	opt stack 0
  2232  000246                     _DetectIRPD30:
  2233                           	opt stack 27
  2234                           
  2235                           ;irpd30.h: 50: unsigned char x = 't';
  2236                           
  2237                           ;incstack = 0
  2238  000246  0E74               	movlw	116
  2239  000248  6E23               	movwf	DetectIRPD30@x,c
  2240                           
  2241                           ;irpd30.h: 51: int right = 0;;
  2242  00024A  0E00               	movlw	0
  2243  00024C  6E29               	movwf	DetectIRPD30@right+1,c
  2244  00024E  0E00               	movlw	0
  2245  000250  6E28               	movwf	DetectIRPD30@right,c
  2246                           
  2247                           ;irpd30.h: 52: int left = 0;;
  2248  000252  0E00               	movlw	0
  2249  000254  6E2B               	movwf	DetectIRPD30@left+1,c
  2250  000256  0E00               	movlw	0
  2251  000258  6E2A               	movwf	DetectIRPD30@left,c
  2252                           
  2253                           ;irpd30.h: 60: int action = 0;
  2254  00025A  0E00               	movlw	0
  2255  00025C  6E22               	movwf	DetectIRPD30@action+1,c
  2256  00025E  0E00               	movlw	0
  2257  000260  6E21               	movwf	DetectIRPD30@action,c
  2258                           
  2259                           ;irpd30.h: 63: LATEbits.LATE1 = 1;;
  2260  000262  828D               	bsf	3981,1,c	;volatile
  2261                           
  2262                           ;irpd30.h: 64: LATEbits.LATE2 = 0;;
  2263  000264  948D               	bcf	3981,2,c	;volatile
  2264                           
  2265                           ;irpd30.h: 66: for (int i = 0; i < 1000; i++) {
  2266  000266  0E00               	movlw	0
  2267  000268  6E25               	movwf	DetectIRPD30@i+1,c
  2268  00026A  0E00               	movlw	0
  2269  00026C  6E24               	movwf	DetectIRPD30@i,c
  2270  00026E  5025               	movf	DetectIRPD30@i+1,w,c
  2271  000270  0A80               	xorlw	128
  2272  000272  0F7D               	addlw	-131
  2273  000274  0EE8               	movlw	232
  2274  000276  B4D8               	btfsc	status,2,c
  2275  000278  5C24               	subwf	DetectIRPD30@i,w,c
  2276  00027A  B0D8               	btfsc	status,0,c
  2277  00027C  D00A               	goto	l89
  2278                           
  2279                           ;irpd30.h: 67: if (PORTEbits.RE0 == 0) {
  2280  00027E  B084               	btfsc	3972,0,c	;volatile
  2281  000280  D005               	goto	l941
  2282                           
  2283                           ;irpd30.h: 68: right = 1;;
  2284  000282  0E00               	movlw	0
  2285  000284  6E29               	movwf	DetectIRPD30@right+1,c
  2286  000286  0E01               	movlw	1
  2287  000288  6E28               	movwf	DetectIRPD30@right,c
  2288                           
  2289                           ;irpd30.h: 69: break;
  2290  00028A  D003               	goto	l89
  2291  00028C                     l941:
  2292  00028C  4A24               	infsnz	DetectIRPD30@i,f,c
  2293  00028E  2A25               	incf	DetectIRPD30@i+1,f,c
  2294  000290  D7EE               	goto	L10
  2295  000292                     l89:
  2296                           
  2297                           ;irpd30.h: 70: }
  2298                           ;irpd30.h: 71: }
  2299                           ;irpd30.h: 74: LATEbits.LATE1 = 0;;
  2300  000292  928D               	bcf	3981,1,c	;volatile
  2301                           
  2302                           ;irpd30.h: 75: LATEbits.LATE2 = 0;;
  2303  000294  948D               	bcf	3981,2,c	;volatile
  2304                           
  2305                           ;irpd30.h: 76: Delay1KTCYx(1);
  2306  000296  0E01               	movlw	1
  2307  000298  EC48  F003         	call	_Delay1KTCYx
  2308                           
  2309                           ;irpd30.h: 79: LATEbits.LATE1 = 0;;
  2310  00029C  928D               	bcf	3981,1,c	;volatile
  2311                           
  2312                           ;irpd30.h: 80: LATEbits.LATE2 = 1;;
  2313  00029E  848D               	bsf	3981,2,c	;volatile
  2314                           
  2315                           ;irpd30.h: 82: for (int i = 0; i < 1000; i++) {
  2316  0002A0  0E00               	movlw	0
  2317  0002A2  6E27               	movwf	DetectIRPD30@i_764+1,c
  2318  0002A4  0E00               	movlw	0
  2319  0002A6  6E26               	movwf	DetectIRPD30@i_764,c
  2320  0002A8  5027               	movf	DetectIRPD30@i_764+1,w,c
  2321  0002AA  0A80               	xorlw	128
  2322  0002AC  0F7D               	addlw	-131
  2323  0002AE  0EE8               	movlw	232
  2324  0002B0  B4D8               	btfsc	status,2,c
  2325  0002B2  5C26               	subwf	DetectIRPD30@i_764,w,c
  2326  0002B4  B0D8               	btfsc	status,0,c
  2327  0002B6  D00A               	goto	l963
  2328                           
  2329                           ;irpd30.h: 83: if (PORTEbits.RE0 == 0) {
  2330  0002B8  B084               	btfsc	3972,0,c	;volatile
  2331  0002BA  D005               	goto	l959
  2332                           
  2333                           ;irpd30.h: 84: left = 1;;
  2334  0002BC  0E00               	movlw	0
  2335  0002BE  6E2B               	movwf	DetectIRPD30@left+1,c
  2336  0002C0  0E01               	movlw	1
  2337  0002C2  6E2A               	movwf	DetectIRPD30@left,c
  2338                           
  2339                           ;irpd30.h: 85: break;
  2340  0002C4  D003               	goto	l963
  2341  0002C6                     l959:
  2342  0002C6  4A26               	infsnz	DetectIRPD30@i_764,f,c
  2343  0002C8  2A27               	incf	DetectIRPD30@i_764+1,f,c
  2344  0002CA  D7EE               	goto	L11
  2345  0002CC                     l963:
  2346                           
  2347                           ;irpd30.h: 86: }
  2348                           ;irpd30.h: 87: }
  2349                           ;irpd30.h: 89: if (left == 0 && right == 0) {
  2350  0002CC  502B               	movf	DetectIRPD30@left+1,w,c
  2351  0002CE  102A               	iorwf	DetectIRPD30@left,w,c
  2352  0002D0  A4D8               	btfss	status,2,c
  2353  0002D2  D006               	goto	l973
  2354  0002D4  5029               	movf	DetectIRPD30@right+1,w,c
  2355  0002D6  1028               	iorwf	DetectIRPD30@right,w,c
  2356  0002D8  A4D8               	btfss	status,2,c
  2357  0002DA  D002               	goto	l973
  2358                           
  2359                           ;irpd30.h: 90: return 0b00000000;
  2360  0002DC  0E00               	movlw	0
  2361  0002DE  D01F               	goto	l95
  2362  0002E0                     l973:
  2363  0002E0  502B               	movf	DetectIRPD30@left+1,w,c
  2364  0002E2  102A               	iorwf	DetectIRPD30@left,w,c
  2365  0002E4  A4D8               	btfss	status,2,c
  2366  0002E6  D006               	goto	l983
  2367  0002E8  0428               	decf	DetectIRPD30@right,w,c
  2368  0002EA  1029               	iorwf	DetectIRPD30@right+1,w,c
  2369  0002EC  A4D8               	btfss	status,2,c
  2370  0002EE  D002               	goto	l983
  2371                           
  2372                           ;irpd30.h: 92: return 0b00000001;
  2373  0002F0  0E01               	movlw	1
  2374  0002F2  D015               	goto	l95
  2375  0002F4                     l983:
  2376  0002F4  042A               	decf	DetectIRPD30@left,w,c
  2377  0002F6  102B               	iorwf	DetectIRPD30@left+1,w,c
  2378  0002F8  A4D8               	btfss	status,2,c
  2379  0002FA  D006               	goto	l993
  2380  0002FC  5029               	movf	DetectIRPD30@right+1,w,c
  2381  0002FE  1028               	iorwf	DetectIRPD30@right,w,c
  2382  000300  A4D8               	btfss	status,2,c
  2383  000302  D002               	goto	l993
  2384                           
  2385                           ;irpd30.h: 94: return 0b00000010;
  2386  000304  0E02               	movlw	2
  2387  000306  D00B               	goto	l95
  2388  000308                     l993:
  2389  000308  042A               	decf	DetectIRPD30@left,w,c
  2390  00030A  102B               	iorwf	DetectIRPD30@left+1,w,c
  2391  00030C  A4D8               	btfss	status,2,c
  2392  00030E  D006               	goto	l1001
  2393  000310  0428               	decf	DetectIRPD30@right,w,c
  2394  000312  1029               	iorwf	DetectIRPD30@right+1,w,c
  2395  000314  A4D8               	btfss	status,2,c
  2396  000316  D002               	goto	l1001
  2397                           
  2398                           ;irpd30.h: 96: return 0b00000011;
  2399  000318  0E03               	movlw	3
  2400  00031A  D001               	goto	l95
  2401  00031C                     l1001:
  2402                           
  2403                           ;irpd30.h: 97: }
  2404                           ;irpd30.h: 98: return 0b11111111;
  2405  00031C  0EFF               	movlw	255
  2406  00031E                     l95:
  2407  00031E  0012               	return	
  2408  000320                     __end_of_DetectIRPD30:
  2409                           	opt stack 0
  2410                           pclatu	equ	0xFFB
  2411                           pclath	equ	0xFFA
  2412                           tblptru	equ	0xFF8
  2413                           tblptrh	equ	0xFF7
  2414                           tblptrl	equ	0xFF6
  2415                           tablat	equ	0xFF5
  2416                           prodh	equ	0xFF4
  2417                           prodl	equ	0xFF3
  2418                           postinc0	equ	0xFEE
  2419                           fsr0h	equ	0xFEA
  2420                           fsr0l	equ	0xFE9
  2421                           wreg	equ	0xFE8
  2422                           fsr1h	equ	0xFE2
  2423                           fsr1l	equ	0xFE1
  2424                           fsr2h	equ	0xFDA
  2425                           fsr2l	equ	0xFD9
  2426                           status	equ	0xFD8
  2427                           
  2428 ;; *************** function _Delay1KTCYx *****************
  2429 ;; Defined at:
  2430 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d1ktcyx.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  unit            1    wreg     unsigned char 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;  unit            1   31[COMRAM] unsigned char 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;		None               void
  2437 ;; Registers used:
  2438 ;;		wreg
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1
  2444 ;;      Params:         0       0       0
  2445 ;;      Locals:         1       0       0
  2446 ;;      Temps:          0       0       0
  2447 ;;      Totals:         1       0       0
  2448 ;;Total ram usage:        1 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    2
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_DetectIRPD30
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text20
  2459  000690                     __ptext20:
  2460                           	opt stack 0
  2461  000690                     _Delay1KTCYx:
  2462                           	opt stack 27
  2463                           
  2464                           ;incstack = 0
  2465                           ;Delay1KTCYx@unit stored from wreg
  2466  000690  6E20               	movwf	Delay1KTCYx@unit,c
  2467  000692                     l471:
  2468  000692  0EFA               	movlw	250
  2469  000694                     u417:
  2470  000694  F000               	nop	
  2471  000696  2EE8               	decfsz	wreg,f,c
  2472  000698  D7FD               	goto	u417
  2473  00069A  2E20               	decfsz	Delay1KTCYx@unit,f,c
  2474  00069C  D7FA               	goto	l471
  2475  00069E  0012               	return	
  2476  0006A0                     __end_of_Delay1KTCYx:
  2477                           	opt stack 0
  2478                           pclatu	equ	0xFFB
  2479                           pclath	equ	0xFFA
  2480                           tblptru	equ	0xFF8
  2481                           tblptrh	equ	0xFF7
  2482                           tblptrl	equ	0xFF6
  2483                           tablat	equ	0xFF5
  2484                           prodh	equ	0xFF4
  2485                           prodl	equ	0xFF3
  2486                           postinc0	equ	0xFEE
  2487                           fsr0h	equ	0xFEA
  2488                           fsr0l	equ	0xFE9
  2489                           wreg	equ	0xFE8
  2490                           fsr1h	equ	0xFE2
  2491                           fsr1l	equ	0xFE1
  2492                           fsr2h	equ	0xFDA
  2493                           fsr2l	equ	0xFD9
  2494                           status	equ	0xFD8
  2495                           
  2496 ;; *************** function _lowISR *****************
  2497 ;; Defined at:
  2498 ;;		line 36 in file "clock.h"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;		None
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;		None
  2503 ;; Return value:  Size  Location     Type
  2504 ;;		None               void
  2505 ;; Registers used:
  2506 ;;		None
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1
  2512 ;;      Params:         0       0       0
  2513 ;;      Locals:         0       0       0
  2514 ;;      Temps:         17       0       0
  2515 ;;      Totals:        17       0       0
  2516 ;;Total ram usage:       17 bytes
  2517 ;; Hardware stack levels used:    1
  2518 ;; Hardware stack levels required when called:    1
  2519 ;; This function calls:
  2520 ;;		Nothing
  2521 ;; This function is called by:
  2522 ;;		Interrupt level 1
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	intcodelo
  2527  000018                     __pintcodelo:
  2528                           	opt stack 0
  2529  000018                     _lowISR:
  2530                           	opt stack 27
  2531                           
  2532                           ;incstack = 0
  2533  000018  CFD8 F00F          	movff	status,??_lowISR
  2534  00001C  CFE8 F010          	movff	wreg,??_lowISR+1
  2535  000020  CFE0 F011          	movff	bsr,??_lowISR+2
  2536  000024  CFFA F012          	movff	pclath,??_lowISR+3
  2537  000028  CFFB F013          	movff	pclatu,??_lowISR+4
  2538  00002C  CFE9 F014          	movff	fsr0l,??_lowISR+5
  2539  000030  CFEA F015          	movff	fsr0h,??_lowISR+6
  2540  000034  CFE1 F016          	movff	fsr1l,??_lowISR+7
  2541  000038  CFE2 F017          	movff	fsr1h,??_lowISR+8
  2542  00003C  CFD9 F018          	movff	fsr2l,??_lowISR+9
  2543  000040  CFDA F019          	movff	fsr2h,??_lowISR+10
  2544  000044  CFF3 F01A          	movff	prodl,??_lowISR+11
  2545  000048  CFF4 F01B          	movff	prodh,??_lowISR+12
  2546  00004C  CFF6 F01C          	movff	tblptrl,??_lowISR+13
  2547  000050  CFF7 F01D          	movff	tblptrh,??_lowISR+14
  2548  000054  CFF8 F01E          	movff	tblptru,??_lowISR+15
  2549  000058  CFF5 F01F          	movff	tablat,??_lowISR+16
  2550  00005C  C01F  FFF5         	movff	??_lowISR+16,tablat
  2551  000060  C01E  FFF8         	movff	??_lowISR+15,tblptru
  2552  000064  C01D  FFF7         	movff	??_lowISR+14,tblptrh
  2553  000068  C01C  FFF6         	movff	??_lowISR+13,tblptrl
  2554  00006C  C01B  FFF4         	movff	??_lowISR+12,prodh
  2555  000070  C01A  FFF3         	movff	??_lowISR+11,prodl
  2556  000074  C019  FFDA         	movff	??_lowISR+10,fsr2h
  2557  000078  C018  FFD9         	movff	??_lowISR+9,fsr2l
  2558  00007C  C017  FFE2         	movff	??_lowISR+8,fsr1h
  2559  000080  C016  FFE1         	movff	??_lowISR+7,fsr1l
  2560  000084  C015  FFEA         	movff	??_lowISR+6,fsr0h
  2561  000088  C014  FFE9         	movff	??_lowISR+5,fsr0l
  2562  00008C  C013  FFFB         	movff	??_lowISR+4,pclatu
  2563  000090  C012  FFFA         	movff	??_lowISR+3,pclath
  2564  000094  C011  FFE0         	movff	??_lowISR+2,bsr
  2565  000098  C010  FFE8         	movff	??_lowISR+1,wreg
  2566  00009C  C00F  FFD8         	movff	??_lowISR,status
  2567  0000A0  0010               	retfie	
  2568  0000A2                     __end_of_lowISR:
  2569                           	opt stack 0
  2570                           pclatu	equ	0xFFB
  2571                           pclath	equ	0xFFA
  2572                           tblptru	equ	0xFF8
  2573                           tblptrh	equ	0xFF7
  2574                           tblptrl	equ	0xFF6
  2575                           tablat	equ	0xFF5
  2576                           prodh	equ	0xFF4
  2577                           prodl	equ	0xFF3
  2578                           postinc0	equ	0xFEE
  2579                           fsr0h	equ	0xFEA
  2580                           fsr0l	equ	0xFE9
  2581                           wreg	equ	0xFE8
  2582                           fsr1h	equ	0xFE2
  2583                           fsr1l	equ	0xFE1
  2584                           bsr	equ	0xFE0
  2585                           fsr2h	equ	0xFDA
  2586                           fsr2l	equ	0xFD9
  2587                           status	equ	0xFD8
  2588                           
  2589 ;; *************** function _highISR *****************
  2590 ;; Defined at:
  2591 ;;		line 45 in file "clock.h"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;		None               void
  2598 ;; Registers used:
  2599 ;;		status,2, status,0
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1
  2605 ;;      Params:         0       0       0
  2606 ;;      Locals:         0       0       0
  2607 ;;      Temps:         14       0       0
  2608 ;;      Totals:        14       0       0
  2609 ;;Total ram usage:       14 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; This function calls:
  2612 ;;		Nothing
  2613 ;; This function is called by:
  2614 ;;		Interrupt level 2
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	intcode
  2619  000008                     __pintcode:
  2620                           	opt stack 0
  2621  000008                     _highISR:
  2622                           	opt stack 27
  2623                           
  2624                           ;incstack = 0
  2625  000008  CFFA F001          	movff	pclath,??_highISR
  2626  00000C  CFFB F002          	movff	pclatu,??_highISR+1
  2627  000010  CFE9 F003          	movff	fsr0l,??_highISR+2
  2628  000014  EFE8  F001         	goto	int_func
  2629                           pclatu	equ	0xFFB
  2630                           pclath	equ	0xFFA
  2631                           tblptru	equ	0xFF8
  2632                           tblptrh	equ	0xFF7
  2633                           tblptrl	equ	0xFF6
  2634                           tablat	equ	0xFF5
  2635                           prodh	equ	0xFF4
  2636                           prodl	equ	0xFF3
  2637                           postinc0	equ	0xFEE
  2638                           fsr0h	equ	0xFEA
  2639                           fsr0l	equ	0xFE9
  2640                           wreg	equ	0xFE8
  2641                           fsr1h	equ	0xFE2
  2642                           fsr1l	equ	0xFE1
  2643                           bsr	equ	0xFE0
  2644                           fsr2h	equ	0xFDA
  2645                           fsr2l	equ	0xFD9
  2646                           status	equ	0xFD8
  2647                           pclatu	equ	0xFFB
  2648                           pclath	equ	0xFFA
  2649                           tblptru	equ	0xFF8
  2650                           tblptrh	equ	0xFF7
  2651                           tblptrl	equ	0xFF6
  2652                           tablat	equ	0xFF5
  2653                           prodh	equ	0xFF4
  2654                           prodl	equ	0xFF3
  2655                           postinc0	equ	0xFEE
  2656                           fsr0h	equ	0xFEA
  2657                           fsr0l	equ	0xFE9
  2658                           wreg	equ	0xFE8
  2659                           fsr1h	equ	0xFE2
  2660                           fsr1l	equ	0xFE1
  2661                           bsr	equ	0xFE0
  2662                           fsr2h	equ	0xFDA
  2663                           fsr2l	equ	0xFD9
  2664                           status	equ	0xFD8
  2665                           
  2666                           	psect	rparam
  2667  0000                     pclatu	equ	0xFFB
  2668                           pclath	equ	0xFFA
  2669                           tblptru	equ	0xFF8
  2670                           tblptrh	equ	0xFF7
  2671                           tblptrl	equ	0xFF6
  2672                           tablat	equ	0xFF5
  2673                           prodh	equ	0xFF4
  2674                           prodl	equ	0xFF3
  2675                           postinc0	equ	0xFEE
  2676                           fsr0h	equ	0xFEA
  2677                           fsr0l	equ	0xFE9
  2678                           wreg	equ	0xFE8
  2679                           fsr1h	equ	0xFE2
  2680                           fsr1l	equ	0xFE1
  2681                           bsr	equ	0xFE0
  2682                           fsr2h	equ	0xFDA
  2683                           fsr2l	equ	0xFD9
  2684                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     60      67
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_rand
    _rand->___lmul
    _delay_s->_Delay10KTCYx
    _delay_ms->_Delay10KTCYx
    _Runlchb100->_SetDCPWM1
    _Runlchb100->_SetDCPWM2
    _SetDCPWM2->_abs
    _SetDCPWM1->_abs
    _Openlchb100->_OpenPWM2
    _DetectIRPD30->_Delay1KTCYx

Critical Paths under _lowISR in COMRAM

    None.

Critical Paths under _highISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _lowISR in BANK0

    None.

Critical Paths under _highISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _lowISR in BANK1

    None.

Critical Paths under _highISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11     6      5    1798
                                             49 COMRAM    11     6      5
                       _Closelchb100
                       _DetectIRPD30
                         _OpenIRPD30
                        _Openlchb100
                         _Runlchb100
                           _delay_ms
                            _delay_s
                            _openLED
                               _rand
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _setLED                                               1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _rand                                                 6     4      2     274
                                             43 COMRAM     6     4      2
                             ___lmul
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      58
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     216
                                             31 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _openLED                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              2     0      2     202
                                             33 COMRAM     2     0      2
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             4     2      2     116
                                             33 COMRAM     4     2      2
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     2      0      15
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Runlchb100                                           4     0      4     801
                                             41 COMRAM     4     0      4
                       _Closelchb100
                          _SetDCPWM1
                          _SetDCPWM2
                                _abs
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     131
                                             31 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM2                                            6     4      2      88
                                             35 COMRAM     6     4      2
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM1                                            6     4      2      88
                                             35 COMRAM     6     4      2
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (2) _Closelchb100                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Openlchb100                                          0     0      0      75
                           _OpenPWM1
                           _OpenPWM2
                         _OpenTimer2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      30
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM2                                             4     4      0      30
                                             31 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM1                                             1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenIRPD30                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DetectIRPD30                                        11    11      0     195
                                             32 COMRAM    11    11      0
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _lowISR                                              17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _highISR                                             14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Closelchb100
   _DetectIRPD30
     _Delay1KTCYx
   _OpenIRPD30
   _Openlchb100
     _OpenPWM1
     _OpenPWM2
     _OpenTimer2
   _Runlchb100
     _Closelchb100
     _SetDCPWM1
       _abs (ARG)
     _SetDCPWM2
       _abs (ARG)
     _abs
   _delay_ms
     _Delay10KTCYx
   _delay_s
     _Delay10KTCYx
   _openLED
   _rand
     ___lmul
     _srand
   _setLED

 _lowISR (ROOT)

 _highISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3C      43       1       52.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      43       7        0.0%
DATA                 0      0      43       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Feb 13 14:28:54 2015

                     l95 031E                       l89 0292                       u55 0544  
                     u65 050A              __CFG_BOR$ON 000000                       bsr 000FE0  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000                      l110 0330  
                    l206 063E                      l207 0640                      l183 0598  
                    l184 05A2                      l185 05A4                      l284 05DC  
                    l285 05E4                      l471 0692                      l464 0646  
                    l901 04BA                      l905 04CE                      l941 028C  
                    l881 0594                      l963 02CC                      l973 02E0  
                    l983 02F4                      l959 02C6                      l993 0308  
           __CFG_CPB$OFF 000000                      _PR2 000FCB                      u407 064C  
                    u417 0694             __CFG_CPD$OFF 000000                      _abs 05AE  
           __CFG_BORV$42 000000     __end_of_DetectIRPD30 0320                      wreg 000FE8  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     l1001 031C  
                   l1111 0108                     l1103 00F0                     l1033 034E  
                   l1051 0450                     l1107 00FC                     l1115 0112  
                   ?_abs 0020                     l1045 039E                     l1133 0164  
                   l1125 014E                     l1117 011A                     l1039 036E  
                   l1127 0152                     l1153 01CE                     l1145 019E  
                   l1139 0178                     l1157 01E6                     l1149 01B6  
                   l1085 00B6                     l1167 020C                     l1097 00E0  
                   _DDRD 000F95                     _LATD 000F8C                     _TMR2 000FCC  
           __CFG_PWRT$ON 000000                     abs@a 0020                     _main 00A6  
                   _rand 0440                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   fsr2l 000FD9                     pclat 000FFA                     prodh 000FF4  
                   prodl 000FF3                     start 00A2            __CFG_PBAD$DIG 000000  
          __CFG_FSCM$OFF 000000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
                  ??_abs 0022              _Delay1KTCYx 0690           __CFG_CCP2MX$ON 000000  
                  ?_main 0032                    ?_rand 002C                    _T2CON 000FCA  
                  _T3CON 000FB1           __CFG_DEBUG$OFF 000000                    _TMR3H 000FB3  
                  _TMR3L 000FB2    __size_of_Delay10KTCYx 0016          __end_of_delay_s 06AC  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
    ___lmul@multiplicand 0024            __CFG_WRT3$OFF 000000          __end_of_highISR 0440  
         __CFG_EBTR0$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_STVR$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _randf 0043                    _randx 003D                    _srand 066C  
        __end_of_openLED 06D0                    main@i 0039                    main@x 0037  
                  tablat 000FF5                    status 000FD8          __initialization 065A  
           __end_of_main 0246             __end_of_rand 04AA             _Delay10KTCYx 0644  
   __end_of_Closelchb100 06C2         __end_of_OpenPWM1 0690         __end_of_OpenPWM2 05AE  
                 ??_main 0037                   ??_rand 002E            __activetblptr 000003  
             _OpenIRPD30 06AC                   _ADCON1 000FC1            ??_Openlchb100 0023  
                 _CCPR1L 000FBE                   _CCPR2L 000FBB                   ?_srand 0020  
                 i2l1061 0404               _OpenTimer2 0628       __size_of_SetDCPWM1 003A  
     __size_of_SetDCPWM2 003A         __end_of_delay_ms 0608                   ___lmul 04AA  
                 _lowISR 0018                   _setLED 06C2         OpenTimer2@config 0020  
                 clear_0 0660    __size_of_DetectIRPD30 00DA                ??_delay_s 0024  
            setLED@value 0020                ??_highISR 0001                ??_openLED 0020  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
                 srand@x 0020               _Runlchb100 0320               __accesstop 0080  
__end_of__initialization 0666      __end_of_Openlchb100 0628             _DetectIRPD30 0246  
         __pcstackCOMRAM 0001        DetectIRPD30@i_764 0026            __end_of_srand 067E  
      DetectIRPD30@right 0028        __end_of_SetDCPWM1 0574        __end_of_SetDCPWM2 053A  
            ?_OpenIRPD30 0001                  ??_srand 0022              ?_OpenTimer2 0001  
              ?_OpenPWM1 0001                ?_OpenPWM2 0001            DetectIRPD30@i 0024  
          DetectIRPD30@x 0023    __size_of_Closelchb100 000A                  ?___lmul 0020  
                _CCP1CON 000FBD                  _CCP2CON 000FBA             ?_Delay1KTCYx 0001  
                ?_lowISR 0001                  ?_setLED 0001           ___lmul@product 0028  
         Runlchb100@port 002C      Runlchb100@starboard 002A                ?_delay_ms 0022  
            _Openlchb100 0608              ?_Runlchb100 002A             _Closelchb100 06B8  
             ??_OpenPWM1 0020               ??_OpenPWM2 0020                  __Hparam 0000  
    __size_of_OpenIRPD30 000C                  __Lparam 0000          __size_of___lmul 0056  
                __pcinit 065A          __size_of_lowISR 008A          __size_of_setLED 0008  
                _delay_s 06A0                  __ramtop 0200      __size_of_OpenTimer2 001C  
                _highISR 0008                  __ptext0 00A6                  __ptext1 06C2  
                __ptext2 0440                  __ptext3 066C                  __ptext4 04AA  
                __ptext5 06CA                  __ptext6 06A0                  __ptext7 05E6  
                __ptext8 0644                  __ptext9 0320                _T2CONbits 000FCA  
           __size_of_abs 0038                _T3CONbits 000FB1                  _openLED 06CA  
             ??_delay_ms 0024           __pintcode_body 03D0     end_of_initialization 0666  
                int_func 03D0               _tick_units 0041                  postinc0 000FEE  
    __size_of_Runlchb100 00B0                _PORTEbits 000F84                _TRISBbits 000F93  
              _TRISCbits 000F94               main@action 003C           __end_of___lmul 0500  
         __end_of_lowISR 00A2           __end_of_setLED 06CA     __size_of_Delay1KTCYx 0010  
     DetectIRPD30@action 0021             ??_OpenIRPD30 0020      start_initialization 065A  
              _SetDCPWM1 053A                _SetDCPWM2 0500          SetDCPWM1@DCycle 0028  
            __end_of_abs 05E6          SetDCPWM2@DCycle 0028             ??_OpenTimer2 0020  
      __size_of_OpenPWM1 0012        __size_of_OpenPWM2 003A       __end_of_OpenIRPD30 06B8  
               ??___lmul 0028                 ??_lowISR 000F                 ??_setLED 0020  
     __end_of_OpenTimer2 0644              __pbssCOMRAM 003D               ?_SetDCPWM1 0024  
             ?_SetDCPWM2 0024         DetectIRPD30@left 002A             ?_Openlchb100 0001  
      __size_of_delay_ms 0022             ??_Runlchb100 002E          Delay1KTCYx@unit 0020  
              __pintcode 0008            ?_Delay10KTCYx 0001              __pintcodelo 0018  
               ?_delay_s 0022                 ?_highISR 0001       __end_of_Runlchb100 03D0  
               ?_openLED 0001                 _DDRAbits 000F92                 _DDREbits 000F96  
         __size_of_srand 0012                 _LATAbits 000F89                 _LATEbits 000F8D  
              delay_ms@x 0022                 _IPR2bits 000FA2                 _PIE1bits 000F9D  
               _PIE2bits 000FA0                 _PIR1bits 000F9E                 _PIR2bits 000FA1  
               _RCONbits 000FD0           ??_Delay10KTCYx 0020                main@state 003B  
            ??_SetDCPWM1 0026              ??_SetDCPWM2 0026         Delay10KTCYx@unit 0021  
      ___lmul@multiplier 0020       SetDCPWM1@dutycycle 0024                 _OpenPWM1 067E  
               _OpenPWM2 0574                 __Hrparam 0000            ?_DetectIRPD30 0001  
               __Lrparam 0000       SetDCPWM2@dutycycle 0024           OpenPWM2@ccp2mx 0022  
       __size_of_delay_s 000C         __size_of_highISR 0438           OpenPWM1@period 0020  
         OpenPWM2@period 0021                 _delay_ms 05E6         __size_of_openLED 0006  
               __ptext10 05AE                 __ptext11 0500                 __ptext20 0690  
               __ptext12 053A                 __ptext13 06B8                 __ptext14 0608  
               __ptext15 0628                 __ptext16 0574                 __ptext17 067E  
               __ptext18 06AC                 __ptext19 0246     __size_of_Openlchb100 0020  
          __size_of_main 01A0            __size_of_rand 006A           ??_DetectIRPD30 0021  
               delay_s@x 0022            ??_Delay1KTCYx 0020                 main@argc 0032  
               main@argv 0034               _INTCONbits 000FF2     __end_of_Delay10KTCYx 065A  
               intlevel1 0000                 intlevel2 0000            ?_Closelchb100 0001  
    __end_of_Delay1KTCYx 06A0           ??_Closelchb100 0020  
