

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Apr 13 10:34:34 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4320
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           	psect	idataCOMRAM
    52  00129C                     __pidataCOMRAM:
    53                           	opt stack 0
    54                           
    55                           ;initializer for _ticksRL
    56  00129C  01                 	db	1
    57  0000                     _ADCON1	set	4033
    58  0000                     _CCP1CON	set	4029
    59  0000                     _CCP2CON	set	4026
    60  0000                     _CCPR1L	set	4030
    61  0000                     _CCPR2L	set	4027
    62  0000                     _DDRAbits	set	3986
    63  0000                     _DDRD	set	3989
    64  0000                     _INTCON2bits	set	4081
    65  0000                     _INTCONbits	set	4082
    66  0000                     _IPR2bits	set	4002
    67  0000                     _LATAbits	set	3977
    68  0000                     _LATBbits	set	3978
    69  0000                     _LATD	set	3980
    70  0000                     _PIE1bits	set	3997
    71  0000                     _PIE2bits	set	4000
    72  0000                     _PIR1bits	set	3998
    73  0000                     _PIR2bits	set	4001
    74  0000                     _PORTB	set	3969
    75  0000                     _PORTBbits	set	3969
    76  0000                     _PR2	set	4043
    77  0000                     _RCONbits	set	4048
    78  0000                     _SSPADD	set	4040
    79  0000                     _SSPBUF	set	4041
    80  0000                     _SSPCON1	set	4038
    81  0000                     _SSPCON1bits	set	4038
    82  0000                     _SSPCON2	set	4037
    83  0000                     _SSPCON2bits	set	4037
    84  0000                     _SSPSTAT	set	4039
    85  0000                     _SSPSTATbits	set	4039
    86  0000                     _T0CON	set	4053
    87  0000                     _T0CONbits	set	4053
    88  0000                     _T2CON	set	4042
    89  0000                     _T2CONbits	set	4042
    90  0000                     _T3CON	set	4017
    91  0000                     _T3CONbits	set	4017
    92  0000                     _TMR0H	set	4055
    93  0000                     _TMR0L	set	4054
    94  0000                     _TMR2	set	4044
    95  0000                     _TMR3H	set	4019
    96  0000                     _TMR3L	set	4018
    97  0000                     _TRISBbits	set	3987
    98  0000                     _TRISCbits	set	3988
    99                           
   100                           ; #config settings
   101  0000                     
   102                           	psect	cinit
   103  001118                     __pcinit:
   104                           	opt stack 0
   105  001118                     start_initialization:
   106                           	opt stack 0
   107  001118                     __initialization:
   108                           	opt stack 0
   109                           
   110                           ; Clear objects allocated to COMRAM (7 bytes)
   111  001118  EE00  F053         	lfsr	0,__pbssCOMRAM
   112  00111C  0E07               	movlw	7
   113  00111E                     clear_0:
   114  00111E  6AEE               	clrf	postinc0,c
   115  001120  06E8               	decf	wreg,f,c
   116  001122  E1FD               	bnz	clear_0
   117                           
   118                           ; Initialize objects allocated to COMRAM (1 bytes)
   119                           ; load TBLPTR registers with __pidataCOMRAM
   120  001124  0E9C               	movlw	low __pidataCOMRAM
   121  001126  6EF6               	movwf	tblptrl,c
   122  001128  0E12               	movlw	high __pidataCOMRAM
   123  00112A  6EF7               	movwf	tblptrh,c
   124  00112C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   125  00112E  6EF8               	movwf	tblptru,c
   126  001130  0009               	tblrd		*+	;fetch initializer
   127  001132  CFF5 F05A          	movff	tablat,__pdataCOMRAM
   128  001136                     end_of_initialization:
   129                           	opt stack 0
   130  001136                     __end_of__initialization:
   131                           	opt stack 0
   132  001136  0100               	movlb	0
   133  001138  EF84  F000         	goto	_main	;jump to C main() function
   134                           tblptru	equ	0xFF8
   135                           tblptrh	equ	0xFF7
   136                           tblptrl	equ	0xFF6
   137                           tablat	equ	0xFF5
   138                           postinc0	equ	0xFEE
   139                           wreg	equ	0xFE8
   140                           
   141                           	psect	bssCOMRAM
   142  000053                     __pbssCOMRAM:
   143                           	opt stack 0
   144  000053                     _tick_units:
   145                           	opt stack 0
   146  000053                     	ds	2
   147  000055                     _ticksLeft:
   148                           	opt stack 0
   149  000055                     	ds	2
   150  000057                     _ticksRight:
   151                           	opt stack 0
   152  000057                     	ds	2
   153  000059                     _portB:
   154                           	opt stack 0
   155  000059                     	ds	1
   156                           tblptru	equ	0xFF8
   157                           tblptrh	equ	0xFF7
   158                           tblptrl	equ	0xFF6
   159                           tablat	equ	0xFF5
   160                           postinc0	equ	0xFEE
   161                           wreg	equ	0xFE8
   162                           
   163                           	psect	dataCOMRAM
   164  00005A                     __pdataCOMRAM:
   165                           	opt stack 0
   166  00005A                     _ticksRL:
   167                           	opt stack 0
   168  00005A                     	ds	1
   169                           tblptru	equ	0xFF8
   170                           tblptrh	equ	0xFF7
   171                           tblptrl	equ	0xFF6
   172                           tablat	equ	0xFF5
   173                           postinc0	equ	0xFEE
   174                           wreg	equ	0xFE8
   175                           
   176                           	psect	cstackBANK0
   177  000080                     __pcstackBANK0:
   178                           	opt stack 0
   179  000080                     
   180                           ; 2 bytes @ 0x0
   181  000080                     	ds	2
   182  000082                     
   183                           ; 3 bytes @ 0x2
   184  000082                     	ds	3
   185  000085                     ??_main:
   186                           
   187                           ; 0 bytes @ 0x5
   188  000085                     	ds	7
   189  00008C                     main@dodge_bearing:
   190                           	opt stack 0
   191                           
   192                           ; 1 bytes @ 0xC
   193  00008C                     	ds	1
   194  00008D                     main@intended_bearing:
   195                           	opt stack 0
   196                           
   197                           ; 1 bytes @ 0xD
   198  00008D                     	ds	1
   199  00008E                     main@left_turn_distance:
   200                           	opt stack 0
   201                           
   202                           ; 1 bytes @ 0xE
   203  00008E                     	ds	1
   204  00008F                     main@bearing_adjust:
   205                           	opt stack 0
   206                           
   207                           ; 1 bytes @ 0xF
   208  00008F                     	ds	1
   209  000090                     main@allowed_error_normal:
   210                           	opt stack 0
   211                           
   212                           ; 1 bytes @ 0x10
   213  000090                     	ds	1
   214  000091                     main@bearing_adjust_amount:
   215                           	opt stack 0
   216                           
   217                           ; 1 bytes @ 0x11
   218  000091                     	ds	1
   219  000092                     main@right_turn_distance:
   220                           	opt stack 0
   221                           
   222                           ; 1 bytes @ 0x12
   223  000092                     	ds	1
   224  000093                     main@travel_time_dodge:
   225                           	opt stack 0
   226                           
   227                           ; 2 bytes @ 0x13
   228  000093                     	ds	2
   229  000095                     main@travel_time_all_clear:
   230                           	opt stack 0
   231                           
   232                           ; 2 bytes @ 0x15
   233  000095                     	ds	2
   234  000097                     main@degree_turn:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x17
   238  000097                     	ds	2
   239  000099                     main@leftCM:
   240                           	opt stack 0
   241                           
   242                           ; 2 bytes @ 0x19
   243  000099                     	ds	2
   244  00009B                     main@rightCM:
   245                           	opt stack 0
   246                           
   247                           ; 2 bytes @ 0x1B
   248  00009B                     	ds	2
   249  00009D                     main@state:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0x1D
   253  00009D                     	ds	1
   254  00009E                     main@allowed_error_dodge:
   255                           	opt stack 0
   256                           
   257                           ; 1 bytes @ 0x1E
   258  00009E                     	ds	1
   259  00009F                     main@detection_distance:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x1F
   263  00009F                     	ds	1
   264  0000A0                     main@lane:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0x20
   268  0000A0                     	ds	2
   269  0000A2                     main@motor_tick_rate:
   270                           	opt stack 0
   271                           
   272                           ; 1 bytes @ 0x22
   273  0000A2                     	ds	1
   274  0000A3                     main@adjusted_intended:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x23
   278  0000A3                     	ds	1
   279  0000A4                     main@current_bearing:
   280                           	opt stack 0
   281                           
   282                           ; 1 bytes @ 0x24
   283  0000A4                     	ds	1
   284  0000A5                     main@motor_speed_left:
   285                           	opt stack 0
   286                           
   287                           ; 1 bytes @ 0x25
   288  0000A5                     	ds	1
   289  0000A6                     main@motor_speed_right:
   290                           	opt stack 0
   291                           
   292                           ; 1 bytes @ 0x26
   293  0000A6                     	ds	1
   294                           tblptru	equ	0xFF8
   295                           tblptrh	equ	0xFF7
   296                           tblptrl	equ	0xFF6
   297                           tablat	equ	0xFF5
   298                           postinc0	equ	0xFEE
   299                           wreg	equ	0xFE8
   300                           
   301                           	psect	cstackCOMRAM
   302  000001                     __pcstackCOMRAM:
   303                           	opt stack 0
   304  000001                     ??_highISR:
   305  000001                     
   306                           ; 2 bytes @ 0x0
   307  000001                     	ds	14
   308  00000F                     ?_ReadTimer0:
   309                           	opt stack 0
   310  00000F                     WriteTimer0@timer0:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0xE
   314  00000F                     	ds	2
   315  000011                     ReadTimer0@timer:
   316                           	opt stack 0
   317  000011                     WriteTimer0@timer:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x10
   321  000011                     	ds	2
   322  000013                     ??_lowISR:
   323                           
   324                           ; 0 bytes @ 0x12
   325  000013                     	ds	17
   326  000024                     ??_Delay10KTCYx:
   327  000024                     ??_OpenPWM2:
   328  000024                     ??_IdleI2C:
   329  000024                     ??_ReadI2C:
   330  000024                     ?_abs:
   331                           	opt stack 0
   332  000024                     ?___lwdiv:
   333                           	opt stack 0
   334  000024                     ?___ftpack:
   335                           	opt stack 0
   336  000024                     setLED@value:
   337                           	opt stack 0
   338  000024                     OpenPWM1@period:
   339                           	opt stack 0
   340  000024                     OpenTimer0@config:
   341                           	opt stack 0
   342  000024                     OpenTimer2@config:
   343                           	opt stack 0
   344  000024                     OpenI2C@slew:
   345                           	opt stack 0
   346  000024                     Delay10TCYx@unit:
   347                           	opt stack 0
   348  000024                     abs@a:
   349                           	opt stack 0
   350  000024                     ___lwdiv@dividend:
   351                           	opt stack 0
   352  000024                     ___ftpack@arg:
   353                           	opt stack 0
   354                           
   355                           ; 3 bytes @ 0x23
   356  000024                     	ds	1
   357  000025                     ??_WriteI2C:
   358  000025                     OpenPWM2@period:
   359                           	opt stack 0
   360  000025                     OpenI2C@sync_mode:
   361                           	opt stack 0
   362  000025                     Delay10KTCYx@unit:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x24
   366  000025                     	ds	1
   367  000026                     ??_abs:
   368  000026                     OpenPWM2@ccp2mx:
   369                           	opt stack 0
   370  000026                     WriteI2C@data_out:
   371                           	opt stack 0
   372  000026                     delay_ms@x:
   373                           	opt stack 0
   374  000026                     delay_s@x:
   375                           	opt stack 0
   376  000026                     ___lwdiv@divisor:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x25
   380  000026                     	ds	1
   381  000027                     ReadCMPS03@byte:
   382                           	opt stack 0
   383  000027                     ___ftpack@exp:
   384                           	opt stack 0
   385                           
   386                           ; 1 bytes @ 0x26
   387  000027                     	ds	1
   388  000028                     ??_delay_ms:
   389  000028                     ___ftpack@sign:
   390                           	opt stack 0
   391  000028                     SetDCPWM1@dutycycle:
   392                           	opt stack 0
   393  000028                     SetDCPWM2@dutycycle:
   394                           	opt stack 0
   395  000028                     ___lwdiv@quotient:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x27
   399  000028                     	ds	1
   400  000029                     ??___ftpack:
   401                           
   402                           ; 0 bytes @ 0x28
   403  000029                     	ds	1
   404  00002A                     ??_SetDCPWM1:
   405  00002A                     ??_SetDCPWM2:
   406  00002A                     ___lwdiv@counter:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0x29
   410  00002A                     	ds	2
   411  00002C                     ?___awtoft:
   412                           	opt stack 0
   413  00002C                     SetDCPWM1@DCycle:
   414                           	opt stack 0
   415  00002C                     SetDCPWM2@DCycle:
   416                           	opt stack 0
   417  00002C                     ___awtoft@c:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x2B
   421  00002C                     	ds	2
   422  00002E                     Runlchb100@starboard:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x2D
   426  00002E                     	ds	1
   427  00002F                     ___awtoft@sign:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x2E
   431  00002F                     	ds	1
   432  000030                     ?___ftmul:
   433                           	opt stack 0
   434  000030                     Runlchb100@port:
   435                           	opt stack 0
   436  000030                     ___ftmul@f1:
   437                           	opt stack 0
   438                           
   439                           ; 3 bytes @ 0x2F
   440  000030                     	ds	2
   441  000032                     
   442                           ; 0 bytes @ 0x31
   443  000032                     	ds	1
   444  000033                     ___ftmul@f2:
   445                           	opt stack 0
   446                           
   447                           ; 3 bytes @ 0x32
   448  000033                     	ds	3
   449  000036                     ??___ftmul:
   450                           
   451                           ; 0 bytes @ 0x35
   452  000036                     	ds	3
   453  000039                     ___ftmul@exp:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0x38
   457  000039                     	ds	1
   458  00003A                     ___ftmul@f3_as_product:
   459                           	opt stack 0
   460                           
   461                           ; 3 bytes @ 0x39
   462  00003A                     	ds	3
   463  00003D                     ___ftmul@cntr:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x3C
   467  00003D                     	ds	1
   468  00003E                     ___ftmul@sign:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x3D
   472  00003E                     	ds	1
   473  00003F                     ?___fttol:
   474                           	opt stack 0
   475  00003F                     ___fttol@f1:
   476                           	opt stack 0
   477                           
   478                           ; 3 bytes @ 0x3E
   479  00003F                     	ds	4
   480  000043                     ??___fttol:
   481                           
   482                           ; 0 bytes @ 0x42
   483  000043                     	ds	5
   484  000048                     ___fttol@sign1:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x47
   488  000048                     	ds	1
   489  000049                     ___fttol@lval:
   490                           	opt stack 0
   491                           
   492                           ; 4 bytes @ 0x48
   493  000049                     	ds	4
   494  00004D                     ___fttol@exp1:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x4C
   498  00004D                     	ds	1
   499  00004E                     custom_delay@iterations:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x4D
   503  00004E                     	ds	2
   504  000050                     ??_custom_delay:
   505                           
   506                           ; 0 bytes @ 0x4F
   507  000050                     	ds	1
   508  000051                     custom_delay@i:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x50
   512  000051                     	ds	2
   513                           tblptru	equ	0xFF8
   514                           tblptrh	equ	0xFF7
   515                           tblptrl	equ	0xFF6
   516                           tablat	equ	0xFF5
   517                           postinc0	equ	0xFEE
   518                           wreg	equ	0xFE8
   519                           
   520 ;;
   521 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
   522 ;;
   523 ;; *************** function _main *****************
   524 ;; Defined at:
   525 ;;		line 92 in file "Main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;  argc            2    0[BANK0 ] int 
   528 ;;  argv            3    2[BANK0 ] PTR PTR unsigned char 
   529 ;; Auto vars:     Size  Location     Type
   530 ;;  rightCM         2   27[BANK0 ] unsigned int 
   531 ;;  leftCM          2   25[BANK0 ] unsigned int 
   532 ;;  adjusted_int    1   35[BANK0 ] unsigned char 
   533 ;;  lane            2   32[BANK0 ] int 
   534 ;;  degree_turn     2   23[BANK0 ] int 
   535 ;;  travel_time_    2   21[BANK0 ] int 
   536 ;;  travel_time_    2   19[BANK0 ] int 
   537 ;;  motor_speed_    1   38[BANK0 ] unsigned char 
   538 ;;  motor_speed_    1   37[BANK0 ] unsigned char 
   539 ;;  current_bear    1   36[BANK0 ] unsigned char 
   540 ;;  motor_tick_r    1   34[BANK0 ] unsigned char 
   541 ;;  detection_di    1   31[BANK0 ] unsigned char 
   542 ;;  allowed_erro    1   30[BANK0 ] unsigned char 
   543 ;;  state           1   29[BANK0 ] enum E4189
   544 ;;  right_turn_d    1   18[BANK0 ] unsigned char 
   545 ;;  bearing_adju    1   17[BANK0 ] unsigned char 
   546 ;;  allowed_erro    1   16[BANK0 ] unsigned char 
   547 ;;  bearing_adju    1   15[BANK0 ] unsigned char 
   548 ;;  left_turn_di    1   14[BANK0 ] unsigned char 
   549 ;;  intended_bea    1   13[BANK0 ] unsigned char 
   550 ;;  dodge_bearin    1   12[BANK0 ] unsigned char 
   551 ;; Return value:  Size  Location     Type
   552 ;;                  2    0[BANK0 ] int 
   553 ;; Registers used:
   554 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMRAM   BANK0   BANK1
   560 ;;      Params:         0       5       0
   561 ;;      Locals:         0      27       0
   562 ;;      Temps:          0       7       0
   563 ;;      Totals:         0      39       0
   564 ;;Total ram usage:       39 bytes
   565 ;; Hardware stack levels required when called:    6
   566 ;; This function calls:
   567 ;;		_Closelchb100
   568 ;;		_OpenCMPS03
   569 ;;		_OpenSRF04
   570 ;;		_Openlchb100
   571 ;;		_ReadCMPS03
   572 ;;		_Runlchb100
   573 ;;		_TriggerLeftSRF04
   574 ;;		_TriggerRightSRF04
   575 ;;		___awtoft
   576 ;;		___ftmul
   577 ;;		___fttol
   578 ;;		___lwdiv
   579 ;;		_custom_delay
   580 ;;		_delay_ms
   581 ;;		_delay_s
   582 ;;		_openLED
   583 ;;		_setLED
   584 ;; This function is called by:
   585 ;;		Startup code after reset
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           	psect	text0
   590  000108                     __ptext0:
   591                           	opt stack 0
   592  000108                     _main:
   593                           	opt stack 25
   594                           
   595                           ;Main.c: 94: openLED();
   596                           
   597                           ;incstack = 0
   598  000108  EC4B  F009         	call	_openLED	;wreg free
   599                           
   600                           ;Main.c: 96: Openlchb100();
   601  00010C  ECAF  F008         	call	_Openlchb100	;wreg free
   602                           
   603                           ;Main.c: 98: OpenCMPS03();
   604  000110  EC07  F009         	call	_OpenCMPS03	;wreg free
   605                           
   606                           ;Main.c: 100: OpenSRF04();
   607  000114  ECBF  F008         	call	_OpenSRF04	;wreg free
   608                           
   609                           ;Main.c: 103: custom_delay(100);
   610  000118  0E00               	movlw	0
   611  00011A  6E4F               	movwf	custom_delay@iterations+1,c
   612  00011C  0E64               	movlw	100
   613  00011E  6E4E               	movwf	custom_delay@iterations,c
   614  000120  EC3D  F008         	call	_custom_delay	;wreg free
   615                           
   616                           ;Main.c: 104: unsigned char intended_bearing = ReadCMPS03();
   617  000124  EC52  F007         	call	_ReadCMPS03	;wreg free
   618  000128  0100               	movlb	0	; () banked
   619  00012A  6F8D               	movwf	main@intended_bearing& (0+255),b
   620                           
   621                           ; BSR set to: 0
   622                           ;Main.c: 107: char right_turn_distance = 0;
   623  00012C  0E00               	movlw	0
   624  00012E  0100               	movlb	0	; () banked
   625  000130  6F92               	movwf	main@right_turn_distance& (0+255),b
   626                           
   627                           ; BSR set to: 0
   628                           ;Main.c: 108: char left_turn_distance = 0;
   629  000132  0E00               	movlw	0
   630  000134  0100               	movlb	0	; () banked
   631  000136  6F8E               	movwf	main@left_turn_distance& (0+255),b
   632                           
   633                           ; BSR set to: 0
   634                           ;Main.c: 109: char allowed_error_normal = 2;
   635  000138  0E02               	movlw	2
   636  00013A  0100               	movlb	0	; () banked
   637  00013C  6F90               	movwf	main@allowed_error_normal& (0+255),b
   638                           
   639                           ; BSR set to: 0
   640                           ;Main.c: 110: unsigned char allowed_error_dodge = 5;
   641  00013E  0E05               	movlw	5
   642  000140  0100               	movlb	0	; () banked
   643  000142  6F9E               	movwf	main@allowed_error_dodge& (0+255),b
   644                           
   645                           ; BSR set to: 0
   646                           ;Main.c: 111: unsigned char current_bearing;
   647                           ;Main.c: 112: unsigned char dodge_bearing = 64;
   648  000144  0E40               	movlw	64
   649  000146  0100               	movlb	0	; () banked
   650  000148  6F8C               	movwf	main@dodge_bearing& (0+255),b
   651                           
   652                           ; BSR set to: 0
   653                           ;Main.c: 113: unsigned char detection_distance = 12;
   654  00014A  0E0C               	movlw	12
   655  00014C  0100               	movlb	0	; () banked
   656  00014E  6F9F               	movwf	main@detection_distance& (0+255),b
   657                           
   658                           ; BSR set to: 0
   659                           ;Main.c: 114: int travel_time_dodge = 800;
   660  000150  0E03               	movlw	3
   661  000152  0100               	movlb	0	; () banked
   662  000154  6F94               	movwf	(main@travel_time_dodge+1)& (0+255),b
   663  000156  0E20               	movlw	32
   664  000158  0100               	movlb	0	; () banked
   665  00015A  6F93               	movwf	main@travel_time_dodge& (0+255),b
   666                           
   667                           ; BSR set to: 0
   668                           ;Main.c: 115: int travel_time_all_clear = 200;
   669  00015C  0E00               	movlw	0
   670  00015E  0100               	movlb	0	; () banked
   671  000160  6F96               	movwf	(main@travel_time_all_clear+1)& (0+255),b
   672  000162  0EC8               	movlw	200
   673  000164  0100               	movlb	0	; () banked
   674  000166  6F95               	movwf	main@travel_time_all_clear& (0+255),b
   675                           
   676                           ; BSR set to: 0
   677                           ;Main.c: 116: unsigned char motor_speed_left = 217;
   678  000168  0ED9               	movlw	217
   679  00016A  0100               	movlb	0	; () banked
   680  00016C  6FA5               	movwf	main@motor_speed_left& (0+255),b
   681                           
   682                           ; BSR set to: 0
   683                           ;Main.c: 117: unsigned char motor_speed_right = 210;
   684  00016E  0ED2               	movlw	210
   685  000170  0100               	movlb	0	; () banked
   686  000172  6FA6               	movwf	main@motor_speed_right& (0+255),b
   687                           
   688                           ; BSR set to: 0
   689                           ;Main.c: 118: unsigned char motor_tick_rate = 30;
   690  000174  0E1E               	movlw	30
   691  000176  0100               	movlb	0	; () banked
   692  000178  6FA2               	movwf	main@motor_tick_rate& (0+255),b
   693                           
   694                           ; BSR set to: 0
   695                           ;Main.c: 119: unsigned char bearing_adjust = 0;
   696  00017A  0E00               	movlw	0
   697  00017C  0100               	movlb	0	; () banked
   698  00017E  6F8F               	movwf	main@bearing_adjust& (0+255),b
   699                           
   700                           ; BSR set to: 0
   701                           ;Main.c: 120: unsigned char bearing_adjust_amount = 3;
   702  000180  0E03               	movlw	3
   703  000182  0100               	movlb	0	; () banked
   704  000184  6F91               	movwf	main@bearing_adjust_amount& (0+255),b
   705                           
   706                           ; BSR set to: 0
   707                           ;Main.c: 121: enum STATE state = scan;
   708  000186  0E00               	movlw	0
   709  000188  0100               	movlb	0	; () banked
   710  00018A  6F9D               	movwf	main@state& (0+255),b
   711                           
   712                           ; BSR set to: 0
   713                           ;Main.c: 122: int lane = 0;
   714  00018C  0E00               	movlw	0
   715  00018E  0100               	movlb	0	; () banked
   716  000190  6FA1               	movwf	(main@lane+1)& (0+255),b
   717  000192  0E00               	movlw	0
   718  000194  0100               	movlb	0	; () banked
   719  000196  6FA0               	movwf	main@lane& (0+255),b
   720                           
   721                           ; BSR set to: 0
   722                           ;Main.c: 123: int degree_turn = 500;
   723  000198  0E01               	movlw	1
   724  00019A  0100               	movlb	0	; () banked
   725  00019C  6F98               	movwf	(main@degree_turn+1)& (0+255),b
   726  00019E  0EF4               	movlw	244
   727  0001A0  0100               	movlb	0	; () banked
   728  0001A2  6F97               	movwf	main@degree_turn& (0+255),b
   729  0001A4                     l2574:
   730                           
   731                           ; BSR set to: 0
   732                           ;Main.c: 127: unsigned char adjusted_intended = intended_bearing + bearing_adjust;
   733  0001A4  0100               	movlb	0	; () banked
   734  0001A6  518D               	movf	main@intended_bearing& (0+255),w,b
   735  0001A8  0100               	movlb	0	; () banked
   736  0001AA  258F               	addwf	main@bearing_adjust& (0+255),w,b
   737  0001AC  0100               	movlb	0	; () banked
   738  0001AE  6FA3               	movwf	main@adjusted_intended& (0+255),b
   739                           
   740                           ;Main.c: 129: switch (state) {
   741  0001B0  EF40  F005         	goto	l2808
   742  0001B4                     l2576:
   743                           
   744                           ; BSR set to: 0
   745                           ;Main.c: 131: {
   746                           ;Main.c: 132: setLED(0b00000001);
   747  0001B4  0E01               	movlw	1
   748  0001B6  EC47  F009         	call	_setLED
   749                           
   750                           ;Main.c: 134: custom_delay(10);
   751  0001BA  0E00               	movlw	0
   752  0001BC  6E4F               	movwf	custom_delay@iterations+1,c
   753  0001BE  0E0A               	movlw	10
   754  0001C0  6E4E               	movwf	custom_delay@iterations,c
   755  0001C2  EC3D  F008         	call	_custom_delay	;wreg free
   756                           
   757                           ;Main.c: 135: current_bearing = ReadCMPS03();
   758  0001C6  EC52  F007         	call	_ReadCMPS03	;wreg free
   759  0001CA  0100               	movlb	0	; () banked
   760  0001CC  6FA4               	movwf	main@current_bearing& (0+255),b
   761                           
   762                           ; BSR set to: 0
   763                           ;Main.c: 136: if (lane > 1 || lane < -1) {
   764  0001CE  0100               	movlb	0	; () banked
   765  0001D0  51A1               	movf	(main@lane+1)& (0+255),w,b
   766  0001D2  0A80               	xorlw	128
   767  0001D4  6EF3               	movwf	prodl,c
   768  0001D6  0E80               	movlw	128
   769  0001D8  5CF3               	subwf	prodl,w,c
   770  0001DA  0E02               	movlw	2
   771  0001DC  B4D8               	btfsc	status,2,c
   772  0001DE  5DA0               	subwf	main@lane& (0+255),w,b
   773  0001E0  B0D8               	btfsc	status,0,c
   774  0001E2  D00B               	goto	l2586
   775                           
   776                           ; BSR set to: 0
   777  0001E4  0100               	movlb	0	; () banked
   778  0001E6  51A1               	movf	(main@lane+1)& (0+255),w,b
   779  0001E8  0A80               	xorlw	128
   780  0001EA  6EF3               	movwf	prodl,c
   781  0001EC  0E7F               	movlw	127
   782  0001EE  5CF3               	subwf	prodl,w,c
   783  0001F0  0EFF               	movlw	255
   784  0001F2  B4D8               	btfsc	status,2,c
   785  0001F4  5DA0               	subwf	main@lane& (0+255),w,b
   786  0001F6  B0D8               	btfsc	status,0,c
   787  0001F8  D003               	goto	l2588
   788  0001FA                     l2586:
   789                           
   790                           ; BSR set to: 0
   791                           ;Main.c: 137: state = error;
   792  0001FA  0E05               	movlw	5
   793  0001FC  0100               	movlb	0	; () banked
   794  0001FE  6F9D               	movwf	main@state& (0+255),b
   795  000200                     l2588:
   796                           
   797                           ; BSR set to: 0
   798                           ;Main.c: 138: }
   799                           ;Main.c: 139: if (current_bearing >= adjusted_intended + allowed_error_normal
   800                           ;Main.c: 140: || current_bearing <= adjusted_intended - allowed_error_normal) {
   801  000200  0100               	movlb	0	; () banked
   802  000202  5190               	movf	main@allowed_error_normal& (0+255),w,b
   803  000204  0100               	movlb	0	; () banked
   804  000206  C0A3  F085         	movff	main@adjusted_intended,??_main
   805  00020A  0100               	movlb	0	; () banked
   806  00020C  6B86               	clrf	(??_main+1)& (0+255),b
   807  00020E  0100               	movlb	0	; () banked
   808  000210  2785               	addwf	??_main& (0+255),f,b
   809  000212  0E00               	movlw	0
   810  000214  2386               	addwfc	(??_main+1)& (0+255),f,b
   811  000216  0100               	movlb	0	; () banked
   812  000218  51A4               	movf	main@current_bearing& (0+255),w,b
   813  00021A  0100               	movlb	0	; () banked
   814  00021C  6F87               	movwf	(??_main+2)& (0+255),b
   815  00021E  6B88               	clrf	(??_main+3)& (0+255),b
   816  000220  0100               	movlb	0	; () banked
   817  000222  5188               	movf	(??_main+3)& (0+255),w,b
   818  000224  0A80               	xorlw	128
   819  000226  0100               	movlb	0	; () banked
   820  000228  6F89               	movwf	(??_main+4)& (0+255),b
   821  00022A  0100               	movlb	0	; () banked
   822  00022C  5185               	movf	??_main& (0+255),w,b
   823  00022E  0100               	movlb	0	; () banked
   824  000230  5D87               	subwf	(??_main+2)& (0+255),w,b
   825  000232  0100               	movlb	0	; () banked
   826  000234  5186               	movf	(??_main+1)& (0+255),w,b
   827  000236  0A80               	xorlw	128
   828  000238  0100               	movlb	0	; () banked
   829  00023A  5989               	subwfb	(??_main+4)& (0+255),w,b
   830  00023C  B0D8               	btfsc	status,0,c
   831  00023E  D02B               	goto	l2592
   832                           
   833                           ; BSR set to: 0
   834  000240  0100               	movlb	0	; () banked
   835  000242  51A4               	movf	main@current_bearing& (0+255),w,b
   836  000244  0100               	movlb	0	; () banked
   837  000246  6F85               	movwf	??_main& (0+255),b
   838  000248  6B86               	clrf	(??_main+1)& (0+255),b
   839  00024A  0100               	movlb	0	; () banked
   840  00024C  5190               	movf	main@allowed_error_normal& (0+255),w,b
   841  00024E  0100               	movlb	0	; () banked
   842  000250  6F87               	movwf	(??_main+2)& (0+255),b
   843  000252  6B88               	clrf	(??_main+3)& (0+255),b
   844  000254  0100               	movlb	0	; () banked
   845  000256  1F87               	comf	(??_main+2)& (0+255),f,b
   846  000258  1F88               	comf	(??_main+3)& (0+255),f,b
   847  00025A  4B87               	infsnz	(??_main+2)& (0+255),f,b
   848  00025C  2B88               	incf	(??_main+3)& (0+255),f,b
   849  00025E  0100               	movlb	0	; () banked
   850  000260  51A3               	movf	main@adjusted_intended& (0+255),w,b
   851  000262  0100               	movlb	0	; () banked
   852  000264  6F89               	movwf	(??_main+4)& (0+255),b
   853  000266  6B8A               	clrf	(??_main+5)& (0+255),b
   854  000268  0100               	movlb	0	; () banked
   855  00026A  5187               	movf	(??_main+2)& (0+255),w,b
   856  00026C  0100               	movlb	0	; () banked
   857  00026E  2789               	addwf	(??_main+4)& (0+255),f,b
   858  000270  0100               	movlb	0	; () banked
   859  000272  5188               	movf	(??_main+3)& (0+255),w,b
   860  000274  0100               	movlb	0	; () banked
   861  000276  238A               	addwfc	(??_main+5)& (0+255),f,b
   862  000278  0100               	movlb	0	; () banked
   863  00027A  518A               	movf	(??_main+5)& (0+255),w,b
   864  00027C  0A80               	xorlw	128
   865  00027E  0100               	movlb	0	; () banked
   866  000280  6F8B               	movwf	(??_main+6)& (0+255),b
   867  000282  5185               	movf	??_main& (0+255),w,b
   868  000284  0100               	movlb	0	; () banked
   869  000286  5D89               	subwf	(??_main+4)& (0+255),w,b
   870  000288  0100               	movlb	0	; () banked
   871  00028A  5186               	movf	(??_main+1)& (0+255),w,b
   872  00028C  0A80               	xorlw	128
   873  00028E  0100               	movlb	0	; () banked
   874  000290  598B               	subwfb	(??_main+6)& (0+255),w,b
   875  000292  A0D8               	btfss	status,0,c
   876  000294  D002               	goto	l2594
   877  000296                     l2592:
   878                           
   879                           ; BSR set to: 0
   880                           ;Main.c: 141: state = fix_bearing;
   881  000296  0E04               	movlw	4
   882  000298  D06D               	goto	L3
   883  00029A                     l2594:
   884                           
   885                           ; BSR set to: 0
   886                           ;Main.c: 145: TriggerLeftSRF04();
   887  00029A  EC79  F008         	call	_TriggerLeftSRF04	;wreg free
   888                           
   889                           ;Main.c: 146: delay_ms(100);
   890  00029E  0E00               	movlw	0
   891  0002A0  6E27               	movwf	delay_ms@x+1,c
   892  0002A2  0E64               	movlw	100
   893  0002A4  6E26               	movwf	delay_ms@x,c
   894  0002A6  EC9E  F008         	call	_delay_ms	;wreg free
   895                           
   896                           ;Main.c: 147: unsigned int leftCM = ticksLeft / 75;
   897  0002AA  C055  F024         	movff	_ticksLeft,___lwdiv@dividend	;volatile
   898  0002AE  C056  F025         	movff	_ticksLeft+1,___lwdiv@dividend+1	;volatile
   899  0002B2  0E00               	movlw	0
   900  0002B4  6E27               	movwf	___lwdiv@divisor+1,c
   901  0002B6  0E4B               	movlw	75
   902  0002B8  6E26               	movwf	___lwdiv@divisor,c
   903  0002BA  EC7D  F007         	call	___lwdiv	;wreg free
   904  0002BE  C024  F099         	movff	?___lwdiv,main@leftCM
   905  0002C2  C025  F09A         	movff	?___lwdiv+1,main@leftCM+1
   906                           
   907                           ;Main.c: 150: TriggerRightSRF04();
   908  0002C6  EC66  F008         	call	_TriggerRightSRF04	;wreg free
   909                           
   910                           ;Main.c: 151: delay_ms(100);
   911  0002CA  0E00               	movlw	0
   912  0002CC  6E27               	movwf	delay_ms@x+1,c
   913  0002CE  0E64               	movlw	100
   914  0002D0  6E26               	movwf	delay_ms@x,c
   915  0002D2  EC9E  F008         	call	_delay_ms	;wreg free
   916                           
   917                           ;Main.c: 152: unsigned int rightCM = ticksRight / 75;
   918  0002D6  C057  F024         	movff	_ticksRight,___lwdiv@dividend	;volatile
   919  0002DA  C058  F025         	movff	_ticksRight+1,___lwdiv@dividend+1	;volatile
   920  0002DE  0E00               	movlw	0
   921  0002E0  6E27               	movwf	___lwdiv@divisor+1,c
   922  0002E2  0E4B               	movlw	75
   923  0002E4  6E26               	movwf	___lwdiv@divisor,c
   924  0002E6  EC7D  F007         	call	___lwdiv	;wreg free
   925  0002EA  C024  F09B         	movff	?___lwdiv,main@rightCM
   926  0002EE  C025  F09C         	movff	?___lwdiv+1,main@rightCM+1
   927                           
   928                           ;Main.c: 154: if (leftCM < detection_distance && rightCM < detection_distance && lane !=
      +                           1) {
   929  0002F2  0100               	movlb	0	; () banked
   930  0002F4  519F               	movf	main@detection_distance& (0+255),w,b
   931  0002F6  0100               	movlb	0	; () banked
   932  0002F8  5D99               	subwf	main@leftCM& (0+255),w,b
   933  0002FA  0E00               	movlw	0
   934  0002FC  0100               	movlb	0	; () banked
   935  0002FE  599A               	subwfb	(main@leftCM+1)& (0+255),w,b
   936  000300  B0D8               	btfsc	status,0,c
   937  000302  D010               	goto	l2612
   938                           
   939                           ; BSR set to: 0
   940  000304  0100               	movlb	0	; () banked
   941  000306  519F               	movf	main@detection_distance& (0+255),w,b
   942  000308  0100               	movlb	0	; () banked
   943  00030A  5D9B               	subwf	main@rightCM& (0+255),w,b
   944  00030C  0E00               	movlw	0
   945  00030E  0100               	movlb	0	; () banked
   946  000310  599C               	subwfb	(main@rightCM+1)& (0+255),w,b
   947  000312  B0D8               	btfsc	status,0,c
   948  000314  D007               	goto	l2612
   949                           
   950                           ; BSR set to: 0
   951  000316  0100               	movlb	0	; () banked
   952  000318  05A0               	decf	main@lane& (0+255),w,b
   953  00031A  11A1               	iorwf	(main@lane+1)& (0+255),w,b
   954  00031C  B4D8               	btfsc	status,2,c
   955  00031E  D002               	goto	l2612
   956  000320                     
   957                           ; BSR set to: 0
   958                           ;Main.c: 155: state = dodge_right;
   959  000320  0E03               	movlw	3
   960  000322  D028               	goto	L3
   961  000324                     l2612:
   962                           
   963                           ; BSR set to: 0
   964  000324  0100               	movlb	0	; () banked
   965  000326  519F               	movf	main@detection_distance& (0+255),w,b
   966  000328  0100               	movlb	0	; () banked
   967  00032A  5D99               	subwf	main@leftCM& (0+255),w,b
   968  00032C  0E00               	movlw	0
   969  00032E  0100               	movlb	0	; () banked
   970  000330  599A               	subwfb	(main@leftCM+1)& (0+255),w,b
   971  000332  B0D8               	btfsc	status,0,c
   972  000334  D00F               	goto	l2620
   973                           
   974                           ; BSR set to: 0
   975  000336  0100               	movlb	0	; () banked
   976  000338  519F               	movf	main@detection_distance& (0+255),w,b
   977  00033A  0100               	movlb	0	; () banked
   978  00033C  5D9B               	subwf	main@rightCM& (0+255),w,b
   979  00033E  0E00               	movlw	0
   980  000340  0100               	movlb	0	; () banked
   981  000342  599C               	subwfb	(main@rightCM+1)& (0+255),w,b
   982  000344  B0D8               	btfsc	status,0,c
   983  000346  D006               	goto	l2620
   984                           
   985                           ; BSR set to: 0
   986  000348  0100               	movlb	0	; () banked
   987  00034A  29A0               	incf	main@lane& (0+255),w,b
   988  00034C  B4D8               	btfsc	status,2,c
   989  00034E  29A1               	incf	(main@lane+1)& (0+255),w,b
   990  000350  A4D8               	btfss	status,2,c
   991  000352  D033               	goto	u1920
   992  000354                     l2620:
   993                           
   994                           ; BSR set to: 0
   995  000354  0100               	movlb	0	; () banked
   996  000356  519F               	movf	main@detection_distance& (0+255),w,b
   997  000358  0100               	movlb	0	; () banked
   998  00035A  5D99               	subwf	main@leftCM& (0+255),w,b
   999  00035C  0E00               	movlw	0
  1000  00035E  0100               	movlb	0	; () banked
  1001  000360  599A               	subwfb	(main@leftCM+1)& (0+255),w,b
  1002  000362  B0D8               	btfsc	status,0,c
  1003  000364  D00A               	goto	l2626
  1004                           
  1005                           ; BSR set to: 0
  1006  000366  0100               	movlb	0	; () banked
  1007  000368  29A0               	incf	main@lane& (0+255),w,b
  1008  00036A  B4D8               	btfsc	status,2,c
  1009  00036C  29A1               	incf	(main@lane+1)& (0+255),w,b
  1010  00036E  B4D8               	btfsc	status,2,c
  1011  000370  D004               	goto	l2626
  1012  000372  D7D6               	goto	L4
  1013  000374                     L3:
  1014  000374  0100               	movlb	0	; () banked
  1015  000376  6F9D               	movwf	main@state& (0+255),b
  1016                           
  1017                           ;Main.c: 162: } else if (leftCM < detection_distance) {
  1018  000378  D715               	goto	l2574
  1019  00037A                     l2626:
  1020                           
  1021                           ; BSR set to: 0
  1022  00037A  0100               	movlb	0	; () banked
  1023  00037C  519F               	movf	main@detection_distance& (0+255),w,b
  1024  00037E  0100               	movlb	0	; () banked
  1025  000380  5D99               	subwf	main@leftCM& (0+255),w,b
  1026  000382  0E00               	movlw	0
  1027  000384  0100               	movlb	0	; () banked
  1028  000386  599A               	subwfb	(main@leftCM+1)& (0+255),w,b
  1029  000388  A0D8               	btfss	status,0,c
  1030  00038A  D7CA               	goto	L4
  1031                           
  1032                           ; BSR set to: 0
  1033                           
  1034                           ; BSR set to: 0
  1035                           
  1036                           ;Main.c: 164: } else if (rightCM < detection_distance && lane != 1) {
  1037                           
  1038                           ; BSR set to: 0
  1039                           ;Main.c: 163: state = dodge_right;
  1040  00038C  0100               	movlb	0	; () banked
  1041  00038E  519F               	movf	main@detection_distance& (0+255),w,b
  1042  000390  0100               	movlb	0	; () banked
  1043  000392  5D9B               	subwf	main@rightCM& (0+255),w,b
  1044  000394  0E00               	movlw	0
  1045  000396  0100               	movlb	0	; () banked
  1046  000398  599C               	subwfb	(main@rightCM+1)& (0+255),w,b
  1047  00039A  B0D8               	btfsc	status,0,c
  1048  00039C  D005               	goto	l2636
  1049                           
  1050                           ; BSR set to: 0
  1051  00039E  0100               	movlb	0	; () banked
  1052  0003A0  05A0               	decf	main@lane& (0+255),w,b
  1053  0003A2  11A1               	iorwf	(main@lane+1)& (0+255),w,b
  1054  0003A4  A4D8               	btfss	status,2,c
  1055  0003A6  D009               	goto	u1920
  1056  0003A8                     l2636:
  1057                           
  1058                           ; BSR set to: 0
  1059  0003A8  0100               	movlb	0	; () banked
  1060  0003AA  519F               	movf	main@detection_distance& (0+255),w,b
  1061  0003AC  0100               	movlb	0	; () banked
  1062  0003AE  5D9B               	subwf	main@rightCM& (0+255),w,b
  1063  0003B0  0E00               	movlw	0
  1064  0003B2  0100               	movlb	0	; () banked
  1065  0003B4  599C               	subwfb	(main@rightCM+1)& (0+255),w,b
  1066  0003B6  B0D8               	btfsc	status,0,c
  1067  0003B8  D002               	goto	l2640
  1068  0003BA                     u1920:
  1069                           
  1070                           ; BSR set to: 0
  1071                           ;Main.c: 167: state = dodge_left;
  1072  0003BA  0E02               	movlw	2
  1073  0003BC  D7DB               	goto	L3
  1074  0003BE                     l2640:
  1075                           
  1076                           ; BSR set to: 0
  1077                           ;Main.c: 169: state = all_clear;
  1078  0003BE  0E06               	movlw	6
  1079  0003C0  D7D9               	goto	L3
  1080  0003C2                     l2642:
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;Main.c: 178: {
  1084                           ;Main.c: 179: setLED(0b10000000);
  1085  0003C2  0E80               	movlw	128
  1086  0003C4  EC47  F009         	call	_setLED
  1087                           
  1088                           ;Main.c: 180: break;
  1089  0003C8  D02A               	goto	l2654
  1090  0003CA                     l2644:
  1091                           
  1092                           ;Main.c: 183: {
  1093                           ;Main.c: 184: setLED(0b11000000);
  1094  0003CA  0EC0               	movlw	192
  1095  0003CC  EC47  F009         	call	_setLED
  1096                           
  1097                           ;Main.c: 185: break;
  1098  0003D0  D026               	goto	l2654
  1099  0003D2                     l2646:
  1100                           
  1101                           ;Main.c: 188: {
  1102                           ;Main.c: 189: setLED(0b11100000);
  1103  0003D2  0EE0               	movlw	224
  1104  0003D4  EC47  F009         	call	_setLED
  1105                           
  1106                           ;Main.c: 190: break;
  1107  0003D8  D022               	goto	l2654
  1108  0003DA                     l2648:
  1109                           
  1110                           ;Main.c: 193: {
  1111                           ;Main.c: 194: setLED(0b11111111);
  1112  0003DA  0EFF               	movlw	255
  1113  0003DC  EC47  F009         	call	_setLED
  1114                           
  1115                           ;Main.c: 195: break;
  1116  0003E0  D01E               	goto	l2654
  1117  0003E2                     l2652:
  1118  0003E2  0100               	movlb	0	; () banked
  1119  0003E4  C0A0  F085         	movff	main@lane,??_main
  1120  0003E8  0100               	movlb	0	; () banked
  1121  0003EA  C0A1  F086         	movff	main@lane+1,??_main+1
  1122                           
  1123                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1124                           ; Switch size 1, requested type "space"
  1125                           ; Number of cases is 2, Range of values is 0 to 255
  1126                           ; switch strategies available:
  1127                           ; Name         Instructions Cycles
  1128                           ; simple_byte            7     4 (average)
  1129                           ;	Chosen strategy is simple_byte
  1130  0003EE  0100               	movlb	0	; () banked
  1131  0003F0  5186               	movf	(??_main+1)& (0+255),w,b
  1132  0003F2  0A00               	xorlw	0	; case 0
  1133  0003F4  B4D8               	btfsc	status,2,c
  1134  0003F6  D004               	goto	l2858
  1135  0003F8  0AFF               	xorlw	255	; case 255
  1136  0003FA  B4D8               	btfsc	status,2,c
  1137  0003FC  D00A               	goto	l2860
  1138  0003FE  D7ED               	goto	l2648
  1139  000400                     l2858:
  1140                           
  1141                           ; BSR set to: 0
  1142                           ; Switch size 1, requested type "space"
  1143                           ; Number of cases is 2, Range of values is 0 to 1
  1144                           ; switch strategies available:
  1145                           ; Name         Instructions Cycles
  1146                           ; simple_byte            7     4 (average)
  1147                           ;	Chosen strategy is simple_byte
  1148  000400  0100               	movlb	0	; () banked
  1149  000402  5185               	movf	??_main& (0+255),w,b
  1150  000404  0A00               	xorlw	0	; case 0
  1151  000406  B4D8               	btfsc	status,2,c
  1152  000408  D7E0               	goto	l2644
  1153  00040A  0A01               	xorlw	1	; case 1
  1154  00040C  B4D8               	btfsc	status,2,c
  1155  00040E  D7E1               	goto	l2646
  1156  000410  D7E4               	goto	l2648
  1157  000412                     l2860:
  1158                           
  1159                           ; BSR set to: 0
  1160                           ; Switch size 1, requested type "space"
  1161                           ; Number of cases is 1, Range of values is 255 to 255
  1162                           ; switch strategies available:
  1163                           ; Name         Instructions Cycles
  1164                           ; simple_byte            4     3 (average)
  1165                           ;	Chosen strategy is simple_byte
  1166  000412  0100               	movlb	0	; () banked
  1167  000414  5185               	movf	??_main& (0+255),w,b
  1168  000416  0AFF               	xorlw	255	; case 255
  1169  000418  B4D8               	btfsc	status,2,c
  1170  00041A  D7D3               	goto	l2642
  1171  00041C  D7DE               	goto	l2648
  1172  00041E                     l2654:
  1173                           
  1174                           ;Main.c: 198: Runlchb100(motor_speed_left, motor_speed_right);
  1175  00041E  0100               	movlb	0	; () banked
  1176  000420  C0A5  F02E         	movff	main@motor_speed_left,Runlchb100@starboard
  1177  000424  6A2F               	clrf	Runlchb100@starboard+1,c
  1178  000426  0100               	movlb	0	; () banked
  1179  000428  C0A6  F030         	movff	main@motor_speed_right,Runlchb100@port
  1180  00042C  6A31               	clrf	Runlchb100@port+1,c
  1181  00042E  EC3C  F006         	call	_Runlchb100	;wreg free
  1182                           
  1183                           ;Main.c: 199: custom_delay(travel_time_all_clear);
  1184  000432  C095  F04E         	movff	main@travel_time_all_clear,custom_delay@iterations
  1185  000436  C096  F04F         	movff	main@travel_time_all_clear+1,custom_delay@iterations+1
  1186  00043A  EC3D  F008         	call	_custom_delay	;wreg free
  1187  00043E  D31E               	goto	l2804
  1188  000440                     l2660:
  1189                           
  1190                           ; BSR set to: 0
  1191                           ;Main.c: 205: {
  1192                           ;Main.c: 206: setLED(0b00011111);
  1193  000440  0E1F               	movlw	31
  1194  000442  EC47  F009         	call	_setLED
  1195                           
  1196                           ;Main.c: 207: Runlchb100(motor_speed_left, motor_speed_right);
  1197  000446  0100               	movlb	0	; () banked
  1198  000448  C0A5  F02E         	movff	main@motor_speed_left,Runlchb100@starboard
  1199  00044C  6A2F               	clrf	Runlchb100@starboard+1,c
  1200  00044E  0100               	movlb	0	; () banked
  1201  000450  C0A6  F030         	movff	main@motor_speed_right,Runlchb100@port
  1202  000454  6A31               	clrf	Runlchb100@port+1,c
  1203  000456  EC3C  F006         	call	_Runlchb100	;wreg free
  1204                           
  1205                           ;Main.c: 208: custom_delay(travel_time_dodge);
  1206  00045A  C093  F04E         	movff	main@travel_time_dodge,custom_delay@iterations
  1207  00045E  C094  F04F         	movff	main@travel_time_dodge+1,custom_delay@iterations+1
  1208  000462  EC3D  F008         	call	_custom_delay	;wreg free
  1209                           
  1210                           ;Main.c: 209: Closelchb100();
  1211  000466  EC42  F009         	call	_Closelchb100	;wreg free
  1212  00046A  D308               	goto	l2804
  1213  00046C                     l2670:
  1214                           
  1215                           ;Main.c: 218: Runlchb100(-motor_speed_left, motor_speed_right);
  1216  00046C  0100               	movlb	0	; () banked
  1217  00046E  51A5               	movf	main@motor_speed_left& (0+255),w,b
  1218  000470  0100               	movlb	0	; () banked
  1219  000472  6F85               	movwf	??_main& (0+255),b
  1220  000474  6B86               	clrf	(??_main+1)& (0+255),b
  1221  000476  0100               	movlb	0	; () banked
  1222  000478  1F85               	comf	??_main& (0+255),f,b
  1223  00047A  1F86               	comf	(??_main+1)& (0+255),f,b
  1224  00047C  4B85               	infsnz	??_main& (0+255),f,b
  1225  00047E  2B86               	incf	(??_main+1)& (0+255),f,b
  1226  000480  C085  F02E         	movff	??_main,Runlchb100@starboard
  1227  000484  C086  F02F         	movff	??_main+1,Runlchb100@starboard+1
  1228  000488  0100               	movlb	0	; () banked
  1229  00048A  C0A6  F030         	movff	main@motor_speed_right,Runlchb100@port
  1230  00048E  6A31               	clrf	Runlchb100@port+1,c
  1231  000490  EC3C  F006         	call	_Runlchb100	;wreg free
  1232                           
  1233                           ;Main.c: 220: custom_delay(motor_tick_rate);
  1234  000494  0100               	movlb	0	; () banked
  1235  000496  C0A2  F04E         	movff	main@motor_tick_rate,custom_delay@iterations
  1236  00049A  6A4F               	clrf	custom_delay@iterations+1,c
  1237  00049C  EC3D  F008         	call	_custom_delay	;wreg free
  1238                           
  1239                           ;Main.c: 221: Closelchb100();
  1240  0004A0  EC42  F009         	call	_Closelchb100	;wreg free
  1241                           
  1242                           ;Main.c: 222: current_bearing = ReadCMPS03();
  1243  0004A4  EC52  F007         	call	_ReadCMPS03	;wreg free
  1244  0004A8  0100               	movlb	0	; () banked
  1245  0004AA  6FA4               	movwf	main@current_bearing& (0+255),b
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;Main.c: 223: custom_delay(motor_tick_rate);
  1249  0004AC  0100               	movlb	0	; () banked
  1250  0004AE  C0A2  F04E         	movff	main@motor_tick_rate,custom_delay@iterations
  1251  0004B2  6A4F               	clrf	custom_delay@iterations+1,c
  1252  0004B4  EC3D  F008         	call	_custom_delay	;wreg free
  1253                           
  1254                           ;Main.c: 224: if (current_bearing >= adjusted_intended - allowed_error_dodge &&
  1255                           ;Main.c: 225: current_bearing <= adjusted_intended
  1256                           ;Main.c: 226: + allowed_error_dodge) {
  1257  0004B8  0100               	movlb	0	; () banked
  1258  0004BA  519E               	movf	main@allowed_error_dodge& (0+255),w,b
  1259  0004BC  0100               	movlb	0	; () banked
  1260  0004BE  6F85               	movwf	??_main& (0+255),b
  1261  0004C0  6B86               	clrf	(??_main+1)& (0+255),b
  1262  0004C2  0100               	movlb	0	; () banked
  1263  0004C4  1F85               	comf	??_main& (0+255),f,b
  1264  0004C6  1F86               	comf	(??_main+1)& (0+255),f,b
  1265  0004C8  4B85               	infsnz	??_main& (0+255),f,b
  1266  0004CA  2B86               	incf	(??_main+1)& (0+255),f,b
  1267  0004CC  0100               	movlb	0	; () banked
  1268  0004CE  51A3               	movf	main@adjusted_intended& (0+255),w,b
  1269  0004D0  0100               	movlb	0	; () banked
  1270  0004D2  6F87               	movwf	(??_main+2)& (0+255),b
  1271  0004D4  6B88               	clrf	(??_main+3)& (0+255),b
  1272  0004D6  0100               	movlb	0	; () banked
  1273  0004D8  5185               	movf	??_main& (0+255),w,b
  1274  0004DA  0100               	movlb	0	; () banked
  1275  0004DC  2787               	addwf	(??_main+2)& (0+255),f,b
  1276  0004DE  0100               	movlb	0	; () banked
  1277  0004E0  5186               	movf	(??_main+1)& (0+255),w,b
  1278  0004E2  0100               	movlb	0	; () banked
  1279  0004E4  2388               	addwfc	(??_main+3)& (0+255),f,b
  1280  0004E6  0100               	movlb	0	; () banked
  1281  0004E8  51A4               	movf	main@current_bearing& (0+255),w,b
  1282  0004EA  0100               	movlb	0	; () banked
  1283  0004EC  6F89               	movwf	(??_main+4)& (0+255),b
  1284  0004EE  6B8A               	clrf	(??_main+5)& (0+255),b
  1285  0004F0  0100               	movlb	0	; () banked
  1286  0004F2  518A               	movf	(??_main+5)& (0+255),w,b
  1287  0004F4  0A80               	xorlw	128
  1288  0004F6  0100               	movlb	0	; () banked
  1289  0004F8  6F8B               	movwf	(??_main+6)& (0+255),b
  1290  0004FA  5187               	movf	(??_main+2)& (0+255),w,b
  1291  0004FC  0100               	movlb	0	; () banked
  1292  0004FE  5D89               	subwf	(??_main+4)& (0+255),w,b
  1293  000500  0100               	movlb	0	; () banked
  1294  000502  5188               	movf	(??_main+3)& (0+255),w,b
  1295  000504  0A80               	xorlw	128
  1296  000506  0100               	movlb	0	; () banked
  1297  000508  598B               	subwfb	(??_main+6)& (0+255),w,b
  1298  00050A  A0D8               	btfss	status,0,c
  1299  00050C  D7AF               	goto	l2670
  1300                           
  1301                           ; BSR set to: 0
  1302  00050E  0100               	movlb	0	; () banked
  1303  000510  51A4               	movf	main@current_bearing& (0+255),w,b
  1304  000512  0100               	movlb	0	; () banked
  1305  000514  6F85               	movwf	??_main& (0+255),b
  1306  000516  6B86               	clrf	(??_main+1)& (0+255),b
  1307  000518  0100               	movlb	0	; () banked
  1308  00051A  519E               	movf	main@allowed_error_dodge& (0+255),w,b
  1309  00051C  0100               	movlb	0	; () banked
  1310  00051E  C0A3  F087         	movff	main@adjusted_intended,??_main+2
  1311  000522  0100               	movlb	0	; () banked
  1312  000524  6B88               	clrf	(??_main+3)& (0+255),b
  1313  000526  0100               	movlb	0	; () banked
  1314  000528  2787               	addwf	(??_main+2)& (0+255),f,b
  1315  00052A  0E00               	movlw	0
  1316  00052C  2388               	addwfc	(??_main+3)& (0+255),f,b
  1317  00052E  0100               	movlb	0	; () banked
  1318  000530  5188               	movf	(??_main+3)& (0+255),w,b
  1319  000532  0A80               	xorlw	128
  1320  000534  0100               	movlb	0	; () banked
  1321  000536  6F89               	movwf	(??_main+4)& (0+255),b
  1322  000538  5185               	movf	??_main& (0+255),w,b
  1323  00053A  0100               	movlb	0	; () banked
  1324  00053C  5D87               	subwf	(??_main+2)& (0+255),w,b
  1325  00053E  0100               	movlb	0	; () banked
  1326  000540  5186               	movf	(??_main+1)& (0+255),w,b
  1327  000542  0A80               	xorlw	128
  1328  000544  0100               	movlb	0	; () banked
  1329  000546  5989               	subwfb	(??_main+4)& (0+255),w,b
  1330  000548  A0D8               	btfss	status,0,c
  1331  00054A  D790               	goto	l2670
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;Main.c: 227: Runlchb100(motor_speed_left, motor_speed_right);
  1335  00054C  0100               	movlb	0	; () banked
  1336  00054E  C0A5  F02E         	movff	main@motor_speed_left,Runlchb100@starboard
  1337  000552  6A2F               	clrf	Runlchb100@starboard+1,c
  1338  000554  0100               	movlb	0	; () banked
  1339  000556  C0A6  F030         	movff	main@motor_speed_right,Runlchb100@port
  1340  00055A  6A31               	clrf	Runlchb100@port+1,c
  1341  00055C  EC3C  F006         	call	_Runlchb100	;wreg free
  1342                           
  1343                           ;Main.c: 228: custom_delay(travel_time_all_clear * 4);
  1344  000560  0100               	movlb	0	; () banked
  1345  000562  C095  F085         	movff	main@travel_time_all_clear,??_main
  1346  000566  0100               	movlb	0	; () banked
  1347  000568  C096  F086         	movff	main@travel_time_all_clear+1,??_main+1
  1348  00056C  0100               	movlb	0	; () banked
  1349  00056E  90D8               	bcf	status,0,c
  1350  000570  3785               	rlcf	??_main& (0+255),f,b
  1351  000572  3786               	rlcf	(??_main+1)& (0+255),f,b
  1352  000574  0100               	movlb	0	; () banked
  1353  000576  90D8               	bcf	status,0,c
  1354  000578  3785               	rlcf	??_main& (0+255),f,b
  1355  00057A  3786               	rlcf	(??_main+1)& (0+255),f,b
  1356  00057C  C085  F04E         	movff	??_main,custom_delay@iterations
  1357  000580  C086  F04F         	movff	??_main+1,custom_delay@iterations+1
  1358  000584  EC3D  F008         	call	_custom_delay	;wreg free
  1359                           
  1360                           ;Main.c: 229: Closelchb100();
  1361  000588  EC42  F009         	call	_Closelchb100	;wreg free
  1362  00058C  D277               	goto	l2804
  1363  00058E                     l2692:
  1364                           
  1365                           ;Main.c: 240: Runlchb100(motor_speed_left, -motor_speed_right);
  1366  00058E  0100               	movlb	0	; () banked
  1367  000590  C0A5  F02E         	movff	main@motor_speed_left,Runlchb100@starboard
  1368  000594  6A2F               	clrf	Runlchb100@starboard+1,c
  1369  000596  0100               	movlb	0	; () banked
  1370  000598  51A6               	movf	main@motor_speed_right& (0+255),w,b
  1371  00059A  0100               	movlb	0	; () banked
  1372  00059C  6F85               	movwf	??_main& (0+255),b
  1373  00059E  6B86               	clrf	(??_main+1)& (0+255),b
  1374  0005A0  0100               	movlb	0	; () banked
  1375  0005A2  1F85               	comf	??_main& (0+255),f,b
  1376  0005A4  1F86               	comf	(??_main+1)& (0+255),f,b
  1377  0005A6  4B85               	infsnz	??_main& (0+255),f,b
  1378  0005A8  2B86               	incf	(??_main+1)& (0+255),f,b
  1379  0005AA  C085  F030         	movff	??_main,Runlchb100@port
  1380  0005AE  C086  F031         	movff	??_main+1,Runlchb100@port+1
  1381  0005B2  EC3C  F006         	call	_Runlchb100	;wreg free
  1382                           
  1383                           ;Main.c: 241: custom_delay(motor_tick_rate);
  1384  0005B6  0100               	movlb	0	; () banked
  1385  0005B8  C0A2  F04E         	movff	main@motor_tick_rate,custom_delay@iterations
  1386  0005BC  6A4F               	clrf	custom_delay@iterations+1,c
  1387  0005BE  EC3D  F008         	call	_custom_delay	;wreg free
  1388                           
  1389                           ;Main.c: 242: Closelchb100();
  1390  0005C2  EC42  F009         	call	_Closelchb100	;wreg free
  1391                           
  1392                           ;Main.c: 243: current_bearing = ReadCMPS03();
  1393  0005C6  EC52  F007         	call	_ReadCMPS03	;wreg free
  1394  0005CA  0100               	movlb	0	; () banked
  1395  0005CC  6FA4               	movwf	main@current_bearing& (0+255),b
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;Main.c: 244: custom_delay(motor_tick_rate);
  1399  0005CE  0100               	movlb	0	; () banked
  1400  0005D0  C0A2  F04E         	movff	main@motor_tick_rate,custom_delay@iterations
  1401  0005D4  6A4F               	clrf	custom_delay@iterations+1,c
  1402  0005D6  EC3D  F008         	call	_custom_delay	;wreg free
  1403                           
  1404                           ;Main.c: 245: if (current_bearing >= adjusted_intended - allowed_error_dodge
  1405                           ;Main.c: 246: && current_bearing <= adjusted_intended
  1406                           ;Main.c: 247: + allowed_error_dodge) {
  1407  0005DA  0100               	movlb	0	; () banked
  1408  0005DC  519E               	movf	main@allowed_error_dodge& (0+255),w,b
  1409  0005DE  0100               	movlb	0	; () banked
  1410  0005E0  6F85               	movwf	??_main& (0+255),b
  1411  0005E2  6B86               	clrf	(??_main+1)& (0+255),b
  1412  0005E4  0100               	movlb	0	; () banked
  1413  0005E6  1F85               	comf	??_main& (0+255),f,b
  1414  0005E8  1F86               	comf	(??_main+1)& (0+255),f,b
  1415  0005EA  4B85               	infsnz	??_main& (0+255),f,b
  1416  0005EC  2B86               	incf	(??_main+1)& (0+255),f,b
  1417  0005EE  0100               	movlb	0	; () banked
  1418  0005F0  51A3               	movf	main@adjusted_intended& (0+255),w,b
  1419  0005F2  0100               	movlb	0	; () banked
  1420  0005F4  6F87               	movwf	(??_main+2)& (0+255),b
  1421  0005F6  6B88               	clrf	(??_main+3)& (0+255),b
  1422  0005F8  0100               	movlb	0	; () banked
  1423  0005FA  5185               	movf	??_main& (0+255),w,b
  1424  0005FC  0100               	movlb	0	; () banked
  1425  0005FE  2787               	addwf	(??_main+2)& (0+255),f,b
  1426  000600  0100               	movlb	0	; () banked
  1427  000602  5186               	movf	(??_main+1)& (0+255),w,b
  1428  000604  0100               	movlb	0	; () banked
  1429  000606  2388               	addwfc	(??_main+3)& (0+255),f,b
  1430  000608  0100               	movlb	0	; () banked
  1431  00060A  51A4               	movf	main@current_bearing& (0+255),w,b
  1432  00060C  0100               	movlb	0	; () banked
  1433  00060E  6F89               	movwf	(??_main+4)& (0+255),b
  1434  000610  6B8A               	clrf	(??_main+5)& (0+255),b
  1435  000612  0100               	movlb	0	; () banked
  1436  000614  518A               	movf	(??_main+5)& (0+255),w,b
  1437  000616  0A80               	xorlw	128
  1438  000618  0100               	movlb	0	; () banked
  1439  00061A  6F8B               	movwf	(??_main+6)& (0+255),b
  1440  00061C  5187               	movf	(??_main+2)& (0+255),w,b
  1441  00061E  0100               	movlb	0	; () banked
  1442  000620  5D89               	subwf	(??_main+4)& (0+255),w,b
  1443  000622  0100               	movlb	0	; () banked
  1444  000624  5188               	movf	(??_main+3)& (0+255),w,b
  1445  000626  0A80               	xorlw	128
  1446  000628  0100               	movlb	0	; () banked
  1447  00062A  598B               	subwfb	(??_main+6)& (0+255),w,b
  1448  00062C  A0D8               	btfss	status,0,c
  1449  00062E  D7AF               	goto	l2692
  1450                           
  1451                           ; BSR set to: 0
  1452  000630  0100               	movlb	0	; () banked
  1453  000632  51A4               	movf	main@current_bearing& (0+255),w,b
  1454  000634  0100               	movlb	0	; () banked
  1455  000636  6F85               	movwf	??_main& (0+255),b
  1456  000638  6B86               	clrf	(??_main+1)& (0+255),b
  1457  00063A  0100               	movlb	0	; () banked
  1458  00063C  519E               	movf	main@allowed_error_dodge& (0+255),w,b
  1459  00063E  0100               	movlb	0	; () banked
  1460  000640  C0A3  F087         	movff	main@adjusted_intended,??_main+2
  1461  000644  0100               	movlb	0	; () banked
  1462  000646  6B88               	clrf	(??_main+3)& (0+255),b
  1463  000648  0100               	movlb	0	; () banked
  1464  00064A  2787               	addwf	(??_main+2)& (0+255),f,b
  1465  00064C  0E00               	movlw	0
  1466  00064E  2388               	addwfc	(??_main+3)& (0+255),f,b
  1467  000650  0100               	movlb	0	; () banked
  1468  000652  5188               	movf	(??_main+3)& (0+255),w,b
  1469  000654  0A80               	xorlw	128
  1470  000656  0100               	movlb	0	; () banked
  1471  000658  6F89               	movwf	(??_main+4)& (0+255),b
  1472  00065A  5185               	movf	??_main& (0+255),w,b
  1473  00065C  0100               	movlb	0	; () banked
  1474  00065E  5D87               	subwf	(??_main+2)& (0+255),w,b
  1475  000660  0100               	movlb	0	; () banked
  1476  000662  5186               	movf	(??_main+1)& (0+255),w,b
  1477  000664  0A80               	xorlw	128
  1478  000666  0100               	movlb	0	; () banked
  1479  000668  5989               	subwfb	(??_main+4)& (0+255),w,b
  1480  00066A  A0D8               	btfss	status,0,c
  1481  00066C  D790               	goto	l2692
  1482                           
  1483                           ; BSR set to: 0
  1484                           ;Main.c: 248: Runlchb100(motor_speed_left, motor_speed_right);
  1485  00066E  0100               	movlb	0	; () banked
  1486  000670  C0A5  F02E         	movff	main@motor_speed_left,Runlchb100@starboard
  1487  000674  6A2F               	clrf	Runlchb100@starboard+1,c
  1488  000676  0100               	movlb	0	; () banked
  1489  000678  C0A6  F030         	movff	main@motor_speed_right,Runlchb100@port
  1490  00067C  6A31               	clrf	Runlchb100@port+1,c
  1491  00067E  EC3C  F006         	call	_Runlchb100	;wreg free
  1492                           
  1493                           ;Main.c: 249: custom_delay(travel_time_all_clear * 4);
  1494  000682  0100               	movlb	0	; () banked
  1495  000684  C095  F085         	movff	main@travel_time_all_clear,??_main
  1496  000688  0100               	movlb	0	; () banked
  1497  00068A  C096  F086         	movff	main@travel_time_all_clear+1,??_main+1
  1498  00068E  0100               	movlb	0	; () banked
  1499  000690  90D8               	bcf	status,0,c
  1500  000692  3785               	rlcf	??_main& (0+255),f,b
  1501  000694  3786               	rlcf	(??_main+1)& (0+255),f,b
  1502  000696  0100               	movlb	0	; () banked
  1503  000698  90D8               	bcf	status,0,c
  1504  00069A  3785               	rlcf	??_main& (0+255),f,b
  1505  00069C  3786               	rlcf	(??_main+1)& (0+255),f,b
  1506  00069E  C085  F04E         	movff	??_main,custom_delay@iterations
  1507  0006A2  C086  F04F         	movff	??_main+1,custom_delay@iterations+1
  1508  0006A6  EC3D  F008         	call	_custom_delay	;wreg free
  1509                           
  1510                           ;Main.c: 250: Closelchb100();
  1511  0006AA  EC42  F009         	call	_Closelchb100	;wreg free
  1512  0006AE  D1E6               	goto	l2804
  1513  0006B0                     l2714:
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;Main.c: 259: {
  1517                           ;Main.c: 260: setLED(0b00000111);
  1518  0006B0  0E07               	movlw	7
  1519  0006B2  EC47  F009         	call	_setLED
  1520                           
  1521                           ;Main.c: 261: lane = lane - 1;
  1522  0006B6  0EFF               	movlw	255
  1523  0006B8  0100               	movlb	0	; () banked
  1524  0006BA  25A0               	addwf	main@lane& (0+255),w,b
  1525  0006BC  0100               	movlb	0	; () banked
  1526  0006BE  6FA0               	movwf	main@lane& (0+255),b
  1527  0006C0  0EFF               	movlw	255
  1528  0006C2  0100               	movlb	0	; () banked
  1529  0006C4  21A1               	addwfc	(main@lane+1)& (0+255),w,b
  1530  0006C6  0100               	movlb	0	; () banked
  1531  0006C8  6FA1               	movwf	(main@lane+1)& (0+255),b
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;Main.c: 266: Runlchb100(-motor_speed_left, motor_speed_right);
  1535  0006CA  0100               	movlb	0	; () banked
  1536  0006CC  51A5               	movf	main@motor_speed_left& (0+255),w,b
  1537  0006CE  0100               	movlb	0	; () banked
  1538  0006D0  6F85               	movwf	??_main& (0+255),b
  1539  0006D2  6B86               	clrf	(??_main+1)& (0+255),b
  1540  0006D4  0100               	movlb	0	; () banked
  1541  0006D6  1F85               	comf	??_main& (0+255),f,b
  1542  0006D8  1F86               	comf	(??_main+1)& (0+255),f,b
  1543  0006DA  4B85               	infsnz	??_main& (0+255),f,b
  1544  0006DC  2B86               	incf	(??_main+1)& (0+255),f,b
  1545  0006DE  C085  F02E         	movff	??_main,Runlchb100@starboard
  1546  0006E2  C086  F02F         	movff	??_main+1,Runlchb100@starboard+1
  1547  0006E6  0100               	movlb	0	; () banked
  1548  0006E8  C0A6  F030         	movff	main@motor_speed_right,Runlchb100@port
  1549  0006EC  6A31               	clrf	Runlchb100@port+1,c
  1550  0006EE  EC3C  F006         	call	_Runlchb100	;wreg free
  1551                           
  1552                           ;Main.c: 267: custom_delay(degree_turn);
  1553  0006F2  C097  F04E         	movff	main@degree_turn,custom_delay@iterations
  1554  0006F6  C098  F04F         	movff	main@degree_turn+1,custom_delay@iterations+1
  1555  0006FA  EC3D  F008         	call	_custom_delay	;wreg free
  1556                           
  1557                           ;Main.c: 270: Runlchb100(motor_speed_left, motor_speed_right);
  1558  0006FE  0100               	movlb	0	; () banked
  1559  000700  C0A5  F02E         	movff	main@motor_speed_left,Runlchb100@starboard
  1560  000704  6A2F               	clrf	Runlchb100@starboard+1,c
  1561  000706  0100               	movlb	0	; () banked
  1562  000708  C0A6  F030         	movff	main@motor_speed_right,Runlchb100@port
  1563  00070C  6A31               	clrf	Runlchb100@port+1,c
  1564  00070E  EC3C  F006         	call	_Runlchb100	;wreg free
  1565                           
  1566                           ;Main.c: 271: custom_delay(travel_time_dodge);
  1567  000712  C093  F04E         	movff	main@travel_time_dodge,custom_delay@iterations
  1568  000716  C094  F04F         	movff	main@travel_time_dodge+1,custom_delay@iterations+1
  1569  00071A  EC3D  F008         	call	_custom_delay	;wreg free
  1570                           
  1571                           ;Main.c: 274: Runlchb100(motor_speed_left, -motor_speed_right);
  1572  00071E  0100               	movlb	0	; () banked
  1573  000720  C0A5  F02E         	movff	main@motor_speed_left,Runlchb100@starboard
  1574  000724  6A2F               	clrf	Runlchb100@starboard+1,c
  1575  000726  0100               	movlb	0	; () banked
  1576  000728  51A6               	movf	main@motor_speed_right& (0+255),w,b
  1577  00072A  0100               	movlb	0	; () banked
  1578  00072C  6F85               	movwf	??_main& (0+255),b
  1579  00072E  6B86               	clrf	(??_main+1)& (0+255),b
  1580  000730  0100               	movlb	0	; () banked
  1581  000732  1F85               	comf	??_main& (0+255),f,b
  1582  000734  1F86               	comf	(??_main+1)& (0+255),f,b
  1583  000736  4B85               	infsnz	??_main& (0+255),f,b
  1584  000738  2B86               	incf	(??_main+1)& (0+255),f,b
  1585  00073A  C085  F030         	movff	??_main,Runlchb100@port
  1586  00073E  C086  F031         	movff	??_main+1,Runlchb100@port+1
  1587  000742  EC3C  F006         	call	_Runlchb100	;wreg free
  1588                           
  1589                           ;Main.c: 275: custom_delay(degree_turn*0.95);
  1590  000746  0E33               	movlw	51
  1591  000748  6E33               	movwf	___ftmul@f2,c
  1592  00074A  0E73               	movlw	115
  1593  00074C  6E34               	movwf	___ftmul@f2+1,c
  1594  00074E  0E3F               	movlw	63
  1595  000750  6E35               	movwf	___ftmul@f2+2,c
  1596  000752  C097  F02C         	movff	main@degree_turn,___awtoft@c
  1597  000756  C098  F02D         	movff	main@degree_turn+1,___awtoft@c+1
  1598  00075A  ECA6  F007         	call	___awtoft	;wreg free
  1599  00075E  C02C  F030         	movff	?___awtoft,___ftmul@f1
  1600  000762  C02D  F031         	movff	?___awtoft+1,___ftmul@f1+1
  1601  000766  C02E  F032         	movff	?___awtoft+2,___ftmul@f1+2
  1602  00076A  EC60  F005         	call	___ftmul	;wreg free
  1603  00076E  C030  F03F         	movff	?___ftmul,___fttol@f1
  1604  000772  C031  F040         	movff	?___ftmul+1,___fttol@f1+1
  1605  000776  C032  F041         	movff	?___ftmul+2,___fttol@f1+2
  1606  00077A  ECD2  F005         	call	___fttol	;wreg free
  1607  00077E  C03F  F085         	movff	?___fttol,??_main
  1608  000782  C040  F086         	movff	?___fttol+1,??_main+1
  1609  000786  C041  F087         	movff	?___fttol+2,??_main+2
  1610  00078A  C042  F088         	movff	?___fttol+3,??_main+3
  1611  00078E  C085  F04E         	movff	??_main,custom_delay@iterations
  1612  000792  C086  F04F         	movff	??_main+1,custom_delay@iterations+1
  1613  000796  EC3D  F008         	call	_custom_delay	;wreg free
  1614  00079A  D051               	goto	L8
  1615  00079C                     l2734:
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;Main.c: 303: {
  1619                           ;Main.c: 304: setLED(0b00001111);
  1620  00079C  0E0F               	movlw	15
  1621  00079E  EC47  F009         	call	_setLED
  1622                           
  1623                           ;Main.c: 305: lane = lane + 1;
  1624  0007A2  0E01               	movlw	1
  1625  0007A4  0100               	movlb	0	; () banked
  1626  0007A6  25A0               	addwf	main@lane& (0+255),w,b
  1627  0007A8  0100               	movlb	0	; () banked
  1628  0007AA  6FA0               	movwf	main@lane& (0+255),b
  1629  0007AC  0E00               	movlw	0
  1630  0007AE  0100               	movlb	0	; () banked
  1631  0007B0  21A1               	addwfc	(main@lane+1)& (0+255),w,b
  1632  0007B2  0100               	movlb	0	; () banked
  1633  0007B4  6FA1               	movwf	(main@lane+1)& (0+255),b
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;Main.c: 310: Runlchb100(motor_speed_left, -motor_speed_right);
  1637  0007B6  0100               	movlb	0	; () banked
  1638  0007B8  C0A5  F02E         	movff	main@motor_speed_left,Runlchb100@starboard
  1639  0007BC  6A2F               	clrf	Runlchb100@starboard+1,c
  1640  0007BE  0100               	movlb	0	; () banked
  1641  0007C0  51A6               	movf	main@motor_speed_right& (0+255),w,b
  1642  0007C2  0100               	movlb	0	; () banked
  1643  0007C4  6F85               	movwf	??_main& (0+255),b
  1644  0007C6  6B86               	clrf	(??_main+1)& (0+255),b
  1645  0007C8  0100               	movlb	0	; () banked
  1646  0007CA  1F85               	comf	??_main& (0+255),f,b
  1647  0007CC  1F86               	comf	(??_main+1)& (0+255),f,b
  1648  0007CE  4B85               	infsnz	??_main& (0+255),f,b
  1649  0007D0  2B86               	incf	(??_main+1)& (0+255),f,b
  1650  0007D2  C085  F030         	movff	??_main,Runlchb100@port
  1651  0007D6  C086  F031         	movff	??_main+1,Runlchb100@port+1
  1652  0007DA  EC3C  F006         	call	_Runlchb100	;wreg free
  1653                           
  1654                           ;Main.c: 311: custom_delay(degree_turn);
  1655  0007DE  C097  F04E         	movff	main@degree_turn,custom_delay@iterations
  1656  0007E2  C098  F04F         	movff	main@degree_turn+1,custom_delay@iterations+1
  1657  0007E6  EC3D  F008         	call	_custom_delay	;wreg free
  1658                           
  1659                           ;Main.c: 314: Runlchb100(motor_speed_left, motor_speed_right);
  1660  0007EA  0100               	movlb	0	; () banked
  1661  0007EC  C0A5  F02E         	movff	main@motor_speed_left,Runlchb100@starboard
  1662  0007F0  6A2F               	clrf	Runlchb100@starboard+1,c
  1663  0007F2  0100               	movlb	0	; () banked
  1664  0007F4  C0A6  F030         	movff	main@motor_speed_right,Runlchb100@port
  1665  0007F8  6A31               	clrf	Runlchb100@port+1,c
  1666  0007FA  EC3C  F006         	call	_Runlchb100	;wreg free
  1667                           
  1668                           ;Main.c: 315: custom_delay(travel_time_dodge);
  1669  0007FE  C093  F04E         	movff	main@travel_time_dodge,custom_delay@iterations
  1670  000802  C094  F04F         	movff	main@travel_time_dodge+1,custom_delay@iterations+1
  1671  000806  EC3D  F008         	call	_custom_delay	;wreg free
  1672                           
  1673                           ;Main.c: 318: Runlchb100(-motor_speed_left, motor_speed_right);
  1674  00080A  0100               	movlb	0	; () banked
  1675  00080C  51A5               	movf	main@motor_speed_left& (0+255),w,b
  1676  00080E  0100               	movlb	0	; () banked
  1677  000810  6F85               	movwf	??_main& (0+255),b
  1678  000812  6B86               	clrf	(??_main+1)& (0+255),b
  1679  000814  0100               	movlb	0	; () banked
  1680  000816  1F85               	comf	??_main& (0+255),f,b
  1681  000818  1F86               	comf	(??_main+1)& (0+255),f,b
  1682  00081A  4B85               	infsnz	??_main& (0+255),f,b
  1683  00081C  2B86               	incf	(??_main+1)& (0+255),f,b
  1684  00081E  C085  F02E         	movff	??_main,Runlchb100@starboard
  1685  000822  C086  F02F         	movff	??_main+1,Runlchb100@starboard+1
  1686  000826  0100               	movlb	0	; () banked
  1687  000828  C0A6  F030         	movff	main@motor_speed_right,Runlchb100@port
  1688  00082C  6A31               	clrf	Runlchb100@port+1,c
  1689  00082E  EC3C  F006         	call	_Runlchb100	;wreg free
  1690                           
  1691                           ;Main.c: 319: custom_delay(degree_turn);
  1692  000832  C097  F04E         	movff	main@degree_turn,custom_delay@iterations
  1693  000836  C098  F04F         	movff	main@degree_turn+1,custom_delay@iterations+1
  1694  00083A  EC3D  F008         	call	_custom_delay	;wreg free
  1695  00083E                     L8:
  1696                           
  1697                           ;Main.c: 325: bearing_adjust += bearing_adjust_amount;
  1698  00083E  0100               	movlb	0	; () banked
  1699  000840  5191               	movf	main@bearing_adjust_amount& (0+255),w,b
  1700  000842  0100               	movlb	0	; () banked
  1701  000844  278F               	addwf	main@bearing_adjust& (0+255),f,b
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;Main.c: 326: state = straight;
  1705  000846  0E01               	movlw	1
  1706  000848  D595               	goto	L3
  1707  00084A                     l2754:
  1708                           
  1709                           ;Main.c: 354: setLED(0b10101010);
  1710  00084A  0EAA               	movlw	170
  1711  00084C  EC47  F009         	call	_setLED
  1712                           
  1713                           ;Main.c: 355: delay_s(1);
  1714  000850  0E00               	movlw	0
  1715  000852  6E27               	movwf	delay_s@x+1,c
  1716  000854  0E01               	movlw	1
  1717  000856  6E26               	movwf	delay_s@x,c
  1718  000858  EC3C  F009         	call	_delay_s	;wreg free
  1719                           
  1720                           ;Main.c: 356: setLED(0b01010101);
  1721  00085C  0E55               	movlw	85
  1722  00085E  EC47  F009         	call	_setLED
  1723                           
  1724                           ;Main.c: 357: delay_s(1);
  1725  000862  0E00               	movlw	0
  1726  000864  6E27               	movwf	delay_s@x+1,c
  1727  000866  0E01               	movlw	1
  1728  000868  6E26               	movwf	delay_s@x,c
  1729  00086A  EC3C  F009         	call	_delay_s	;wreg free
  1730  00086E  D7ED               	goto	l2754
  1731  000870                     l2760:
  1732                           
  1733                           ;Main.c: 361: {
  1734                           ;Main.c: 362: setLED(0b00011111);
  1735  000870  0E1F               	movlw	31
  1736  000872  EC47  F009         	call	_setLED
  1737                           
  1738                           ;Main.c: 376: right_turn_distance = adjusted_intended - current_bearing;
  1739  000876  0100               	movlb	0	; () banked
  1740  000878  51A4               	movf	main@current_bearing& (0+255),w,b
  1741  00087A  0800               	sublw	0
  1742  00087C  0100               	movlb	0	; () banked
  1743  00087E  25A3               	addwf	main@adjusted_intended& (0+255),w,b
  1744  000880  0100               	movlb	0	; () banked
  1745  000882  6F92               	movwf	main@right_turn_distance& (0+255),b
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;Main.c: 377: left_turn_distance = 255 - right_turn_distance;
  1749  000884  0100               	movlb	0	; () banked
  1750  000886  5192               	movf	main@right_turn_distance& (0+255),w,b
  1751  000888  0800               	sublw	0
  1752  00088A  0100               	movlb	0	; () banked
  1753  00088C  6F85               	movwf	??_main& (0+255),b
  1754  00088E  0100               	movlb	0	; () banked
  1755  000890  0585               	decf	??_main& (0+255),w,b
  1756  000892  0100               	movlb	0	; () banked
  1757  000894  6F8E               	movwf	main@left_turn_distance& (0+255),b
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;Main.c: 379: if (right_turn_distance < left_turn_distance) {
  1761  000896  0100               	movlb	0	; () banked
  1762  000898  518E               	movf	main@left_turn_distance& (0+255),w,b
  1763  00089A  0100               	movlb	0	; () banked
  1764  00089C  5D92               	subwf	main@right_turn_distance& (0+255),w,b
  1765  00089E  B0D8               	btfsc	status,0,c
  1766  0008A0  D077               	goto	l2786
  1767  0008A2                     l2768:
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;Main.c: 384: Runlchb100(motor_speed_left, -motor_speed_right);
  1771  0008A2  0100               	movlb	0	; () banked
  1772  0008A4  C0A5  F02E         	movff	main@motor_speed_left,Runlchb100@starboard
  1773  0008A8  6A2F               	clrf	Runlchb100@starboard+1,c
  1774  0008AA  0100               	movlb	0	; () banked
  1775  0008AC  51A6               	movf	main@motor_speed_right& (0+255),w,b
  1776  0008AE  0100               	movlb	0	; () banked
  1777  0008B0  6F85               	movwf	??_main& (0+255),b
  1778  0008B2  6B86               	clrf	(??_main+1)& (0+255),b
  1779  0008B4  0100               	movlb	0	; () banked
  1780  0008B6  1F85               	comf	??_main& (0+255),f,b
  1781  0008B8  1F86               	comf	(??_main+1)& (0+255),f,b
  1782  0008BA  4B85               	infsnz	??_main& (0+255),f,b
  1783  0008BC  2B86               	incf	(??_main+1)& (0+255),f,b
  1784  0008BE  C085  F030         	movff	??_main,Runlchb100@port
  1785  0008C2  C086  F031         	movff	??_main+1,Runlchb100@port+1
  1786  0008C6  EC3C  F006         	call	_Runlchb100	;wreg free
  1787                           
  1788                           ;Main.c: 385: custom_delay(motor_tick_rate);
  1789  0008CA  0100               	movlb	0	; () banked
  1790  0008CC  C0A2  F04E         	movff	main@motor_tick_rate,custom_delay@iterations
  1791  0008D0  6A4F               	clrf	custom_delay@iterations+1,c
  1792  0008D2  EC3D  F008         	call	_custom_delay	;wreg free
  1793                           
  1794                           ;Main.c: 386: Closelchb100();
  1795  0008D6  EC42  F009         	call	_Closelchb100	;wreg free
  1796                           
  1797                           ;Main.c: 387: current_bearing = ReadCMPS03();
  1798  0008DA  EC52  F007         	call	_ReadCMPS03	;wreg free
  1799  0008DE  0100               	movlb	0	; () banked
  1800  0008E0  6FA4               	movwf	main@current_bearing& (0+255),b
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;Main.c: 388: custom_delay(motor_tick_rate);
  1804  0008E2  0100               	movlb	0	; () banked
  1805  0008E4  C0A2  F04E         	movff	main@motor_tick_rate,custom_delay@iterations
  1806  0008E8  6A4F               	clrf	custom_delay@iterations+1,c
  1807  0008EA  EC3D  F008         	call	_custom_delay	;wreg free
  1808                           
  1809                           ;Main.c: 389: custom_delay(motor_tick_rate);
  1810  0008EE  0100               	movlb	0	; () banked
  1811  0008F0  C0A2  F04E         	movff	main@motor_tick_rate,custom_delay@iterations
  1812  0008F4  6A4F               	clrf	custom_delay@iterations+1,c
  1813  0008F6  EC3D  F008         	call	_custom_delay	;wreg free
  1814                           
  1815                           ;Main.c: 390: if (current_bearing >= adjusted_intended - allowed_error_dodge
  1816                           ;Main.c: 391: && current_bearing <= adjusted_intended
  1817                           ;Main.c: 392: + allowed_error_dodge) {
  1818  0008FA  0100               	movlb	0	; () banked
  1819  0008FC  519E               	movf	main@allowed_error_dodge& (0+255),w,b
  1820  0008FE  0100               	movlb	0	; () banked
  1821  000900  6F85               	movwf	??_main& (0+255),b
  1822  000902  6B86               	clrf	(??_main+1)& (0+255),b
  1823  000904  0100               	movlb	0	; () banked
  1824  000906  1F85               	comf	??_main& (0+255),f,b
  1825  000908  1F86               	comf	(??_main+1)& (0+255),f,b
  1826  00090A  4B85               	infsnz	??_main& (0+255),f,b
  1827  00090C  2B86               	incf	(??_main+1)& (0+255),f,b
  1828  00090E  0100               	movlb	0	; () banked
  1829  000910  51A3               	movf	main@adjusted_intended& (0+255),w,b
  1830  000912  0100               	movlb	0	; () banked
  1831  000914  6F87               	movwf	(??_main+2)& (0+255),b
  1832  000916  6B88               	clrf	(??_main+3)& (0+255),b
  1833  000918  0100               	movlb	0	; () banked
  1834  00091A  5185               	movf	??_main& (0+255),w,b
  1835  00091C  0100               	movlb	0	; () banked
  1836  00091E  2787               	addwf	(??_main+2)& (0+255),f,b
  1837  000920  0100               	movlb	0	; () banked
  1838  000922  5186               	movf	(??_main+1)& (0+255),w,b
  1839  000924  0100               	movlb	0	; () banked
  1840  000926  2388               	addwfc	(??_main+3)& (0+255),f,b
  1841  000928  0100               	movlb	0	; () banked
  1842  00092A  51A4               	movf	main@current_bearing& (0+255),w,b
  1843  00092C  0100               	movlb	0	; () banked
  1844  00092E  6F89               	movwf	(??_main+4)& (0+255),b
  1845  000930  6B8A               	clrf	(??_main+5)& (0+255),b
  1846  000932  0100               	movlb	0	; () banked
  1847  000934  518A               	movf	(??_main+5)& (0+255),w,b
  1848  000936  0A80               	xorlw	128
  1849  000938  0100               	movlb	0	; () banked
  1850  00093A  6F8B               	movwf	(??_main+6)& (0+255),b
  1851  00093C  5187               	movf	(??_main+2)& (0+255),w,b
  1852  00093E  0100               	movlb	0	; () banked
  1853  000940  5D89               	subwf	(??_main+4)& (0+255),w,b
  1854  000942  0100               	movlb	0	; () banked
  1855  000944  5188               	movf	(??_main+3)& (0+255),w,b
  1856  000946  0A80               	xorlw	128
  1857  000948  0100               	movlb	0	; () banked
  1858  00094A  598B               	subwfb	(??_main+6)& (0+255),w,b
  1859  00094C  A0D8               	btfss	status,0,c
  1860  00094E  D7A9               	goto	l2768
  1861                           
  1862                           ; BSR set to: 0
  1863  000950  0100               	movlb	0	; () banked
  1864  000952  51A4               	movf	main@current_bearing& (0+255),w,b
  1865  000954  0100               	movlb	0	; () banked
  1866  000956  6F85               	movwf	??_main& (0+255),b
  1867  000958  6B86               	clrf	(??_main+1)& (0+255),b
  1868  00095A  0100               	movlb	0	; () banked
  1869  00095C  519E               	movf	main@allowed_error_dodge& (0+255),w,b
  1870  00095E  0100               	movlb	0	; () banked
  1871  000960  C0A3  F087         	movff	main@adjusted_intended,??_main+2
  1872  000964  0100               	movlb	0	; () banked
  1873  000966  6B88               	clrf	(??_main+3)& (0+255),b
  1874  000968  0100               	movlb	0	; () banked
  1875  00096A  2787               	addwf	(??_main+2)& (0+255),f,b
  1876  00096C  0E00               	movlw	0
  1877  00096E  2388               	addwfc	(??_main+3)& (0+255),f,b
  1878  000970  0100               	movlb	0	; () banked
  1879  000972  5188               	movf	(??_main+3)& (0+255),w,b
  1880  000974  0A80               	xorlw	128
  1881  000976  0100               	movlb	0	; () banked
  1882  000978  6F89               	movwf	(??_main+4)& (0+255),b
  1883  00097A  5185               	movf	??_main& (0+255),w,b
  1884  00097C  0100               	movlb	0	; () banked
  1885  00097E  5D87               	subwf	(??_main+2)& (0+255),w,b
  1886  000980  0100               	movlb	0	; () banked
  1887  000982  5186               	movf	(??_main+1)& (0+255),w,b
  1888  000984  0A80               	xorlw	128
  1889  000986  0100               	movlb	0	; () banked
  1890  000988  5989               	subwfb	(??_main+4)& (0+255),w,b
  1891  00098A  B0D8               	btfsc	status,0,c
  1892  00098C  D077               	goto	l2804
  1893  00098E  D789               	goto	l2768
  1894  000990                     l2786:
  1895                           
  1896                           ; BSR set to: 0
  1897                           ;Main.c: 413: Runlchb100(-motor_speed_left, motor_speed_right);
  1898  000990  0100               	movlb	0	; () banked
  1899  000992  51A5               	movf	main@motor_speed_left& (0+255),w,b
  1900  000994  0100               	movlb	0	; () banked
  1901  000996  6F85               	movwf	??_main& (0+255),b
  1902  000998  6B86               	clrf	(??_main+1)& (0+255),b
  1903  00099A  0100               	movlb	0	; () banked
  1904  00099C  1F85               	comf	??_main& (0+255),f,b
  1905  00099E  1F86               	comf	(??_main+1)& (0+255),f,b
  1906  0009A0  4B85               	infsnz	??_main& (0+255),f,b
  1907  0009A2  2B86               	incf	(??_main+1)& (0+255),f,b
  1908  0009A4  C085  F02E         	movff	??_main,Runlchb100@starboard
  1909  0009A8  C086  F02F         	movff	??_main+1,Runlchb100@starboard+1
  1910  0009AC  0100               	movlb	0	; () banked
  1911  0009AE  C0A6  F030         	movff	main@motor_speed_right,Runlchb100@port
  1912  0009B2  6A31               	clrf	Runlchb100@port+1,c
  1913  0009B4  EC3C  F006         	call	_Runlchb100	;wreg free
  1914                           
  1915                           ;Main.c: 414: custom_delay(motor_tick_rate);
  1916  0009B8  0100               	movlb	0	; () banked
  1917  0009BA  C0A2  F04E         	movff	main@motor_tick_rate,custom_delay@iterations
  1918  0009BE  6A4F               	clrf	custom_delay@iterations+1,c
  1919  0009C0  EC3D  F008         	call	_custom_delay	;wreg free
  1920                           
  1921                           ;Main.c: 415: Closelchb100();
  1922  0009C4  EC42  F009         	call	_Closelchb100	;wreg free
  1923                           
  1924                           ;Main.c: 416: current_bearing = ReadCMPS03();
  1925  0009C8  EC52  F007         	call	_ReadCMPS03	;wreg free
  1926  0009CC  0100               	movlb	0	; () banked
  1927  0009CE  6FA4               	movwf	main@current_bearing& (0+255),b
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;Main.c: 417: custom_delay(motor_tick_rate);
  1931  0009D0  0100               	movlb	0	; () banked
  1932  0009D2  C0A2  F04E         	movff	main@motor_tick_rate,custom_delay@iterations
  1933  0009D6  6A4F               	clrf	custom_delay@iterations+1,c
  1934  0009D8  EC3D  F008         	call	_custom_delay	;wreg free
  1935                           
  1936                           ;Main.c: 418: custom_delay(motor_tick_rate);
  1937  0009DC  0100               	movlb	0	; () banked
  1938  0009DE  C0A2  F04E         	movff	main@motor_tick_rate,custom_delay@iterations
  1939  0009E2  6A4F               	clrf	custom_delay@iterations+1,c
  1940  0009E4  EC3D  F008         	call	_custom_delay	;wreg free
  1941                           
  1942                           ;Main.c: 420: if (current_bearing >= adjusted_intended - allowed_error_dodge &&
  1943                           ;Main.c: 421: current_bearing <= adjusted_intended
  1944                           ;Main.c: 422: + allowed_error_dodge) {
  1945  0009E8  0100               	movlb	0	; () banked
  1946  0009EA  519E               	movf	main@allowed_error_dodge& (0+255),w,b
  1947  0009EC  0100               	movlb	0	; () banked
  1948  0009EE  6F85               	movwf	??_main& (0+255),b
  1949  0009F0  6B86               	clrf	(??_main+1)& (0+255),b
  1950  0009F2  0100               	movlb	0	; () banked
  1951  0009F4  1F85               	comf	??_main& (0+255),f,b
  1952  0009F6  1F86               	comf	(??_main+1)& (0+255),f,b
  1953  0009F8  4B85               	infsnz	??_main& (0+255),f,b
  1954  0009FA  2B86               	incf	(??_main+1)& (0+255),f,b
  1955  0009FC  0100               	movlb	0	; () banked
  1956  0009FE  51A3               	movf	main@adjusted_intended& (0+255),w,b
  1957  000A00  0100               	movlb	0	; () banked
  1958  000A02  6F87               	movwf	(??_main+2)& (0+255),b
  1959  000A04  6B88               	clrf	(??_main+3)& (0+255),b
  1960  000A06  0100               	movlb	0	; () banked
  1961  000A08  5185               	movf	??_main& (0+255),w,b
  1962  000A0A  0100               	movlb	0	; () banked
  1963  000A0C  2787               	addwf	(??_main+2)& (0+255),f,b
  1964  000A0E  0100               	movlb	0	; () banked
  1965  000A10  5186               	movf	(??_main+1)& (0+255),w,b
  1966  000A12  0100               	movlb	0	; () banked
  1967  000A14  2388               	addwfc	(??_main+3)& (0+255),f,b
  1968  000A16  0100               	movlb	0	; () banked
  1969  000A18  51A4               	movf	main@current_bearing& (0+255),w,b
  1970  000A1A  0100               	movlb	0	; () banked
  1971  000A1C  6F89               	movwf	(??_main+4)& (0+255),b
  1972  000A1E  6B8A               	clrf	(??_main+5)& (0+255),b
  1973  000A20  0100               	movlb	0	; () banked
  1974  000A22  518A               	movf	(??_main+5)& (0+255),w,b
  1975  000A24  0A80               	xorlw	128
  1976  000A26  0100               	movlb	0	; () banked
  1977  000A28  6F8B               	movwf	(??_main+6)& (0+255),b
  1978  000A2A  5187               	movf	(??_main+2)& (0+255),w,b
  1979  000A2C  0100               	movlb	0	; () banked
  1980  000A2E  5D89               	subwf	(??_main+4)& (0+255),w,b
  1981  000A30  0100               	movlb	0	; () banked
  1982  000A32  5188               	movf	(??_main+3)& (0+255),w,b
  1983  000A34  0A80               	xorlw	128
  1984  000A36  0100               	movlb	0	; () banked
  1985  000A38  598B               	subwfb	(??_main+6)& (0+255),w,b
  1986  000A3A  A0D8               	btfss	status,0,c
  1987  000A3C  D7A9               	goto	l2786
  1988                           
  1989                           ; BSR set to: 0
  1990  000A3E  0100               	movlb	0	; () banked
  1991  000A40  51A4               	movf	main@current_bearing& (0+255),w,b
  1992  000A42  0100               	movlb	0	; () banked
  1993  000A44  6F85               	movwf	??_main& (0+255),b
  1994  000A46  6B86               	clrf	(??_main+1)& (0+255),b
  1995  000A48  0100               	movlb	0	; () banked
  1996  000A4A  519E               	movf	main@allowed_error_dodge& (0+255),w,b
  1997  000A4C  0100               	movlb	0	; () banked
  1998  000A4E  C0A3  F087         	movff	main@adjusted_intended,??_main+2
  1999  000A52  0100               	movlb	0	; () banked
  2000  000A54  6B88               	clrf	(??_main+3)& (0+255),b
  2001  000A56  0100               	movlb	0	; () banked
  2002  000A58  2787               	addwf	(??_main+2)& (0+255),f,b
  2003  000A5A  0E00               	movlw	0
  2004  000A5C  2388               	addwfc	(??_main+3)& (0+255),f,b
  2005  000A5E  0100               	movlb	0	; () banked
  2006  000A60  5188               	movf	(??_main+3)& (0+255),w,b
  2007  000A62  0A80               	xorlw	128
  2008  000A64  0100               	movlb	0	; () banked
  2009  000A66  6F89               	movwf	(??_main+4)& (0+255),b
  2010  000A68  5185               	movf	??_main& (0+255),w,b
  2011  000A6A  0100               	movlb	0	; () banked
  2012  000A6C  5D87               	subwf	(??_main+2)& (0+255),w,b
  2013  000A6E  0100               	movlb	0	; () banked
  2014  000A70  5186               	movf	(??_main+1)& (0+255),w,b
  2015  000A72  0A80               	xorlw	128
  2016  000A74  0100               	movlb	0	; () banked
  2017  000A76  5989               	subwfb	(??_main+4)& (0+255),w,b
  2018  000A78  A0D8               	btfss	status,0,c
  2019  000A7A  D78A               	goto	l2786
  2020  000A7C                     l2804:
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;Main.c: 439: }
  2024                           ;Main.c: 440: state = scan;
  2025  000A7C  0E00               	movlw	0
  2026  000A7E  D47A               	goto	L3
  2027  000A80                     l2808:
  2028                           
  2029                           ; BSR set to: 0
  2030  000A80  0100               	movlb	0	; () banked
  2031  000A82  519D               	movf	main@state& (0+255),w,b
  2032                           
  2033                           ; Switch size 1, requested type "space"
  2034                           ; Number of cases is 9, Range of values is 0 to 8
  2035                           ; switch strategies available:
  2036                           ; Name         Instructions Cycles
  2037                           ; simple_byte           28    15 (average)
  2038                           ;	Chosen strategy is simple_byte
  2039  000A84  0A00               	xorlw	0	; case 0
  2040  000A86  B4D8               	btfsc	status,2,c
  2041  000A88  EFDA  F000         	goto	l2576
  2042  000A8C  0A01               	xorlw	1	; case 1
  2043  000A8E  B4D8               	btfsc	status,2,c
  2044  000A90  D4D7               	goto	l2660
  2045  000A92  0A03               	xorlw	3	; case 2
  2046  000A94  B4D8               	btfsc	status,2,c
  2047  000A96  D60C               	goto	l2714
  2048  000A98  0A01               	xorlw	1	; case 3
  2049  000A9A  B4D8               	btfsc	status,2,c
  2050  000A9C  D67F               	goto	l2734
  2051  000A9E  0A07               	xorlw	7	; case 4
  2052  000AA0  B4D8               	btfsc	status,2,c
  2053  000AA2  D6E6               	goto	l2760
  2054  000AA4  0A01               	xorlw	1	; case 5
  2055  000AA6  B4D8               	btfsc	status,2,c
  2056  000AA8  D6D0               	goto	l2754
  2057  000AAA  0A03               	xorlw	3	; case 6
  2058  000AAC  B4D8               	btfsc	status,2,c
  2059  000AAE  D499               	goto	l2652
  2060  000AB0  0A01               	xorlw	1	; case 7
  2061  000AB2  B4D8               	btfsc	status,2,c
  2062  000AB4  D4DB               	goto	l2670
  2063  000AB6  0A0F               	xorlw	15	; case 8
  2064  000AB8  B4D8               	btfsc	status,2,c
  2065  000ABA  D569               	goto	l2692
  2066  000ABC  EFD2  F000         	goto	l2574
  2067  000AC0                     __end_of_main:
  2068                           	opt stack 0
  2069                           tblptru	equ	0xFF8
  2070                           tblptrh	equ	0xFF7
  2071                           tblptrl	equ	0xFF6
  2072                           tablat	equ	0xFF5
  2073                           prodl	equ	0xFF3
  2074                           postinc0	equ	0xFEE
  2075                           wreg	equ	0xFE8
  2076                           status	equ	0xFD8
  2077                           
  2078 ;; *************** function _setLED *****************
  2079 ;; Defined at:
  2080 ;;		line 47 in file "led.h"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;  value           1    wreg     unsigned char 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  value           1   35[COMRAM] unsigned char 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;		None               void
  2087 ;; Registers used:
  2088 ;;		wreg
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1
  2094 ;;      Params:         0       0       0
  2095 ;;      Locals:         1       0       0
  2096 ;;      Temps:          0       0       0
  2097 ;;      Totals:         1       0       0
  2098 ;;Total ram usage:        1 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:    3
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_main
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           	psect	text1
  2109  00128E                     __ptext1:
  2110                           	opt stack 0
  2111  00128E                     _setLED:
  2112                           	opt stack 27
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;incstack = 0
  2116                           ;setLED@value stored from wreg
  2117  00128E  6E24               	movwf	setLED@value,c
  2118                           
  2119                           ;led.h: 48: LATD = value;
  2120  001290  C024  FF8C         	movff	setLED@value,3980	;volatile
  2121  001294  0012               	return	
  2122  001296                     __end_of_setLED:
  2123                           	opt stack 0
  2124                           tblptru	equ	0xFF8
  2125                           tblptrh	equ	0xFF7
  2126                           tblptrl	equ	0xFF6
  2127                           tablat	equ	0xFF5
  2128                           prodl	equ	0xFF3
  2129                           postinc0	equ	0xFEE
  2130                           wreg	equ	0xFE8
  2131                           status	equ	0xFD8
  2132                           
  2133 ;; *************** function _openLED *****************
  2134 ;; Defined at:
  2135 ;;		line 28 in file "led.h"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;		None
  2140 ;; Return value:  Size  Location     Type
  2141 ;;		None               void
  2142 ;; Registers used:
  2143 ;;		wreg, status,2
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1
  2149 ;;      Params:         0       0       0
  2150 ;;      Locals:         0       0       0
  2151 ;;      Temps:          0       0       0
  2152 ;;      Totals:         0       0       0
  2153 ;;Total ram usage:        0 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; Hardware stack levels required when called:    3
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		_main
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	text2
  2164  001296                     __ptext2:
  2165                           	opt stack 0
  2166  001296                     _openLED:
  2167                           	opt stack 27
  2168                           
  2169                           ;led.h: 30: DDRD = 0;
  2170                           
  2171                           ;incstack = 0
  2172  001296  0E00               	movlw	0
  2173  001298  6E95               	movwf	3989,c	;volatile
  2174  00129A  0012               	return	
  2175  00129C                     __end_of_openLED:
  2176                           	opt stack 0
  2177                           tblptru	equ	0xFF8
  2178                           tblptrh	equ	0xFF7
  2179                           tblptrl	equ	0xFF6
  2180                           tablat	equ	0xFF5
  2181                           prodl	equ	0xFF3
  2182                           postinc0	equ	0xFEE
  2183                           wreg	equ	0xFE8
  2184                           status	equ	0xFD8
  2185                           
  2186 ;; *************** function _delay_s *****************
  2187 ;; Defined at:
  2188 ;;		line 37 in file "delay.h"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  x               2   37[COMRAM] unsigned int 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;		None
  2193 ;; Return value:  Size  Location     Type
  2194 ;;		None               void
  2195 ;; Registers used:
  2196 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMRAM   BANK0   BANK1
  2202 ;;      Params:         2       0       0
  2203 ;;      Locals:         0       0       0
  2204 ;;      Temps:          0       0       0
  2205 ;;      Totals:         2       0       0
  2206 ;;Total ram usage:        2 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:    4
  2209 ;; This function calls:
  2210 ;;		_Delay10KTCYx
  2211 ;; This function is called by:
  2212 ;;		_main
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text3
  2217  001278                     __ptext3:
  2218                           	opt stack 0
  2219  001278                     _delay_s:
  2220                           	opt stack 26
  2221                           
  2222                           ;delay.h: 38: Delay10KTCYx(x * 100);
  2223                           
  2224                           ;incstack = 0
  2225  001278  5026               	movf	delay_s@x,w,c
  2226  00127A  0D64               	mullw	100
  2227  00127C  50F3               	movf	prodl,w,c
  2228  00127E  ECFC  F008         	call	_Delay10KTCYx
  2229  001282  0012               	return	
  2230  001284                     __end_of_delay_s:
  2231                           	opt stack 0
  2232                           tblptru	equ	0xFF8
  2233                           tblptrh	equ	0xFF7
  2234                           tblptrl	equ	0xFF6
  2235                           tablat	equ	0xFF5
  2236                           prodl	equ	0xFF3
  2237                           postinc0	equ	0xFEE
  2238                           wreg	equ	0xFE8
  2239                           status	equ	0xFD8
  2240                           
  2241 ;; *************** function _delay_ms *****************
  2242 ;; Defined at:
  2243 ;;		line 27 in file "delay.h"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  x               2   37[COMRAM] unsigned int 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;		None
  2248 ;; Return value:  Size  Location     Type
  2249 ;;		None               void
  2250 ;; Registers used:
  2251 ;;		wreg, status,2, status,0, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1
  2257 ;;      Params:         2       0       0
  2258 ;;      Locals:         0       0       0
  2259 ;;      Temps:          2       0       0
  2260 ;;      Totals:         4       0       0
  2261 ;;Total ram usage:        4 bytes
  2262 ;; Hardware stack levels used:    1
  2263 ;; Hardware stack levels required when called:    4
  2264 ;; This function calls:
  2265 ;;		_Delay10KTCYx
  2266 ;; This function is called by:
  2267 ;;		_main
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text4
  2272  00113C                     __ptext4:
  2273                           	opt stack 0
  2274  00113C                     _delay_ms:
  2275                           	opt stack 26
  2276                           
  2277                           ;delay.h: 28: Delay10KTCYx(x / 8);
  2278                           
  2279                           ;incstack = 0
  2280  00113C  C026  F028         	movff	delay_ms@x,??_delay_ms
  2281  001140  C027  F029         	movff	delay_ms@x+1,??_delay_ms+1
  2282  001144  90D8               	bcf	status,0,c
  2283  001146  3229               	rrcf	??_delay_ms+1,f,c
  2284  001148  3228               	rrcf	??_delay_ms,f,c
  2285  00114A  90D8               	bcf	status,0,c
  2286  00114C  3229               	rrcf	??_delay_ms+1,f,c
  2287  00114E  3228               	rrcf	??_delay_ms,f,c
  2288  001150  90D8               	bcf	status,0,c
  2289  001152  3229               	rrcf	??_delay_ms+1,f,c
  2290  001154  3228               	rrcf	??_delay_ms,f,c
  2291  001156  5028               	movf	??_delay_ms,w,c
  2292  001158  ECFC  F008         	call	_Delay10KTCYx
  2293  00115C  0012               	return	
  2294  00115E                     __end_of_delay_ms:
  2295                           	opt stack 0
  2296                           tblptru	equ	0xFF8
  2297                           tblptrh	equ	0xFF7
  2298                           tblptrl	equ	0xFF6
  2299                           tablat	equ	0xFF5
  2300                           prodl	equ	0xFF3
  2301                           postinc0	equ	0xFEE
  2302                           wreg	equ	0xFE8
  2303                           status	equ	0xFD8
  2304                           
  2305 ;; *************** function _Delay10KTCYx *****************
  2306 ;; Defined at:
  2307 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d10ktcyx.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  unit            1    wreg     unsigned char 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  unit            1   36[COMRAM] unsigned char 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;		None               void
  2314 ;; Registers used:
  2315 ;;		wreg
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMRAM   BANK0   BANK1
  2321 ;;      Params:         0       0       0
  2322 ;;      Locals:         1       0       0
  2323 ;;      Temps:          1       0       0
  2324 ;;      Totals:         2       0       0
  2325 ;;Total ram usage:        2 bytes
  2326 ;; Hardware stack levels used:    1
  2327 ;; Hardware stack levels required when called:    3
  2328 ;; This function calls:
  2329 ;;		Nothing
  2330 ;; This function is called by:
  2331 ;;		_delay_ms
  2332 ;;		_delay_s
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text5
  2337  0011F8                     __ptext5:
  2338                           	opt stack 0
  2339  0011F8                     _Delay10KTCYx:
  2340                           	opt stack 26
  2341                           
  2342                           ;incstack = 0
  2343                           ;Delay10KTCYx@unit stored from wreg
  2344  0011F8  6E25               	movwf	Delay10KTCYx@unit,c
  2345  0011FA                     l658:
  2346  0011FA  0E0D               	movlw	13
  2347  0011FC  6E24               	movwf	??_Delay10KTCYx& (0+255),c
  2348  0011FE  0EFC               	movlw	252
  2349  001200                     u2027:
  2350  001200  2EE8               	decfsz	wreg,f,c
  2351  001202  D7FE               	goto	u2027
  2352  001204  2E24               	decfsz	??_Delay10KTCYx& (0+255),f,c
  2353  001206  D7FC               	goto	u2027
  2354  001208  2E25               	decfsz	Delay10KTCYx@unit,f,c
  2355  00120A  D7F7               	goto	l658
  2356  00120C  0012               	return	
  2357  00120E                     __end_of_Delay10KTCYx:
  2358                           	opt stack 0
  2359                           tblptru	equ	0xFF8
  2360                           tblptrh	equ	0xFF7
  2361                           tblptrl	equ	0xFF6
  2362                           tablat	equ	0xFF5
  2363                           prodl	equ	0xFF3
  2364                           postinc0	equ	0xFEE
  2365                           wreg	equ	0xFE8
  2366                           status	equ	0xFD8
  2367                           
  2368 ;; *************** function _custom_delay *****************
  2369 ;; Defined at:
  2370 ;;		line 82 in file "Main.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  iterations      2   77[COMRAM] int 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  i               2   80[COMRAM] int 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;		None               void
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, status,0, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1
  2384 ;;      Params:         2       0       0
  2385 ;;      Locals:         2       0       0
  2386 ;;      Temps:          1       0       0
  2387 ;;      Totals:         5       0       0
  2388 ;;Total ram usage:        5 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    4
  2391 ;; This function calls:
  2392 ;;		_Delay10TCYx
  2393 ;; This function is called by:
  2394 ;;		_main
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text6
  2399  00107A                     __ptext6:
  2400                           	opt stack 0
  2401  00107A                     _custom_delay:
  2402                           	opt stack 26
  2403                           
  2404                           ;Main.c: 83: for (int i = 0;
  2405                           
  2406                           ;incstack = 0
  2407  00107A  0E00               	movlw	0
  2408  00107C  6E52               	movwf	custom_delay@i+1,c
  2409  00107E  0E00               	movlw	0
  2410  001080  6E51               	movwf	custom_delay@i,c
  2411                           
  2412                           ;Main.c: 84: i < iterations;
  2413                           ;Main.c: 85: i++)
  2414  001082  D005               	goto	l2072
  2415  001084                     l2068:
  2416                           
  2417                           ;Main.c: 86: Delay10TCYx(255);
  2418  001084  0EFF               	movlw	255
  2419  001086  EC2C  F009         	call	_Delay10TCYx
  2420  00108A  4A51               	infsnz	custom_delay@i,f,c
  2421  00108C  2A52               	incf	custom_delay@i+1,f,c
  2422  00108E                     l2072:
  2423  00108E  5052               	movf	custom_delay@i+1,w,c
  2424  001090  0A80               	xorlw	128
  2425  001092  6E50               	movwf	??_custom_delay& (0+255),c
  2426  001094  504E               	movf	custom_delay@iterations,w,c
  2427  001096  5C51               	subwf	custom_delay@i,w,c
  2428  001098  504F               	movf	custom_delay@iterations+1,w,c
  2429  00109A  0A80               	xorlw	128
  2430  00109C  5850               	subwfb	??_custom_delay& (0+255),w,c
  2431  00109E  B0D8               	btfsc	status,0,c
  2432  0010A0  0012               	return	
  2433  0010A2  D7F0               	goto	l2068
  2434  0010A4                     __end_of_custom_delay:
  2435                           	opt stack 0
  2436                           tblptru	equ	0xFF8
  2437                           tblptrh	equ	0xFF7
  2438                           tblptrl	equ	0xFF6
  2439                           tablat	equ	0xFF5
  2440                           prodl	equ	0xFF3
  2441                           postinc0	equ	0xFEE
  2442                           wreg	equ	0xFE8
  2443                           status	equ	0xFD8
  2444                           
  2445 ;; *************** function _Delay10TCYx *****************
  2446 ;; Defined at:
  2447 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d10tcyx.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  unit            1    wreg     unsigned char 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  unit            1   35[COMRAM] unsigned char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;		None               void
  2454 ;; Registers used:
  2455 ;;		wreg
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1
  2461 ;;      Params:         0       0       0
  2462 ;;      Locals:         1       0       0
  2463 ;;      Temps:          0       0       0
  2464 ;;      Totals:         1       0       0
  2465 ;;Total ram usage:        1 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    3
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_custom_delay
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text7
  2476  001258                     __ptext7:
  2477                           	opt stack 0
  2478  001258                     _Delay10TCYx:
  2479                           	opt stack 26
  2480                           
  2481                           ;incstack = 0
  2482                           ;Delay10TCYx@unit stored from wreg
  2483  001258  6E24               	movwf	Delay10TCYx@unit,c
  2484  00125A                     l665:
  2485  00125A  0E03               	movlw	3
  2486  00125C                     u2037:
  2487  00125C  2EE8               	decfsz	wreg,f,c
  2488  00125E  D7FE               	goto	u2037
  2489  001260  F000               	nop	
  2490  001262  2E24               	decfsz	Delay10TCYx@unit,f,c
  2491  001264  D7FA               	goto	l665
  2492  001266  0012               	return	
  2493  001268                     __end_of_Delay10TCYx:
  2494                           	opt stack 0
  2495                           tblptru	equ	0xFF8
  2496                           tblptrh	equ	0xFF7
  2497                           tblptrl	equ	0xFF6
  2498                           tablat	equ	0xFF5
  2499                           prodl	equ	0xFF3
  2500                           postinc0	equ	0xFEE
  2501                           wreg	equ	0xFE8
  2502                           status	equ	0xFD8
  2503                           
  2504 ;; *************** function ___lwdiv *****************
  2505 ;; Defined at:
  2506 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  dividend        2   35[COMRAM] unsigned int 
  2509 ;;  divisor         2   37[COMRAM] unsigned int 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  quotient        2   39[COMRAM] unsigned int 
  2512 ;;  counter         1   41[COMRAM] unsigned char 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  2   35[COMRAM] unsigned int 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1
  2522 ;;      Params:         4       0       0
  2523 ;;      Locals:         3       0       0
  2524 ;;      Temps:          0       0       0
  2525 ;;      Totals:         7       0       0
  2526 ;;Total ram usage:        7 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    3
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_main
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text8
  2537  000EFA                     __ptext8:
  2538                           	opt stack 0
  2539  000EFA                     ___lwdiv:
  2540                           	opt stack 27
  2541                           
  2542                           ;incstack = 0
  2543  000EFA  0E00               	movlw	0
  2544  000EFC  6E29               	movwf	___lwdiv@quotient+1,c
  2545  000EFE  0E00               	movlw	0
  2546  000F00  6E28               	movwf	___lwdiv@quotient,c
  2547  000F02  5027               	movf	___lwdiv@divisor+1,w,c
  2548  000F04  1026               	iorwf	___lwdiv@divisor,w,c
  2549  000F06  B4D8               	btfsc	status,2,c
  2550  000F08  D01C               	goto	l961
  2551  000F0A  0E01               	movlw	1
  2552  000F0C  6E2A               	movwf	___lwdiv@counter,c
  2553  000F0E  D004               	goto	l2188
  2554  000F10                     l2186:
  2555  000F10  90D8               	bcf	status,0,c
  2556  000F12  3626               	rlcf	___lwdiv@divisor,f,c
  2557  000F14  3627               	rlcf	___lwdiv@divisor+1,f,c
  2558  000F16  2A2A               	incf	___lwdiv@counter,f,c
  2559  000F18                     l2188:
  2560  000F18  AE27               	btfss	___lwdiv@divisor+1,7,c
  2561  000F1A  D7FA               	goto	l2186
  2562  000F1C                     l2190:
  2563  000F1C  90D8               	bcf	status,0,c
  2564  000F1E  3628               	rlcf	___lwdiv@quotient,f,c
  2565  000F20  3629               	rlcf	___lwdiv@quotient+1,f,c
  2566  000F22  5026               	movf	___lwdiv@divisor,w,c
  2567  000F24  5C24               	subwf	___lwdiv@dividend,w,c
  2568  000F26  5027               	movf	___lwdiv@divisor+1,w,c
  2569  000F28  5825               	subwfb	___lwdiv@dividend+1,w,c
  2570  000F2A  A0D8               	btfss	status,0,c
  2571  000F2C  D005               	goto	l2198
  2572  000F2E  5026               	movf	___lwdiv@divisor,w,c
  2573  000F30  5E24               	subwf	___lwdiv@dividend,f,c
  2574  000F32  5027               	movf	___lwdiv@divisor+1,w,c
  2575  000F34  5A25               	subwfb	___lwdiv@dividend+1,f,c
  2576  000F36  8028               	bsf	___lwdiv@quotient,0,c
  2577  000F38                     l2198:
  2578  000F38  90D8               	bcf	status,0,c
  2579  000F3A  3227               	rrcf	___lwdiv@divisor+1,f,c
  2580  000F3C  3226               	rrcf	___lwdiv@divisor,f,c
  2581  000F3E  2E2A               	decfsz	___lwdiv@counter,f,c
  2582  000F40  D7ED               	goto	l2190
  2583  000F42                     l961:
  2584  000F42  C028  F024         	movff	___lwdiv@quotient,?___lwdiv
  2585  000F46  C029  F025         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2586  000F4A  0012               	return	
  2587  000F4C                     __end_of___lwdiv:
  2588                           	opt stack 0
  2589                           tblptru	equ	0xFF8
  2590                           tblptrh	equ	0xFF7
  2591                           tblptrl	equ	0xFF6
  2592                           tablat	equ	0xFF5
  2593                           prodl	equ	0xFF3
  2594                           postinc0	equ	0xFEE
  2595                           wreg	equ	0xFE8
  2596                           status	equ	0xFD8
  2597                           
  2598 ;; *************** function ___fttol *****************
  2599 ;; Defined at:
  2600 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  f1              3   62[COMRAM] float 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  lval            4   72[COMRAM] unsigned long 
  2605 ;;  exp1            1   76[COMRAM] unsigned char 
  2606 ;;  sign1           1   71[COMRAM] unsigned char 
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  4   62[COMRAM] long 
  2609 ;; Registers used:
  2610 ;;		wreg, status,2, status,0
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1
  2616 ;;      Params:         4       0       0
  2617 ;;      Locals:         6       0       0
  2618 ;;      Temps:          5       0       0
  2619 ;;      Totals:        15       0       0
  2620 ;;Total ram usage:       15 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    3
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_main
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text9
  2631  000BA4                     __ptext9:
  2632                           	opt stack 0
  2633  000BA4                     ___fttol:
  2634                           	opt stack 27
  2635                           
  2636                           ;incstack = 0
  2637  000BA4  C041  F043         	movff	___fttol@f1+2,??___fttol
  2638  000BA8  6A44               	clrf	(??___fttol+1)& (0+255),c
  2639  000BAA  6A45               	clrf	(??___fttol+2)& (0+255),c
  2640  000BAC  3440               	rlcf	___fttol@f1+1,w,c
  2641  000BAE  3643               	rlcf	??___fttol& (0+255),f,c
  2642  000BB0  E301               	bnc	u1411
  2643  000BB2  8044               	bsf	(??___fttol+1)& (0+255),0,c
  2644  000BB4                     u1411:
  2645  000BB4  5043               	movf	??___fttol,w,c
  2646  000BB6  6E4D               	movwf	___fttol@exp1,c
  2647  000BB8  664D               	tstfsz	___fttol@exp1& (0+255),c
  2648  000BBA  D001               	goto	l2140
  2649  000BBC  D038               	goto	u1460
  2650  000BBE                     l2140:
  2651  000BBE  0E17               	movlw	23
  2652  000BC0  6E43               	movwf	??___fttol& (0+255),c
  2653  000BC2  C03F  F044         	movff	___fttol@f1,??___fttol+1
  2654  000BC6  C040  F045         	movff	___fttol@f1+1,??___fttol+2
  2655  000BCA  C041  F046         	movff	___fttol@f1+2,??___fttol+3
  2656  000BCE  2843               	incf	??___fttol,w,c
  2657  000BD0  6E47               	movwf	(??___fttol+4)& (0+255),c
  2658  000BD2  D004               	goto	u1430
  2659  000BD4                     u1435:
  2660  000BD4  90D8               	bcf	status,0,c
  2661  000BD6  3246               	rrcf	??___fttol+3,f,c
  2662  000BD8  3245               	rrcf	??___fttol+2,f,c
  2663  000BDA  3244               	rrcf	??___fttol+1,f,c
  2664  000BDC                     u1430:
  2665  000BDC  2E47               	decfsz	(??___fttol+4)& (0+255),f,c
  2666  000BDE  D7FA               	goto	u1435
  2667  000BE0  5044               	movf	??___fttol+1,w,c
  2668  000BE2  6E48               	movwf	___fttol@sign1,c
  2669  000BE4  8E40               	bsf	___fttol@f1+1,7,c
  2670  000BE6  0EFF               	movlw	255
  2671  000BE8  163F               	andwf	___fttol@f1,f,c
  2672  000BEA  0EFF               	movlw	255
  2673  000BEC  1640               	andwf	___fttol@f1+1,f,c
  2674  000BEE  0E00               	movlw	0
  2675  000BF0  1641               	andwf	___fttol@f1+2,f,c
  2676  000BF2  503F               	movf	___fttol@f1,w,c
  2677  000BF4  6E49               	movwf	___fttol@lval,c
  2678  000BF6  5040               	movf	___fttol@f1+1,w,c
  2679  000BF8  6E4A               	movwf	___fttol@lval+1,c
  2680  000BFA  5041               	movf	___fttol@f1+2,w,c
  2681  000BFC  6E4B               	movwf	___fttol@lval+2,c
  2682  000BFE  6A4C               	clrf	___fttol@lval+3,c
  2683  000C00  0E8E               	movlw	142
  2684  000C02  5E4D               	subwf	___fttol@exp1,f,c
  2685  000C04  AE4D               	btfss	___fttol@exp1,7,c
  2686  000C06  D010               	goto	l2162
  2687  000C08  504D               	movf	___fttol@exp1,w,c
  2688  000C0A  0A80               	xorlw	128
  2689  000C0C  6E43               	movwf	??___fttol& (0+255),c
  2690  000C0E  0EF1               	movlw	241
  2691  000C10  0A80               	xorlw	128
  2692  000C12  5C43               	subwf	??___fttol,w,c
  2693  000C14  A0D8               	btfss	status,0,c
  2694  000C16  D00B               	goto	u1460
  2695  000C18                     l2158:
  2696  000C18  90D8               	bcf	status,0,c
  2697  000C1A  324C               	rrcf	___fttol@lval+3,f,c
  2698  000C1C  324B               	rrcf	___fttol@lval+2,f,c
  2699  000C1E  324A               	rrcf	___fttol@lval+1,f,c
  2700  000C20  3249               	rrcf	___fttol@lval,f,c
  2701  000C22  3E4D               	incfsz	___fttol@exp1,f,c
  2702  000C24  D7F9               	goto	l2158
  2703  000C26  D014               	goto	l2172
  2704  000C28                     l2162:
  2705  000C28  0E17               	movlw	23
  2706  000C2A  644D               	cpfsgt	___fttol@exp1,c
  2707  000C2C  D00F               	goto	l2170
  2708  000C2E                     u1460:
  2709  000C2E  0E00               	movlw	0
  2710  000C30  6E3F               	movwf	?___fttol,c
  2711  000C32  0E00               	movlw	0
  2712  000C34  6E40               	movwf	?___fttol+1,c
  2713  000C36  0E00               	movlw	0
  2714  000C38  6E41               	movwf	?___fttol+2,c
  2715  000C3A  0E00               	movlw	0
  2716  000C3C  6E42               	movwf	?___fttol+3,c
  2717  000C3E  D01B               	goto	l859
  2718  000C40                     l2168:
  2719  000C40  90D8               	bcf	status,0,c
  2720  000C42  3649               	rlcf	___fttol@lval,f,c
  2721  000C44  364A               	rlcf	___fttol@lval+1,f,c
  2722  000C46  364B               	rlcf	___fttol@lval+2,f,c
  2723  000C48  364C               	rlcf	___fttol@lval+3,f,c
  2724  000C4A  064D               	decf	___fttol@exp1,f,c
  2725  000C4C                     l2170:
  2726  000C4C  664D               	tstfsz	___fttol@exp1,c
  2727  000C4E  D7F8               	goto	l2168
  2728  000C50                     l2172:
  2729  000C50  5048               	movf	___fttol@sign1,w,c
  2730  000C52  B4D8               	btfsc	status,2,c
  2731  000C54  D008               	goto	l2176
  2732  000C56  1E4C               	comf	___fttol@lval+3,f,c
  2733  000C58  1E4B               	comf	___fttol@lval+2,f,c
  2734  000C5A  1E4A               	comf	___fttol@lval+1,f,c
  2735  000C5C  6C49               	negf	___fttol@lval,c
  2736  000C5E  0E00               	movlw	0
  2737  000C60  224A               	addwfc	___fttol@lval+1,f,c
  2738  000C62  224B               	addwfc	___fttol@lval+2,f,c
  2739  000C64  224C               	addwfc	___fttol@lval+3,f,c
  2740  000C66                     l2176:
  2741  000C66  C049  F03F         	movff	___fttol@lval,?___fttol
  2742  000C6A  C04A  F040         	movff	___fttol@lval+1,?___fttol+1
  2743  000C6E  C04B  F041         	movff	___fttol@lval+2,?___fttol+2
  2744  000C72  C04C  F042         	movff	___fttol@lval+3,?___fttol+3
  2745  000C76                     l859:
  2746  000C76  0012               	return	
  2747  000C78                     __end_of___fttol:
  2748                           	opt stack 0
  2749                           tblptru	equ	0xFF8
  2750                           tblptrh	equ	0xFF7
  2751                           tblptrl	equ	0xFF6
  2752                           tablat	equ	0xFF5
  2753                           prodl	equ	0xFF3
  2754                           postinc0	equ	0xFEE
  2755                           wreg	equ	0xFE8
  2756                           status	equ	0xFD8
  2757                           
  2758 ;; *************** function ___ftmul *****************
  2759 ;; Defined at:
  2760 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;  f1              3   47[COMRAM] float 
  2763 ;;  f2              3   50[COMRAM] float 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  f3_as_produc    3   57[COMRAM] unsigned um
  2766 ;;  sign            1   61[COMRAM] unsigned char 
  2767 ;;  cntr            1   60[COMRAM] unsigned char 
  2768 ;;  exp             1   56[COMRAM] unsigned char 
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  3   47[COMRAM] float 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1
  2778 ;;      Params:         6       0       0
  2779 ;;      Locals:         6       0       0
  2780 ;;      Temps:          3       0       0
  2781 ;;      Totals:        15       0       0
  2782 ;;Total ram usage:       15 bytes
  2783 ;; Hardware stack levels used:    1
  2784 ;; Hardware stack levels required when called:    4
  2785 ;; This function calls:
  2786 ;;		___ftpack
  2787 ;; This function is called by:
  2788 ;;		_main
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text10
  2793  000AC0                     __ptext10:
  2794                           	opt stack 0
  2795  000AC0                     ___ftmul:
  2796                           	opt stack 26
  2797                           
  2798                           ;incstack = 0
  2799  000AC0  C032  F036         	movff	___ftmul@f1+2,??___ftmul
  2800  000AC4  6A37               	clrf	(??___ftmul+1)& (0+255),c
  2801  000AC6  6A38               	clrf	(??___ftmul+2)& (0+255),c
  2802  000AC8  3431               	rlcf	___ftmul@f1+1,w,c
  2803  000ACA  3636               	rlcf	??___ftmul& (0+255),f,c
  2804  000ACC  E301               	bnc	u1341
  2805  000ACE  8037               	bsf	(??___ftmul+1)& (0+255),0,c
  2806  000AD0                     u1341:
  2807  000AD0  5036               	movf	??___ftmul,w,c
  2808  000AD2  6E39               	movwf	___ftmul@exp,c
  2809  000AD4  6639               	tstfsz	___ftmul@exp& (0+255),c
  2810  000AD6  D001               	goto	l2080
  2811  000AD8  D00C               	goto	u1370
  2812  000ADA                     l2080:
  2813  000ADA  C035  F036         	movff	___ftmul@f2+2,??___ftmul
  2814  000ADE  6A37               	clrf	(??___ftmul+1)& (0+255),c
  2815  000AE0  6A38               	clrf	(??___ftmul+2)& (0+255),c
  2816  000AE2  3434               	rlcf	___ftmul@f2+1,w,c
  2817  000AE4  3636               	rlcf	??___ftmul& (0+255),f,c
  2818  000AE6  E301               	bnc	u1361
  2819  000AE8  8037               	bsf	(??___ftmul+1)& (0+255),0,c
  2820  000AEA                     u1361:
  2821  000AEA  5036               	movf	??___ftmul,w,c
  2822  000AEC  6E3E               	movwf	___ftmul@sign,c
  2823  000AEE  663E               	tstfsz	___ftmul@sign& (0+255),c
  2824  000AF0  D007               	goto	l2086
  2825  000AF2                     u1370:
  2826  000AF2  0E00               	movlw	0
  2827  000AF4  6E30               	movwf	?___ftmul,c
  2828  000AF6  0E00               	movlw	0
  2829  000AF8  6E31               	movwf	?___ftmul+1,c
  2830  000AFA  0E00               	movlw	0
  2831  000AFC  6E32               	movwf	?___ftmul+2,c
  2832  000AFE  D051               	goto	l839
  2833  000B00                     l2086:
  2834  000B00  503E               	movf	___ftmul@sign,w,c
  2835  000B02  0F7B               	addlw	123
  2836  000B04  2639               	addwf	___ftmul@exp,f,c
  2837  000B06  C032  F03E         	movff	___ftmul@f1+2,___ftmul@sign
  2838  000B0A  5035               	movf	___ftmul@f2+2,w,c
  2839  000B0C  1A3E               	xorwf	___ftmul@sign,f,c
  2840  000B0E  0E80               	movlw	128
  2841  000B10  163E               	andwf	___ftmul@sign,f,c
  2842  000B12  8E31               	bsf	___ftmul@f1+1,7,c
  2843  000B14  8E34               	bsf	___ftmul@f2+1,7,c
  2844  000B16  0EFF               	movlw	255
  2845  000B18  1633               	andwf	___ftmul@f2,f,c
  2846  000B1A  0EFF               	movlw	255
  2847  000B1C  1634               	andwf	___ftmul@f2+1,f,c
  2848  000B1E  0E00               	movlw	0
  2849  000B20  1635               	andwf	___ftmul@f2+2,f,c
  2850  000B22  0E00               	movlw	0
  2851  000B24  6E3A               	movwf	___ftmul@f3_as_product,c
  2852  000B26  0E00               	movlw	0
  2853  000B28  6E3B               	movwf	___ftmul@f3_as_product+1,c
  2854  000B2A  0E00               	movlw	0
  2855  000B2C  6E3C               	movwf	___ftmul@f3_as_product+2,c
  2856  000B2E  0E07               	movlw	7
  2857  000B30  6E3D               	movwf	___ftmul@cntr,c
  2858  000B32                     l2100:
  2859  000B32  A030               	btfss	___ftmul@f1,0,c
  2860  000B34  D006               	goto	l2104
  2861  000B36  5033               	movf	___ftmul@f2,w,c
  2862  000B38  263A               	addwf	___ftmul@f3_as_product,f,c
  2863  000B3A  5034               	movf	___ftmul@f2+1,w,c
  2864  000B3C  223B               	addwfc	___ftmul@f3_as_product+1,f,c
  2865  000B3E  5035               	movf	___ftmul@f2+2,w,c
  2866  000B40  223C               	addwfc	___ftmul@f3_as_product+2,f,c
  2867  000B42                     l2104:
  2868  000B42  90D8               	bcf	status,0,c
  2869  000B44  3232               	rrcf	___ftmul@f1+2,f,c
  2870  000B46  3231               	rrcf	___ftmul@f1+1,f,c
  2871  000B48  3230               	rrcf	___ftmul@f1,f,c
  2872  000B4A  90D8               	bcf	status,0,c
  2873  000B4C  3633               	rlcf	___ftmul@f2,f,c
  2874  000B4E  3634               	rlcf	___ftmul@f2+1,f,c
  2875  000B50  3635               	rlcf	___ftmul@f2+2,f,c
  2876  000B52  2E3D               	decfsz	___ftmul@cntr,f,c
  2877  000B54  D7EE               	goto	l2100
  2878  000B56  0E09               	movlw	9
  2879  000B58  6E3D               	movwf	___ftmul@cntr,c
  2880  000B5A                     l2110:
  2881  000B5A  A030               	btfss	___ftmul@f1,0,c
  2882  000B5C  D006               	goto	l2114
  2883  000B5E  5033               	movf	___ftmul@f2,w,c
  2884  000B60  263A               	addwf	___ftmul@f3_as_product,f,c
  2885  000B62  5034               	movf	___ftmul@f2+1,w,c
  2886  000B64  223B               	addwfc	___ftmul@f3_as_product+1,f,c
  2887  000B66  5035               	movf	___ftmul@f2+2,w,c
  2888  000B68  223C               	addwfc	___ftmul@f3_as_product+2,f,c
  2889  000B6A                     l2114:
  2890  000B6A  90D8               	bcf	status,0,c
  2891  000B6C  3232               	rrcf	___ftmul@f1+2,f,c
  2892  000B6E  3231               	rrcf	___ftmul@f1+1,f,c
  2893  000B70  3230               	rrcf	___ftmul@f1,f,c
  2894  000B72  90D8               	bcf	status,0,c
  2895  000B74  323C               	rrcf	___ftmul@f3_as_product+2,f,c
  2896  000B76  323B               	rrcf	___ftmul@f3_as_product+1,f,c
  2897  000B78  323A               	rrcf	___ftmul@f3_as_product,f,c
  2898  000B7A  2E3D               	decfsz	___ftmul@cntr,f,c
  2899  000B7C  D7EE               	goto	l2110
  2900  000B7E  C03A  F024         	movff	___ftmul@f3_as_product,___ftpack@arg
  2901  000B82  C03B  F025         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2902  000B86  C03C  F026         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2903  000B8A  C039  F027         	movff	___ftmul@exp,___ftpack@exp
  2904  000B8E  C03E  F028         	movff	___ftmul@sign,___ftpack@sign
  2905  000B92  EC94  F006         	call	___ftpack	;wreg free
  2906  000B96  C024  F030         	movff	?___ftpack,?___ftmul
  2907  000B9A  C025  F031         	movff	?___ftpack+1,?___ftmul+1
  2908  000B9E  C026  F032         	movff	?___ftpack+2,?___ftmul+2
  2909  000BA2                     l839:
  2910  000BA2  0012               	return	
  2911  000BA4                     __end_of___ftmul:
  2912                           	opt stack 0
  2913                           tblptru	equ	0xFF8
  2914                           tblptrh	equ	0xFF7
  2915                           tblptrl	equ	0xFF6
  2916                           tablat	equ	0xFF5
  2917                           prodl	equ	0xFF3
  2918                           postinc0	equ	0xFEE
  2919                           wreg	equ	0xFE8
  2920                           status	equ	0xFD8
  2921                           
  2922 ;; *************** function ___awtoft *****************
  2923 ;; Defined at:
  2924 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  c               2   43[COMRAM] int 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  sign            1   46[COMRAM] unsigned char 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  3   43[COMRAM] float 
  2931 ;; Registers used:
  2932 ;;		wreg, status,2, status,0, prodl, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1
  2938 ;;      Params:         3       0       0
  2939 ;;      Locals:         1       0       0
  2940 ;;      Temps:          0       0       0
  2941 ;;      Totals:         4       0       0
  2942 ;;Total ram usage:        4 bytes
  2943 ;; Hardware stack levels used:    1
  2944 ;; Hardware stack levels required when called:    4
  2945 ;; This function calls:
  2946 ;;		___ftpack
  2947 ;; This function is called by:
  2948 ;;		_main
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text11
  2953  000F4C                     __ptext11:
  2954                           	opt stack 0
  2955  000F4C                     ___awtoft:
  2956                           	opt stack 26
  2957                           
  2958                           ;incstack = 0
  2959  000F4C  0E00               	movlw	0
  2960  000F4E  6E2F               	movwf	___awtoft@sign,c
  2961  000F50  502D               	movf	___awtoft@c+1,w,c
  2962  000F52  0A80               	xorlw	128
  2963  000F54  6EF3               	movwf	prodl,c
  2964  000F56  0E80               	movlw	128
  2965  000F58  5CF3               	subwf	prodl,w,c
  2966  000F5A  0E00               	movlw	0
  2967  000F5C  B4D8               	btfsc	status,2,c
  2968  000F5E  5C2C               	subwf	___awtoft@c,w,c
  2969  000F60  B0D8               	btfsc	status,0,c
  2970  000F62  D006               	goto	l2130
  2971  000F64  6C2C               	negf	___awtoft@c,c
  2972  000F66  1E2D               	comf	___awtoft@c+1,f,c
  2973  000F68  B0D8               	btfsc	status,0,c
  2974  000F6A  2A2D               	incf	___awtoft@c+1,f,c
  2975  000F6C  0E01               	movlw	1
  2976  000F6E  6E2F               	movwf	___awtoft@sign,c
  2977  000F70                     l2130:
  2978  000F70  C02C  F024         	movff	___awtoft@c,___ftpack@arg
  2979  000F74  C02D  F025         	movff	___awtoft@c+1,___ftpack@arg+1
  2980  000F78  6A26               	clrf	___ftpack@arg+2,c
  2981  000F7A  0E8E               	movlw	142
  2982  000F7C  6E27               	movwf	___ftpack@exp,c
  2983  000F7E  C02F  F028         	movff	___awtoft@sign,___ftpack@sign
  2984  000F82  EC94  F006         	call	___ftpack	;wreg free
  2985  000F86  C024  F02C         	movff	?___ftpack,?___awtoft
  2986  000F8A  C025  F02D         	movff	?___ftpack+1,?___awtoft+1
  2987  000F8E  C026  F02E         	movff	?___ftpack+2,?___awtoft+2
  2988  000F92  0012               	return	
  2989  000F94                     __end_of___awtoft:
  2990                           	opt stack 0
  2991                           tblptru	equ	0xFF8
  2992                           tblptrh	equ	0xFF7
  2993                           tblptrl	equ	0xFF6
  2994                           tablat	equ	0xFF5
  2995                           prodl	equ	0xFF3
  2996                           postinc0	equ	0xFEE
  2997                           wreg	equ	0xFE8
  2998                           status	equ	0xFD8
  2999                           
  3000 ;; *************** function ___ftpack *****************
  3001 ;; Defined at:
  3002 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  arg             3   35[COMRAM] unsigned um
  3005 ;;  exp             1   38[COMRAM] unsigned char 
  3006 ;;  sign            1   39[COMRAM] unsigned char 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;		None
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  3   35[COMRAM] float 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1
  3018 ;;      Params:         5       0       0
  3019 ;;      Locals:         0       0       0
  3020 ;;      Temps:          3       0       0
  3021 ;;      Totals:         8       0       0
  3022 ;;Total ram usage:        8 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; Hardware stack levels required when called:    3
  3025 ;; This function calls:
  3026 ;;		Nothing
  3027 ;; This function is called by:
  3028 ;;		___awtoft
  3029 ;;		___ftmul
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text12
  3034  000D28                     __ptext12:
  3035                           	opt stack 0
  3036  000D28                     ___ftpack:
  3037                           	opt stack 26
  3038                           
  3039                           ;incstack = 0
  3040  000D28  5027               	movf	___ftpack@exp,w,c
  3041  000D2A  B4D8               	btfsc	status,2,c
  3042  000D2C  D005               	goto	l1920
  3043  000D2E  5024               	movf	___ftpack@arg,w,c
  3044  000D30  1025               	iorwf	___ftpack@arg+1,w,c
  3045  000D32  1026               	iorwf	___ftpack@arg+2,w,c
  3046  000D34  A4D8               	btfss	status,2,c
  3047  000D36  D00C               	goto	l1926
  3048  000D38                     l1920:
  3049  000D38  0E00               	movlw	0
  3050  000D3A  6E24               	movwf	?___ftpack,c
  3051  000D3C  0E00               	movlw	0
  3052  000D3E  6E25               	movwf	?___ftpack+1,c
  3053  000D40  0E00               	movlw	0
  3054  000D42  6E26               	movwf	?___ftpack+2,c
  3055  000D44  D044               	goto	l755
  3056  000D46                     l1924:
  3057  000D46  2A27               	incf	___ftpack@exp,f,c
  3058  000D48  90D8               	bcf	status,0,c
  3059  000D4A  3226               	rrcf	___ftpack@arg+2,f,c
  3060  000D4C  3225               	rrcf	___ftpack@arg+1,f,c
  3061  000D4E  3224               	rrcf	___ftpack@arg,f,c
  3062  000D50                     l1926:
  3063  000D50  0E00               	movlw	0
  3064  000D52  1424               	andwf	___ftpack@arg,w,c
  3065  000D54  6E29               	movwf	??___ftpack& (0+255),c
  3066  000D56  0E00               	movlw	0
  3067  000D58  1425               	andwf	___ftpack@arg+1,w,c
  3068  000D5A  6E2A               	movwf	(??___ftpack+1)& (0+255),c
  3069  000D5C  0EFE               	movlw	254
  3070  000D5E  1426               	andwf	___ftpack@arg+2,w,c
  3071  000D60  6E2B               	movwf	(??___ftpack+2)& (0+255),c
  3072  000D62  5029               	movf	??___ftpack,w,c
  3073  000D64  102A               	iorwf	??___ftpack+1,w,c
  3074  000D66  102B               	iorwf	??___ftpack+2,w,c
  3075  000D68  B4D8               	btfsc	status,2,c
  3076  000D6A  D00C               	goto	l1932
  3077  000D6C  D7EC               	goto	l1924
  3078  000D6E                     l1928:
  3079  000D6E  2A27               	incf	___ftpack@exp,f,c
  3080  000D70  0E01               	movlw	1
  3081  000D72  2624               	addwf	___ftpack@arg,f,c
  3082  000D74  0E00               	movlw	0
  3083  000D76  2225               	addwfc	___ftpack@arg+1,f,c
  3084  000D78  0E00               	movlw	0
  3085  000D7A  2226               	addwfc	___ftpack@arg+2,f,c
  3086  000D7C  90D8               	bcf	status,0,c
  3087  000D7E  3226               	rrcf	___ftpack@arg+2,f,c
  3088  000D80  3225               	rrcf	___ftpack@arg+1,f,c
  3089  000D82  3224               	rrcf	___ftpack@arg,f,c
  3090  000D84                     l1932:
  3091  000D84  0E00               	movlw	0
  3092  000D86  1424               	andwf	___ftpack@arg,w,c
  3093  000D88  6E29               	movwf	??___ftpack& (0+255),c
  3094  000D8A  0E00               	movlw	0
  3095  000D8C  1425               	andwf	___ftpack@arg+1,w,c
  3096  000D8E  6E2A               	movwf	(??___ftpack+1)& (0+255),c
  3097  000D90  0EFF               	movlw	255
  3098  000D92  1426               	andwf	___ftpack@arg+2,w,c
  3099  000D94  6E2B               	movwf	(??___ftpack+2)& (0+255),c
  3100  000D96  5029               	movf	??___ftpack,w,c
  3101  000D98  102A               	iorwf	??___ftpack+1,w,c
  3102  000D9A  102B               	iorwf	??___ftpack+2,w,c
  3103  000D9C  B4D8               	btfsc	status,2,c
  3104  000D9E  D006               	goto	l1936
  3105  000DA0  D7E6               	goto	l1928
  3106  000DA2                     l1934:
  3107  000DA2  0627               	decf	___ftpack@exp,f,c
  3108  000DA4  90D8               	bcf	status,0,c
  3109  000DA6  3624               	rlcf	___ftpack@arg,f,c
  3110  000DA8  3625               	rlcf	___ftpack@arg+1,f,c
  3111  000DAA  3626               	rlcf	___ftpack@arg+2,f,c
  3112  000DAC                     l1936:
  3113  000DAC  AE25               	btfss	___ftpack@arg+1,7,c
  3114  000DAE  D7F9               	goto	l1934
  3115  000DB0  A027               	btfss	___ftpack@exp,0,c
  3116  000DB2  9E25               	bcf	___ftpack@arg+1,7,c
  3117  000DB4  90D8               	bcf	status,0,c
  3118  000DB6  3227               	rrcf	___ftpack@exp,f,c
  3119  000DB8  5027               	movf	___ftpack@exp,w,c
  3120  000DBA  1226               	iorwf	___ftpack@arg+2,f,c
  3121  000DBC  5028               	movf	___ftpack@sign,w,c
  3122  000DBE  A4D8               	btfss	status,2,c
  3123  000DC0  8E26               	bsf	___ftpack@arg+2,7,c
  3124  000DC2  C024  F024         	movff	___ftpack@arg,?___ftpack
  3125  000DC6  C025  F025         	movff	___ftpack@arg+1,?___ftpack+1
  3126  000DCA  C026  F026         	movff	___ftpack@arg+2,?___ftpack+2
  3127  000DCE                     l755:
  3128  000DCE  0012               	return	
  3129  000DD0                     __end_of___ftpack:
  3130                           	opt stack 0
  3131                           tblptru	equ	0xFF8
  3132                           tblptrh	equ	0xFF7
  3133                           tblptrl	equ	0xFF6
  3134                           tablat	equ	0xFF5
  3135                           prodl	equ	0xFF3
  3136                           postinc0	equ	0xFEE
  3137                           wreg	equ	0xFE8
  3138                           status	equ	0xFD8
  3139                           
  3140 ;; *************** function _TriggerRightSRF04 *****************
  3141 ;; Defined at:
  3142 ;;		line 88 in file "srf04.h"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;		None
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;		None               void
  3149 ;; Registers used:
  3150 ;;		wreg
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1
  3156 ;;      Params:         0       0       0
  3157 ;;      Locals:         0       0       0
  3158 ;;      Temps:          0       0       0
  3159 ;;      Totals:         0       0       0
  3160 ;;Total ram usage:        0 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; Hardware stack levels required when called:    3
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_main
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           	psect	text13
  3171  0010CC                     __ptext13:
  3172                           	opt stack 0
  3173  0010CC                     _TriggerRightSRF04:
  3174                           	opt stack 27
  3175                           
  3176                           ;srf04.h: 94: LATBbits.LATB2 = 1;
  3177                           
  3178                           ;incstack = 0
  3179  0010CC  848A               	bsf	3978,2,c	;volatile
  3180                           
  3181                           ;srf04.h: 95: _delay(10);
  3182  0010CE  0E03               	movlw	3
  3183  0010D0                     u2047:
  3184  0010D0  2EE8               	decfsz	wreg,f,c
  3185  0010D2  D7FE               	goto	u2047
  3186  0010D4  F000               	nop	
  3187                           
  3188                           ;srf04.h: 96: _delay(10);
  3189  0010D6  0E03               	movlw	3
  3190  0010D8                     u2057:
  3191  0010D8  2EE8               	decfsz	wreg,f,c
  3192  0010DA  D7FE               	goto	u2057
  3193  0010DC  F000               	nop	
  3194                           
  3195                           ;srf04.h: 97: _delay(10);
  3196  0010DE  0E03               	movlw	3
  3197  0010E0                     u2067:
  3198  0010E0  2EE8               	decfsz	wreg,f,c
  3199  0010E2  D7FE               	goto	u2067
  3200  0010E4  F000               	nop	
  3201                           
  3202                           ;srf04.h: 98: _delay(10);
  3203  0010E6  0E03               	movlw	3
  3204  0010E8                     u2077:
  3205  0010E8  2EE8               	decfsz	wreg,f,c
  3206  0010EA  D7FE               	goto	u2077
  3207  0010EC  F000               	nop	
  3208                           
  3209                           ;srf04.h: 99: LATBbits.LATB2 = 0;
  3210  0010EE  948A               	bcf	3978,2,c	;volatile
  3211  0010F0  0012               	return	
  3212  0010F2                     __end_of_TriggerRightSRF04:
  3213                           	opt stack 0
  3214                           tblptru	equ	0xFF8
  3215                           tblptrh	equ	0xFF7
  3216                           tblptrl	equ	0xFF6
  3217                           tablat	equ	0xFF5
  3218                           prodl	equ	0xFF3
  3219                           postinc0	equ	0xFEE
  3220                           wreg	equ	0xFE8
  3221                           status	equ	0xFD8
  3222                           
  3223 ;; *************** function _TriggerLeftSRF04 *****************
  3224 ;; Defined at:
  3225 ;;		line 107 in file "srf04.h"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;		None
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;		None
  3230 ;; Return value:  Size  Location     Type
  3231 ;;		None               void
  3232 ;; Registers used:
  3233 ;;		wreg
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1
  3239 ;;      Params:         0       0       0
  3240 ;;      Locals:         0       0       0
  3241 ;;      Temps:          0       0       0
  3242 ;;      Totals:         0       0       0
  3243 ;;Total ram usage:        0 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; Hardware stack levels required when called:    3
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_main
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           	psect	text14
  3254  0010F2                     __ptext14:
  3255                           	opt stack 0
  3256  0010F2                     _TriggerLeftSRF04:
  3257                           	opt stack 27
  3258                           
  3259                           ;srf04.h: 113: LATBbits.LATB3 = 1;
  3260                           
  3261                           ;incstack = 0
  3262  0010F2  868A               	bsf	3978,3,c	;volatile
  3263                           
  3264                           ;srf04.h: 114: _delay(10);
  3265  0010F4  0E03               	movlw	3
  3266  0010F6                     u2087:
  3267  0010F6  2EE8               	decfsz	wreg,f,c
  3268  0010F8  D7FE               	goto	u2087
  3269  0010FA  F000               	nop	
  3270                           
  3271                           ;srf04.h: 115: _delay(10);
  3272  0010FC  0E03               	movlw	3
  3273  0010FE                     u2097:
  3274  0010FE  2EE8               	decfsz	wreg,f,c
  3275  001100  D7FE               	goto	u2097
  3276  001102  F000               	nop	
  3277                           
  3278                           ;srf04.h: 116: _delay(10);
  3279  001104  0E03               	movlw	3
  3280  001106                     u2107:
  3281  001106  2EE8               	decfsz	wreg,f,c
  3282  001108  D7FE               	goto	u2107
  3283  00110A  F000               	nop	
  3284                           
  3285                           ;srf04.h: 117: _delay(10);
  3286  00110C  0E03               	movlw	3
  3287  00110E                     u2117:
  3288  00110E  2EE8               	decfsz	wreg,f,c
  3289  001110  D7FE               	goto	u2117
  3290  001112  F000               	nop	
  3291                           
  3292                           ;srf04.h: 118: LATBbits.LATB3 = 0;
  3293  001114  968A               	bcf	3978,3,c	;volatile
  3294  001116  0012               	return	
  3295  001118                     __end_of_TriggerLeftSRF04:
  3296                           	opt stack 0
  3297                           tblptru	equ	0xFF8
  3298                           tblptrh	equ	0xFF7
  3299                           tblptrl	equ	0xFF6
  3300                           tablat	equ	0xFF5
  3301                           prodl	equ	0xFF3
  3302                           postinc0	equ	0xFEE
  3303                           wreg	equ	0xFE8
  3304                           status	equ	0xFD8
  3305                           
  3306 ;; *************** function _Runlchb100 *****************
  3307 ;; Defined at:
  3308 ;;		line 104 in file "lcbh100.h"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  starboard       2   45[COMRAM] int 
  3311 ;;  port            2   47[COMRAM] int 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  2   45[COMRAM] int 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0, prodl, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1
  3323 ;;      Params:         4       0       0
  3324 ;;      Locals:         0       0       0
  3325 ;;      Temps:          0       0       0
  3326 ;;      Totals:         4       0       0
  3327 ;;Total ram usage:        4 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; Hardware stack levels required when called:    4
  3330 ;; This function calls:
  3331 ;;		_Closelchb100
  3332 ;;		_SetDCPWM1
  3333 ;;		_SetDCPWM2
  3334 ;;		_abs
  3335 ;; This function is called by:
  3336 ;;		_main
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text15
  3341  000C78                     __ptext15:
  3342                           	opt stack 0
  3343  000C78                     _Runlchb100:
  3344                           	opt stack 26
  3345                           
  3346                           ;lcbh100.h: 105: Closelchb100();
  3347                           
  3348                           ;incstack = 0
  3349  000C78  EC42  F009         	call	_Closelchb100	;wreg free
  3350                           
  3351                           ;lcbh100.h: 108: if (port >= 0 && starboard >= 0) {
  3352  000C7C  AE31               	btfss	Runlchb100@port+1,7,c
  3353  000C7E  BE2F               	btfsc	Runlchb100@starboard+1,7,c
  3354  000C80  D003               	goto	l107
  3355                           
  3356                           ;lcbh100.h: 109: LATAbits.LATA0 = 1;
  3357  000C82  8089               	bsf	3977,0,c	;volatile
  3358                           
  3359                           ;lcbh100.h: 110: LATAbits.LATA1 = 0;
  3360  000C84  9289               	bcf	3977,1,c	;volatile
  3361  000C86  D01C               	goto	L9
  3362  000C88                     l107:
  3363                           
  3364                           ;lcbh100.h: 116: else if (port >= 0 && starboard < 0) {
  3365  000C88  BE31               	btfsc	Runlchb100@port+1,7,c
  3366  000C8A  D00D               	goto	l1986
  3367  000C8C  502F               	movf	Runlchb100@starboard+1,w,c
  3368  000C8E  0A80               	xorlw	128
  3369  000C90  6EF3               	movwf	prodl,c
  3370  000C92  0E80               	movlw	128
  3371  000C94  5CF3               	subwf	prodl,w,c
  3372  000C96  0E00               	movlw	0
  3373  000C98  B4D8               	btfsc	status,2,c
  3374  000C9A  5C2E               	subwf	Runlchb100@starboard,w,c
  3375  000C9C  B0D8               	btfsc	status,0,c
  3376  000C9E  D003               	goto	l1986
  3377                           
  3378                           ;lcbh100.h: 117: LATAbits.LATA0 = 1;
  3379  000CA0  8089               	bsf	3977,0,c	;volatile
  3380                           
  3381                           ;lcbh100.h: 118: LATAbits.LATA1 = 0;
  3382  000CA2  9289               	bcf	3977,1,c	;volatile
  3383  000CA4  D026               	goto	L10
  3384  000CA6                     l1986:
  3385                           
  3386                           ;lcbh100.h: 124: else if (port < 0 && starboard >= 0) {
  3387  000CA6  5031               	movf	Runlchb100@port+1,w,c
  3388  000CA8  0A80               	xorlw	128
  3389  000CAA  6EF3               	movwf	prodl,c
  3390  000CAC  0E80               	movlw	128
  3391  000CAE  5CF3               	subwf	prodl,w,c
  3392  000CB0  0E00               	movlw	0
  3393  000CB2  B4D8               	btfsc	status,2,c
  3394  000CB4  5C30               	subwf	Runlchb100@port,w,c
  3395  000CB6  A0D8               	btfss	status,0,c
  3396  000CB8  BE2F               	btfsc	Runlchb100@starboard+1,7,c
  3397  000CBA  D005               	goto	l1992
  3398                           
  3399                           ;lcbh100.h: 125: LATAbits.LATA0 = 0;
  3400  000CBC  9089               	bcf	3977,0,c	;volatile
  3401                           
  3402                           ;lcbh100.h: 126: LATAbits.LATA1 = 1;
  3403  000CBE  8289               	bsf	3977,1,c	;volatile
  3404  000CC0                     L9:
  3405                           
  3406                           ;lcbh100.h: 127: LATAbits.LATA2 = 1;
  3407  000CC0  8489               	bsf	3977,2,c	;volatile
  3408                           
  3409                           ;lcbh100.h: 128: LATAbits.LATA3 = 0;
  3410  000CC2  9689               	bcf	3977,3,c	;volatile
  3411                           
  3412                           ;lcbh100.h: 130: }
  3413  000CC4  D018               	goto	l1998
  3414  000CC6                     l1992:
  3415                           
  3416                           ;lcbh100.h: 132: else if (port < 0 && starboard < 0) {
  3417  000CC6  5031               	movf	Runlchb100@port+1,w,c
  3418  000CC8  0A80               	xorlw	128
  3419  000CCA  6EF3               	movwf	prodl,c
  3420  000CCC  0E80               	movlw	128
  3421  000CCE  5CF3               	subwf	prodl,w,c
  3422  000CD0  0E00               	movlw	0
  3423  000CD2  B4D8               	btfsc	status,2,c
  3424  000CD4  5C30               	subwf	Runlchb100@port,w,c
  3425  000CD6  B0D8               	btfsc	status,0,c
  3426  000CD8  D00E               	goto	l1998
  3427  000CDA  502F               	movf	Runlchb100@starboard+1,w,c
  3428  000CDC  0A80               	xorlw	128
  3429  000CDE  6EF3               	movwf	prodl,c
  3430  000CE0  0E80               	movlw	128
  3431  000CE2  5CF3               	subwf	prodl,w,c
  3432  000CE4  0E00               	movlw	0
  3433  000CE6  B4D8               	btfsc	status,2,c
  3434  000CE8  5C2E               	subwf	Runlchb100@starboard,w,c
  3435  000CEA  B0D8               	btfsc	status,0,c
  3436  000CEC  D004               	goto	l1998
  3437                           
  3438                           ;lcbh100.h: 133: LATAbits.LATA0 = 0;
  3439  000CEE  9089               	bcf	3977,0,c	;volatile
  3440                           
  3441                           ;lcbh100.h: 134: LATAbits.LATA1 = 1;
  3442  000CF0  8289               	bsf	3977,1,c	;volatile
  3443  000CF2                     L10:
  3444                           
  3445                           ;lcbh100.h: 135: LATAbits.LATA2 = 0;
  3446  000CF2  9489               	bcf	3977,2,c	;volatile
  3447                           
  3448                           ;lcbh100.h: 136: LATAbits.LATA3 = 1;
  3449  000CF4  8689               	bsf	3977,3,c	;volatile
  3450  000CF6                     l1998:
  3451                           
  3452                           ;lcbh100.h: 137: }
  3453                           ;lcbh100.h: 140: SetDCPWM1(abs(port));
  3454  000CF6  C030  F024         	movff	Runlchb100@port,abs@a
  3455  000CFA  C031  F025         	movff	Runlchb100@port+1,abs@a+1
  3456  000CFE  EC21  F008         	call	_abs	;wreg free
  3457  000D02  C024  F028         	movff	?_abs,SetDCPWM1@dutycycle
  3458  000D06  C025  F029         	movff	?_abs+1,SetDCPWM1@dutycycle+1
  3459  000D0A  ECE7  F007         	call	_SetDCPWM1	;wreg free
  3460                           
  3461                           ;lcbh100.h: 141: SetDCPWM2(abs(starboard));
  3462  000D0E  C02E  F024         	movff	Runlchb100@starboard,abs@a
  3463  000D12  C02F  F025         	movff	Runlchb100@starboard+1,abs@a+1
  3464  000D16  EC21  F008         	call	_abs	;wreg free
  3465  000D1A  C024  F028         	movff	?_abs,SetDCPWM2@dutycycle
  3466  000D1E  C025  F029         	movff	?_abs+1,SetDCPWM2@dutycycle+1
  3467  000D22  ECCA  F007         	call	_SetDCPWM2	;wreg free
  3468  000D26  0012               	return	
  3469  000D28                     __end_of_Runlchb100:
  3470                           	opt stack 0
  3471                           tblptru	equ	0xFF8
  3472                           tblptrh	equ	0xFF7
  3473                           tblptrl	equ	0xFF6
  3474                           tablat	equ	0xFF5
  3475                           prodl	equ	0xFF3
  3476                           postinc0	equ	0xFEE
  3477                           wreg	equ	0xFE8
  3478                           status	equ	0xFD8
  3479                           
  3480 ;; *************** function _abs *****************
  3481 ;; Defined at:
  3482 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\abs.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;  a               2   35[COMRAM] int 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  2   35[COMRAM] int 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0, prodl
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1
  3496 ;;      Params:         2       0       0
  3497 ;;      Locals:         0       0       0
  3498 ;;      Temps:          2       0       0
  3499 ;;      Totals:         4       0       0
  3500 ;;Total ram usage:        4 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    3
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_Runlchb100
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           	psect	text16
  3511  001042                     __ptext16:
  3512                           	opt stack 0
  3513  001042                     _abs:
  3514                           	opt stack 26
  3515                           
  3516                           ;incstack = 0
  3517  001042  5025               	movf	abs@a+1,w,c
  3518  001044  0A80               	xorlw	128
  3519  001046  6EF3               	movwf	prodl,c
  3520  001048  0E80               	movlw	128
  3521  00104A  5CF3               	subwf	prodl,w,c
  3522  00104C  0E00               	movlw	0
  3523  00104E  B4D8               	btfsc	status,2,c
  3524  001050  5C24               	subwf	abs@a,w,c
  3525  001052  B0D8               	btfsc	status,0,c
  3526  001054  D00D               	goto	l478
  3527  001056  C024  F026         	movff	abs@a,??_abs
  3528  00105A  C025  F027         	movff	abs@a+1,??_abs+1
  3529  00105E  1E26               	comf	??_abs,f,c
  3530  001060  1E27               	comf	??_abs+1,f,c
  3531  001062  4A26               	infsnz	??_abs,f,c
  3532  001064  2A27               	incf	??_abs+1,f,c
  3533  001066  C026  F024         	movff	??_abs,?_abs
  3534  00106A  C027  F025         	movff	??_abs+1,?_abs+1
  3535  00106E  D004               	goto	l479
  3536  001070                     l478:
  3537  001070  C024  F024         	movff	abs@a,?_abs
  3538  001074  C025  F025         	movff	abs@a+1,?_abs+1
  3539  001078                     l479:
  3540  001078  0012               	return	
  3541  00107A                     __end_of_abs:
  3542                           	opt stack 0
  3543                           tblptru	equ	0xFF8
  3544                           tblptrh	equ	0xFF7
  3545                           tblptrl	equ	0xFF6
  3546                           tablat	equ	0xFF5
  3547                           prodl	equ	0xFF3
  3548                           postinc0	equ	0xFEE
  3549                           wreg	equ	0xFE8
  3550                           status	equ	0xFD8
  3551                           
  3552 ;; *************** function _SetDCPWM2 *****************
  3553 ;; Defined at:
  3554 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2setdc.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  dutycycle       2   39[COMRAM] unsigned int 
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  DCycle          2   43[COMRAM] struct PWMDC
  3559 ;; Return value:  Size  Location     Type
  3560 ;;		None               void
  3561 ;; Registers used:
  3562 ;;		wreg, status,2, status,0
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1
  3568 ;;      Params:         2       0       0
  3569 ;;      Locals:         2       0       0
  3570 ;;      Temps:          2       0       0
  3571 ;;      Totals:         6       0       0
  3572 ;;Total ram usage:        6 bytes
  3573 ;; Hardware stack levels used:    1
  3574 ;; Hardware stack levels required when called:    3
  3575 ;; This function calls:
  3576 ;;		Nothing
  3577 ;; This function is called by:
  3578 ;;		_Runlchb100
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text17
  3583  000F94                     __ptext17:
  3584                           	opt stack 0
  3585  000F94                     _SetDCPWM2:
  3586                           	opt stack 26
  3587                           
  3588                           ;incstack = 0
  3589  000F94  C028  F02A         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  3590  000F98  C029  F02B         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  3591  000F9C  0E06               	movlw	6
  3592  000F9E                     u1015:
  3593  000F9E  90D8               	bcf	status,0,c
  3594  000FA0  362A               	rlcf	??_SetDCPWM2,f,c
  3595  000FA2  362B               	rlcf	??_SetDCPWM2+1,f,c
  3596  000FA4  2EE8               	decfsz	wreg,f,c
  3597  000FA6  D7FB               	goto	u1015
  3598  000FA8  C02A  F02C         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  3599  000FAC  C02B  F02D         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  3600  000FB0  C02D  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  3601  000FB4  C02C  F02A         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  3602  000FB8  90D8               	bcf	status,0,c
  3603  000FBA  322A               	rrcf	??_SetDCPWM2,f,c
  3604  000FBC  90D8               	bcf	status,0,c
  3605  000FBE  322A               	rrcf	??_SetDCPWM2,f,c
  3606  000FC0  0E30               	movlw	48
  3607  000FC2  162A               	andwf	??_SetDCPWM2,f,c
  3608  000FC4  50BA               	movf	4026,w,c	;volatile
  3609  000FC6  0BCF               	andlw	207
  3610  000FC8  102A               	iorwf	??_SetDCPWM2,w,c
  3611  000FCA  6EBA               	movwf	4026,c	;volatile
  3612  000FCC  0012               	return	
  3613  000FCE                     __end_of_SetDCPWM2:
  3614                           	opt stack 0
  3615                           tblptru	equ	0xFF8
  3616                           tblptrh	equ	0xFF7
  3617                           tblptrl	equ	0xFF6
  3618                           tablat	equ	0xFF5
  3619                           prodl	equ	0xFF3
  3620                           postinc0	equ	0xFEE
  3621                           wreg	equ	0xFE8
  3622                           status	equ	0xFD8
  3623                           
  3624 ;; *************** function _SetDCPWM1 *****************
  3625 ;; Defined at:
  3626 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1setdc.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  dutycycle       2   39[COMRAM] unsigned int 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  DCycle          2   43[COMRAM] struct PWMDC
  3631 ;; Return value:  Size  Location     Type
  3632 ;;		None               void
  3633 ;; Registers used:
  3634 ;;		wreg, status,2, status,0
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1
  3640 ;;      Params:         2       0       0
  3641 ;;      Locals:         2       0       0
  3642 ;;      Temps:          2       0       0
  3643 ;;      Totals:         6       0       0
  3644 ;;Total ram usage:        6 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; Hardware stack levels required when called:    3
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		_Runlchb100
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text18
  3655  000FCE                     __ptext18:
  3656                           	opt stack 0
  3657  000FCE                     _SetDCPWM1:
  3658                           	opt stack 26
  3659                           
  3660                           ;incstack = 0
  3661  000FCE  C028  F02A         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  3662  000FD2  C029  F02B         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  3663  000FD6  0E06               	movlw	6
  3664  000FD8                     u1005:
  3665  000FD8  90D8               	bcf	status,0,c
  3666  000FDA  362A               	rlcf	??_SetDCPWM1,f,c
  3667  000FDC  362B               	rlcf	??_SetDCPWM1+1,f,c
  3668  000FDE  2EE8               	decfsz	wreg,f,c
  3669  000FE0  D7FB               	goto	u1005
  3670  000FE2  C02A  F02C         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  3671  000FE6  C02B  F02D         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  3672  000FEA  C02D  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  3673  000FEE  C02C  F02A         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  3674  000FF2  90D8               	bcf	status,0,c
  3675  000FF4  322A               	rrcf	??_SetDCPWM1,f,c
  3676  000FF6  90D8               	bcf	status,0,c
  3677  000FF8  322A               	rrcf	??_SetDCPWM1,f,c
  3678  000FFA  0E30               	movlw	48
  3679  000FFC  162A               	andwf	??_SetDCPWM1,f,c
  3680  000FFE  50BD               	movf	4029,w,c	;volatile
  3681  001000  0BCF               	andlw	207
  3682  001002  102A               	iorwf	??_SetDCPWM1,w,c
  3683  001004  6EBD               	movwf	4029,c	;volatile
  3684  001006  0012               	return	
  3685  001008                     __end_of_SetDCPWM1:
  3686                           	opt stack 0
  3687                           tblptru	equ	0xFF8
  3688                           tblptrh	equ	0xFF7
  3689                           tblptrl	equ	0xFF6
  3690                           tablat	equ	0xFF5
  3691                           prodl	equ	0xFF3
  3692                           postinc0	equ	0xFEE
  3693                           wreg	equ	0xFE8
  3694                           status	equ	0xFD8
  3695                           
  3696 ;; *************** function _Closelchb100 *****************
  3697 ;; Defined at:
  3698 ;;		line 84 in file "lcbh100.h"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;		None
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;		None
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  2  103[COMRAM] int 
  3705 ;; Registers used:
  3706 ;;		None
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1
  3712 ;;      Params:         0       0       0
  3713 ;;      Locals:         0       0       0
  3714 ;;      Temps:          0       0       0
  3715 ;;      Totals:         0       0       0
  3716 ;;Total ram usage:        0 bytes
  3717 ;; Hardware stack levels used:    1
  3718 ;; Hardware stack levels required when called:    3
  3719 ;; This function calls:
  3720 ;;		Nothing
  3721 ;; This function is called by:
  3722 ;;		_Runlchb100
  3723 ;;		_main
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text19
  3728  001284                     __ptext19:
  3729                           	opt stack 0
  3730  001284                     _Closelchb100:
  3731                           	opt stack 26
  3732                           
  3733                           ;lcbh100.h: 85: LATAbits.LATA0 = 0;
  3734                           
  3735                           ;incstack = 0
  3736  001284  9089               	bcf	3977,0,c	;volatile
  3737                           
  3738                           ;lcbh100.h: 86: LATAbits.LATA1 = 0;
  3739  001286  9289               	bcf	3977,1,c	;volatile
  3740                           
  3741                           ;lcbh100.h: 87: LATAbits.LATA2 = 0;
  3742  001288  9489               	bcf	3977,2,c	;volatile
  3743                           
  3744                           ;lcbh100.h: 88: LATAbits.LATA3 = 0;
  3745  00128A  9689               	bcf	3977,3,c	;volatile
  3746  00128C  0012               	return	
  3747  00128E                     __end_of_Closelchb100:
  3748                           	opt stack 0
  3749                           tblptru	equ	0xFF8
  3750                           tblptrh	equ	0xFF7
  3751                           tblptrl	equ	0xFF6
  3752                           tablat	equ	0xFF5
  3753                           prodl	equ	0xFF3
  3754                           postinc0	equ	0xFEE
  3755                           wreg	equ	0xFE8
  3756                           status	equ	0xFD8
  3757                           
  3758 ;; *************** function _ReadCMPS03 *****************
  3759 ;; Defined at:
  3760 ;;		line 58 in file "cmps03.h"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;		None
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  byte            1   38[COMRAM] unsigned char 
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  1    wreg      unsigned char 
  3767 ;; Registers used:
  3768 ;;		wreg, status,2, status,0, cstack
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMRAM   BANK0   BANK1
  3774 ;;      Params:         0       0       0
  3775 ;;      Locals:         1       0       0
  3776 ;;      Temps:          0       0       0
  3777 ;;      Totals:         1       0       0
  3778 ;;Total ram usage:        1 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:    5
  3781 ;; This function calls:
  3782 ;;		_IdleI2C
  3783 ;;		_ReadI2C
  3784 ;;		_WriteI2C
  3785 ;; This function is called by:
  3786 ;;		_main
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text20
  3791  000EA4                     __ptext20:
  3792                           	opt stack 0
  3793  000EA4                     _ReadCMPS03:
  3794                           	opt stack 25
  3795                           
  3796                           ;cmps03.h: 59: unsigned char byte = 0;
  3797                           
  3798                           ;incstack = 0
  3799  000EA4  0E00               	movlw	0
  3800  000EA6  6E27               	movwf	ReadCMPS03@byte,c
  3801                           
  3802                           ;cmps03.h: 62: IdleI2C();
  3803  000EA8  EC34  F009         	call	_IdleI2C	;wreg free
  3804                           
  3805                           ;cmps03.h: 65: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  3806  000EAC  80C5               	bsf	4037,0,c	;volatile
  3807  000EAE                     l143:
  3808  000EAE  B0C5               	btfsc	4037,0,c	;volatile
  3809  000EB0  D7FE               	goto	l143
  3810                           
  3811                           ;cmps03.h: 66: IdleI2C();
  3812  000EB2  EC34  F009         	call	_IdleI2C	;wreg free
  3813                           
  3814                           ;cmps03.h: 70: WriteI2C(0xC0);
  3815  000EB6  0EC0               	movlw	192
  3816  000EB8  EC20  F007         	call	_WriteI2C
  3817                           
  3818                           ;cmps03.h: 71: IdleI2C();
  3819  000EBC  EC34  F009         	call	_IdleI2C	;wreg free
  3820                           
  3821                           ;cmps03.h: 75: WriteI2C(0x01);
  3822  000EC0  0E01               	movlw	1
  3823  000EC2  EC20  F007         	call	_WriteI2C
  3824                           
  3825                           ;cmps03.h: 76: IdleI2C();
  3826  000EC6  EC34  F009         	call	_IdleI2C	;wreg free
  3827                           
  3828                           ;cmps03.h: 79: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  3829  000ECA  82C5               	bsf	4037,1,c	;volatile
  3830  000ECC                     l146:
  3831  000ECC  B2C5               	btfsc	4037,1,c	;volatile
  3832  000ECE  D7FE               	goto	l146
  3833                           
  3834                           ;cmps03.h: 80: IdleI2C();
  3835  000ED0  EC34  F009         	call	_IdleI2C	;wreg free
  3836                           
  3837                           ;cmps03.h: 81: WriteI2C(0xC1);
  3838  000ED4  0EC1               	movlw	193
  3839  000ED6  EC20  F007         	call	_WriteI2C
  3840                           
  3841                           ;cmps03.h: 82: IdleI2C();
  3842  000EDA  EC34  F009         	call	_IdleI2C	;wreg free
  3843                           
  3844                           ;cmps03.h: 85: byte = ReadI2C();
  3845  000EDE  EC52  F008         	call	_ReadI2C	;wreg free
  3846  000EE2  6E27               	movwf	ReadCMPS03@byte,c
  3847                           
  3848                           ;cmps03.h: 88: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  3849  000EE4  8AC5               	bsf	4037,5,c	;volatile
  3850  000EE6  88C5               	bsf	4037,4,c	;volatile
  3851  000EE8                     l149:
  3852  000EE8  B8C5               	btfsc	4037,4,c	;volatile
  3853  000EEA  D7FE               	goto	l149
  3854                           
  3855                           ;cmps03.h: 90: IdleI2C();
  3856  000EEC  EC34  F009         	call	_IdleI2C	;wreg free
  3857                           
  3858                           ;cmps03.h: 93: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  3859  000EF0  84C5               	bsf	4037,2,c	;volatile
  3860  000EF2                     l152:
  3861  000EF2  B4C5               	btfsc	4037,2,c	;volatile
  3862  000EF4  D7FE               	goto	l152
  3863                           
  3864                           ;cmps03.h: 95: return (byte);
  3865  000EF6  5027               	movf	ReadCMPS03@byte,w,c
  3866  000EF8  0012               	return	
  3867  000EFA                     __end_of_ReadCMPS03:
  3868                           	opt stack 0
  3869                           tblptru	equ	0xFF8
  3870                           tblptrh	equ	0xFF7
  3871                           tblptrl	equ	0xFF6
  3872                           tablat	equ	0xFF5
  3873                           prodl	equ	0xFF3
  3874                           postinc0	equ	0xFEE
  3875                           wreg	equ	0xFE8
  3876                           status	equ	0xFD8
  3877                           
  3878 ;; *************** function _WriteI2C *****************
  3879 ;; Defined at:
  3880 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_writ.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;  data_out        1    wreg     unsigned char 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;  data_out        1   37[COMRAM] unsigned char 
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      char 
  3887 ;; Registers used:
  3888 ;;		wreg, status,2, status,0, cstack
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1
  3894 ;;      Params:         0       0       0
  3895 ;;      Locals:         1       0       0
  3896 ;;      Temps:          1       0       0
  3897 ;;      Totals:         2       0       0
  3898 ;;Total ram usage:        2 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; Hardware stack levels required when called:    4
  3901 ;; This function calls:
  3902 ;;		_IdleI2C
  3903 ;; This function is called by:
  3904 ;;		_ReadCMPS03
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text21
  3909  000E40                     __ptext21:
  3910                           	opt stack 0
  3911  000E40                     _WriteI2C:
  3912                           	opt stack 25
  3913                           
  3914                           ;incstack = 0
  3915                           ;WriteI2C@data_out stored from wreg
  3916  000E40  6E26               	movwf	WriteI2C@data_out,c
  3917  000E42  C026  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  3918  000E46  BEC6               	btfsc	4038,7,c	;volatile
  3919  000E48  D02C               	goto	l412
  3920                           
  3921                           ;	Return value of _WriteI2C is never used
  3922  000E4A  CFC6 F025          	movff	4038,??_WriteI2C	;volatile
  3923  000E4E  0E0F               	movlw	15
  3924  000E50  1625               	andwf	??_WriteI2C,f,c
  3925  000E52  5025               	movf	??_WriteI2C,w,c
  3926  000E54  0A08               	xorlw	8
  3927  000E56  B4D8               	btfsc	status,2,c
  3928  000E58  D00F               	goto	l1892
  3929  000E5A  CFC6 F025          	movff	4038,??_WriteI2C	;volatile
  3930  000E5E  0E0F               	movlw	15
  3931  000E60  1625               	andwf	??_WriteI2C,f,c
  3932  000E62  5025               	movf	??_WriteI2C,w,c
  3933  000E64  0A0B               	xorlw	11
  3934  000E66  B4D8               	btfsc	status,2,c
  3935  000E68  D007               	goto	l1892
  3936  000E6A  88C6               	bsf	4038,4,c	;volatile
  3937  000E6C                     l415:
  3938  000E6C  A69E               	btfss	3998,3,c	;volatile
  3939  000E6E  D7FE               	goto	l415
  3940  000E70  B4C7               	btfsc	4039,2,c	;volatile
  3941  000E72  D017               	goto	l412
  3942  000E74  50C7               	movf	4039,w,c	;volatile
  3943  000E76  D015               	goto	l412
  3944  000E78                     l1892:
  3945  000E78  CFC6 F025          	movff	4038,??_WriteI2C	;volatile
  3946  000E7C  0E0F               	movlw	15
  3947  000E7E  1625               	andwf	??_WriteI2C,f,c
  3948  000E80  5025               	movf	??_WriteI2C,w,c
  3949  000E82  0A08               	xorlw	8
  3950  000E84  B4D8               	btfsc	status,2,c
  3951  000E86  D008               	goto	l424
  3952  000E88  CFC6 F025          	movff	4038,??_WriteI2C	;volatile
  3953  000E8C  0E0F               	movlw	15
  3954  000E8E  1625               	andwf	??_WriteI2C,f,c
  3955  000E90  5025               	movf	??_WriteI2C,w,c
  3956  000E92  0A0B               	xorlw	11
  3957  000E94  A4D8               	btfss	status,2,c
  3958  000E96  D005               	goto	l412
  3959  000E98                     l424:
  3960  000E98  B0C7               	btfsc	4039,0,c	;volatile
  3961  000E9A  D7FE               	goto	l424
  3962  000E9C  EC34  F009         	call	_IdleI2C	;wreg free
  3963  000EA0  50C5               	movf	4037,w,c	;volatile
  3964  000EA2                     l412:
  3965  000EA2  0012               	return	
  3966  000EA4                     __end_of_WriteI2C:
  3967                           	opt stack 0
  3968                           tblptru	equ	0xFF8
  3969                           tblptrh	equ	0xFF7
  3970                           tblptrl	equ	0xFF6
  3971                           tablat	equ	0xFF5
  3972                           prodl	equ	0xFF3
  3973                           postinc0	equ	0xFEE
  3974                           wreg	equ	0xFE8
  3975                           status	equ	0xFD8
  3976                           
  3977 ;; *************** function _IdleI2C *****************
  3978 ;; Defined at:
  3979 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_idle.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;		None               void
  3986 ;; Registers used:
  3987 ;;		wreg, status,2, status,0
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMRAM   BANK0   BANK1
  3993 ;;      Params:         0       0       0
  3994 ;;      Locals:         0       0       0
  3995 ;;      Temps:          1       0       0
  3996 ;;      Totals:         1       0       0
  3997 ;;Total ram usage:        1 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; Hardware stack levels required when called:    3
  4000 ;; This function calls:
  4001 ;;		Nothing
  4002 ;; This function is called by:
  4003 ;;		_ReadCMPS03
  4004 ;;		_WriteI2C
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           	psect	text22
  4009  001268                     __ptext22:
  4010                           	opt stack 0
  4011  001268                     _IdleI2C:
  4012                           	opt stack 25
  4013  001268                     l1796:
  4014  001268  CFC5 F024          	movff	4037,??_IdleI2C	;volatile
  4015  00126C  0E1F               	movlw	31
  4016  00126E  1624               	andwf	??_IdleI2C,f,c
  4017  001270  B4D8               	btfsc	status,2,c
  4018  001272  B4C7               	btfsc	4039,2,c	;volatile
  4019  001274  D7F9               	goto	l1796
  4020  001276  0012               	return	
  4021  001278                     __end_of_IdleI2C:
  4022                           	opt stack 0
  4023                           tblptru	equ	0xFF8
  4024                           tblptrh	equ	0xFF7
  4025                           tblptrl	equ	0xFF6
  4026                           tablat	equ	0xFF5
  4027                           prodl	equ	0xFF3
  4028                           postinc0	equ	0xFEE
  4029                           wreg	equ	0xFE8
  4030                           status	equ	0xFD8
  4031                           
  4032 ;; *************** function _ReadI2C *****************
  4033 ;; Defined at:
  4034 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_read.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;		None
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;		None
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  1    wreg      unsigned char 
  4041 ;; Registers used:
  4042 ;;		wreg, status,2, status,0
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMRAM   BANK0   BANK1
  4048 ;;      Params:         0       0       0
  4049 ;;      Locals:         0       0       0
  4050 ;;      Temps:          1       0       0
  4051 ;;      Totals:         1       0       0
  4052 ;;Total ram usage:        1 bytes
  4053 ;; Hardware stack levels used:    1
  4054 ;; Hardware stack levels required when called:    3
  4055 ;; This function calls:
  4056 ;;		Nothing
  4057 ;; This function is called by:
  4058 ;;		_ReadCMPS03
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062                           	psect	text23
  4063  0010A4                     __ptext23:
  4064                           	opt stack 0
  4065  0010A4                     _ReadI2C:
  4066                           	opt stack 26
  4067                           
  4068                           ;incstack = 0
  4069  0010A4  CFC6 F024          	movff	4038,??_ReadI2C	;volatile
  4070  0010A8  0E0F               	movlw	15
  4071  0010AA  1624               	andwf	??_ReadI2C,f,c
  4072  0010AC  5024               	movf	??_ReadI2C,w,c
  4073  0010AE  0A08               	xorlw	8
  4074  0010B0  B4D8               	btfsc	status,2,c
  4075  0010B2  D007               	goto	l390
  4076  0010B4  CFC6 F024          	movff	4038,??_ReadI2C	;volatile
  4077  0010B8  0E0F               	movlw	15
  4078  0010BA  1624               	andwf	??_ReadI2C,f,c
  4079  0010BC  5024               	movf	??_ReadI2C,w,c
  4080  0010BE  0A0B               	xorlw	11
  4081  0010C0  B4D8               	btfsc	status,2,c
  4082  0010C2                     l390:
  4083  0010C2  86C5               	bsf	4037,3,c	;volatile
  4084  0010C4                     l391:
  4085  0010C4  A0C7               	btfss	4039,0,c	;volatile
  4086  0010C6  D7FE               	goto	l391
  4087  0010C8  50C9               	movf	4041,w,c	;volatile
  4088  0010CA  0012               	return	
  4089  0010CC                     __end_of_ReadI2C:
  4090                           	opt stack 0
  4091                           tblptru	equ	0xFF8
  4092                           tblptrh	equ	0xFF7
  4093                           tblptrl	equ	0xFF6
  4094                           tablat	equ	0xFF5
  4095                           prodl	equ	0xFF3
  4096                           postinc0	equ	0xFEE
  4097                           wreg	equ	0xFE8
  4098                           status	equ	0xFD8
  4099                           
  4100 ;; *************** function _Openlchb100 *****************
  4101 ;; Defined at:
  4102 ;;		line 49 in file "lcbh100.h"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;		None
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;		None
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  2  100[COMRAM] int 
  4109 ;; Registers used:
  4110 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMRAM   BANK0   BANK1
  4116 ;;      Params:         0       0       0
  4117 ;;      Locals:         0       0       0
  4118 ;;      Temps:          0       0       0
  4119 ;;      Totals:         0       0       0
  4120 ;;Total ram usage:        0 bytes
  4121 ;; Hardware stack levels used:    1
  4122 ;; Hardware stack levels required when called:    4
  4123 ;; This function calls:
  4124 ;;		_OpenPWM1
  4125 ;;		_OpenPWM2
  4126 ;;		_OpenTimer2
  4127 ;; This function is called by:
  4128 ;;		_main
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text24
  4133  00115E                     __ptext24:
  4134                           	opt stack 0
  4135  00115E                     _Openlchb100:
  4136                           	opt stack 26
  4137                           
  4138                           ;lcbh100.h: 55: ADCON1 = 0b00001111;
  4139                           
  4140                           ;incstack = 0
  4141  00115E  0E0F               	movlw	15
  4142  001160  6EC1               	movwf	4033,c	;volatile
  4143                           
  4144                           ;lcbh100.h: 61: DDRAbits.RA0 = 0;
  4145  001162  9092               	bcf	3986,0,c	;volatile
  4146                           
  4147                           ;lcbh100.h: 62: DDRAbits.RA1 = 0;
  4148  001164  9292               	bcf	3986,1,c	;volatile
  4149                           
  4150                           ;lcbh100.h: 63: DDRAbits.RA2 = 0;
  4151  001166  9492               	bcf	3986,2,c	;volatile
  4152                           
  4153                           ;lcbh100.h: 64: DDRAbits.RA3 = 0;
  4154  001168  9692               	bcf	3986,3,c	;volatile
  4155                           
  4156                           ;lcbh100.h: 70: OpenTimer2(0b01111111 & 0b11111100 & 0b10000111);
  4157  00116A  0E04               	movlw	4
  4158  00116C  ECEE  F008         	call	_OpenTimer2
  4159                           
  4160                           ;lcbh100.h: 76: OpenPWM1(0x3F);
  4161  001170  0E3F               	movlw	63
  4162  001172  EC11  F009         	call	_OpenPWM1
  4163                           
  4164                           ;lcbh100.h: 77: OpenPWM2(0x3F);
  4165  001176  0E3F               	movlw	63
  4166  001178  EC04  F008         	call	_OpenPWM2
  4167  00117C  0012               	return	
  4168  00117E                     __end_of_Openlchb100:
  4169                           	opt stack 0
  4170                           tblptru	equ	0xFF8
  4171                           tblptrh	equ	0xFF7
  4172                           tblptrl	equ	0xFF6
  4173                           tablat	equ	0xFF5
  4174                           prodl	equ	0xFF3
  4175                           postinc0	equ	0xFEE
  4176                           wreg	equ	0xFE8
  4177                           status	equ	0xFD8
  4178                           
  4179 ;; *************** function _OpenTimer2 *****************
  4180 ;; Defined at:
  4181 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t2open.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  config          1    wreg     unsigned char 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  config          1   35[COMRAM] unsigned char 
  4186 ;; Return value:  Size  Location     Type
  4187 ;;		None               void
  4188 ;; Registers used:
  4189 ;;		wreg, status,2, status,0
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1
  4195 ;;      Params:         0       0       0
  4196 ;;      Locals:         1       0       0
  4197 ;;      Temps:          0       0       0
  4198 ;;      Totals:         1       0       0
  4199 ;;Total ram usage:        1 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:    3
  4202 ;; This function calls:
  4203 ;;		Nothing
  4204 ;; This function is called by:
  4205 ;;		_Openlchb100
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           	psect	text25
  4210  0011DC                     __ptext25:
  4211                           	opt stack 0
  4212  0011DC                     _OpenTimer2:
  4213                           	opt stack 26
  4214                           
  4215                           ;incstack = 0
  4216                           ;OpenTimer2@config stored from wreg
  4217  0011DC  6E24               	movwf	OpenTimer2@config,c
  4218  0011DE  5024               	movf	OpenTimer2@config,w,c
  4219  0011E0  0BFB               	andlw	251
  4220  0011E2  6ECA               	movwf	4042,c	;volatile
  4221  0011E4  0E00               	movlw	0
  4222  0011E6  6ECC               	movwf	4044,c	;volatile
  4223  0011E8  929E               	bcf	3998,1,c	;volatile
  4224  0011EA  AE24               	btfss	OpenTimer2@config,7,c
  4225  0011EC  D002               	goto	l323
  4226  0011EE  829D               	bsf	3997,1,c	;volatile
  4227  0011F0  D001               	goto	l324
  4228  0011F2                     l323:
  4229  0011F2  929D               	bcf	3997,1,c	;volatile
  4230  0011F4                     l324:
  4231  0011F4  84CA               	bsf	4042,2,c	;volatile
  4232  0011F6  0012               	return	
  4233  0011F8                     __end_of_OpenTimer2:
  4234                           	opt stack 0
  4235                           tblptru	equ	0xFF8
  4236                           tblptrh	equ	0xFF7
  4237                           tblptrl	equ	0xFF6
  4238                           tablat	equ	0xFF5
  4239                           prodl	equ	0xFF3
  4240                           postinc0	equ	0xFEE
  4241                           wreg	equ	0xFE8
  4242                           status	equ	0xFD8
  4243                           
  4244 ;; *************** function _OpenPWM2 *****************
  4245 ;; Defined at:
  4246 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2open.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;  period          1    wreg     unsigned char 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  period          1   36[COMRAM] unsigned char 
  4251 ;;  ccp2mx          1   37[COMRAM] unsigned char 
  4252 ;;  pmmode          1    0        unsigned char 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;		None               void
  4255 ;; Registers used:
  4256 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1
  4262 ;;      Params:         0       0       0
  4263 ;;      Locals:         2       0       0
  4264 ;;      Temps:          1       0       0
  4265 ;;      Totals:         3       0       0
  4266 ;;Total ram usage:        3 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    3
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_Openlchb100
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text26
  4277  001008                     __ptext26:
  4278                           	opt stack 0
  4279  001008                     _OpenPWM2:
  4280                           	opt stack 26
  4281                           
  4282                           ;incstack = 0
  4283                           ;OpenPWM2@period stored from wreg
  4284  001008  6E25               	movwf	OpenPWM2@period,c
  4285  00100A  0E0C               	movlw	12
  4286  00100C  6EBA               	movwf	4026,c	;volatile
  4287  00100E  0E05               	movlw	5
  4288  001010  6EF6               	movwf	tblptrl,c
  4289  001012                     	if	1	;There is more than 1 active tblptr byte
  4290  001012  0E00               	movlw	0
  4291  001014  6EF7               	movwf	tblptrh,c
  4292  001016                     	endif
  4293  001016                     	if	1	;There are 3 active tblptr bytes
  4294  001016  0E30               	movlw	48
  4295  001018  6EF8               	movwf	tblptru,c
  4296  00101A                     	endif
  4297  00101A  0008               	tblrd		*
  4298  00101C  CFF5 F024          	movff	tablat,??_OpenPWM2
  4299  001020  A024               	btfss	??_OpenPWM2,0,c
  4300  001022  D002               	goto	l1830
  4301  001024  6826               	setf	OpenPWM2@ccp2mx,c
  4302  001026  D002               	goto	l271
  4303  001028                     l1830:
  4304  001028  0E00               	movlw	0
  4305  00102A  6E26               	movwf	OpenPWM2@ccp2mx,c
  4306  00102C                     l271:
  4307  00102C  5026               	movf	OpenPWM2@ccp2mx,w,c
  4308  00102E  B4D8               	btfsc	status,2,c
  4309  001030  D002               	goto	l272
  4310  001032  9294               	bcf	3988,1,c	;volatile
  4311  001034  D001               	goto	l273
  4312  001036                     l272:
  4313  001036  9693               	bcf	3987,3,c	;volatile
  4314  001038                     l273:
  4315  001038  94CA               	bcf	4042,2,c	;volatile
  4316  00103A  C025  FFCB         	movff	OpenPWM2@period,4043	;volatile
  4317  00103E  84CA               	bsf	4042,2,c	;volatile
  4318  001040  0012               	return	
  4319  001042                     __end_of_OpenPWM2:
  4320                           	opt stack 0
  4321                           tblptru	equ	0xFF8
  4322                           tblptrh	equ	0xFF7
  4323                           tblptrl	equ	0xFF6
  4324                           tablat	equ	0xFF5
  4325                           prodl	equ	0xFF3
  4326                           postinc0	equ	0xFEE
  4327                           wreg	equ	0xFE8
  4328                           status	equ	0xFD8
  4329                           
  4330 ;; *************** function _OpenPWM1 *****************
  4331 ;; Defined at:
  4332 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1open.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;  period          1    wreg     unsigned char 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  period          1   35[COMRAM] unsigned char 
  4337 ;; Return value:  Size  Location     Type
  4338 ;;		None               void
  4339 ;; Registers used:
  4340 ;;		wreg, status,2, status,0
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMRAM   BANK0   BANK1
  4346 ;;      Params:         0       0       0
  4347 ;;      Locals:         1       0       0
  4348 ;;      Temps:          0       0       0
  4349 ;;      Totals:         1       0       0
  4350 ;;Total ram usage:        1 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; Hardware stack levels required when called:    3
  4353 ;; This function calls:
  4354 ;;		Nothing
  4355 ;; This function is called by:
  4356 ;;		_Openlchb100
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           	psect	text27
  4361  001222                     __ptext27:
  4362                           	opt stack 0
  4363  001222                     _OpenPWM1:
  4364                           	opt stack 26
  4365                           
  4366                           ;incstack = 0
  4367                           ;OpenPWM1@period stored from wreg
  4368  001222  6E24               	movwf	OpenPWM1@period,c
  4369  001224  0E0C               	movlw	12
  4370  001226  12BD               	iorwf	4029,f,c	;volatile
  4371  001228  9494               	bcf	3988,2,c	;volatile
  4372  00122A  94CA               	bcf	4042,2,c	;volatile
  4373  00122C  C024  FFCB         	movff	OpenPWM1@period,4043	;volatile
  4374  001230  84CA               	bsf	4042,2,c	;volatile
  4375  001232  0012               	return	
  4376  001234                     __end_of_OpenPWM1:
  4377                           	opt stack 0
  4378                           tblptru	equ	0xFF8
  4379                           tblptrh	equ	0xFF7
  4380                           tblptrl	equ	0xFF6
  4381                           tablat	equ	0xFF5
  4382                           prodl	equ	0xFF3
  4383                           postinc0	equ	0xFEE
  4384                           wreg	equ	0xFE8
  4385                           status	equ	0xFD8
  4386                           
  4387 ;; *************** function _OpenSRF04 *****************
  4388 ;; Defined at:
  4389 ;;		line 38 in file "srf04.h"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;		None
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;		None
  4394 ;; Return value:  Size  Location     Type
  4395 ;;		None               void
  4396 ;; Registers used:
  4397 ;;		wreg, status,2, status,0, cstack
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMRAM   BANK0   BANK1
  4403 ;;      Params:         0       0       0
  4404 ;;      Locals:         0       0       0
  4405 ;;      Temps:          0       0       0
  4406 ;;      Totals:         0       0       0
  4407 ;;Total ram usage:        0 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; Hardware stack levels required when called:    4
  4410 ;; This function calls:
  4411 ;;		_OpenTimer0
  4412 ;; This function is called by:
  4413 ;;		_main
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text28
  4418  00117E                     __ptext28:
  4419                           	opt stack 0
  4420  00117E                     _OpenSRF04:
  4421                           	opt stack 26
  4422                           
  4423                           ;srf04.h: 41: ADCON1 |= 0b00001111;
  4424                           
  4425                           ;incstack = 0
  4426  00117E  0E0F               	movlw	15
  4427  001180  12C1               	iorwf	4033,f,c	;volatile
  4428                           
  4429                           ;srf04.h: 45: TRISBbits.TRISB2 = 0;
  4430  001182  9493               	bcf	3987,2,c	;volatile
  4431                           
  4432                           ;srf04.h: 46: TRISBbits.TRISB3 = 0;
  4433  001184  9693               	bcf	3987,3,c	;volatile
  4434                           
  4435                           ;srf04.h: 47: TRISBbits.TRISB4 = 1;
  4436  001186  8893               	bsf	3987,4,c	;volatile
  4437                           
  4438                           ;srf04.h: 48: TRISBbits.TRISB5 = 1;
  4439  001188  8A93               	bsf	3987,5,c	;volatile
  4440                           
  4441                           ;srf04.h: 50: OpenTimer0(0b01111111 & 0b10111111 & 0b11011111 & 0b11111111);
  4442  00118A  0E1F               	movlw	31
  4443  00118C  ECCF  F008         	call	_OpenTimer0
  4444                           
  4445                           ;srf04.h: 52: RCONbits.IPEN = 1;
  4446  001190  8ED0               	bsf	4048,7,c	;volatile
  4447                           
  4448                           ;srf04.h: 53: INTCON2bits.RBIP = 0;
  4449  001192  90F1               	bcf	intcon2,0,c	;volatile
  4450                           
  4451                           ;srf04.h: 54: INTCONbits.RBIE = 1;
  4452  001194  86F2               	bsf	intcon,3,c	;volatile
  4453                           
  4454                           ;srf04.h: 55: INTCON2bits.RBPU = 1;
  4455  001196  8EF1               	bsf	intcon2,7,c	;volatile
  4456                           
  4457                           ;srf04.h: 65: INTCONbits.GIEL = 1;
  4458  001198  8CF2               	bsf	intcon,6,c	;volatile
  4459                           
  4460                           ;srf04.h: 75: INTCONbits.GIEH = 1;
  4461  00119A  8EF2               	bsf	intcon,7,c	;volatile
  4462  00119C  0012               	return	
  4463  00119E                     __end_of_OpenSRF04:
  4464                           	opt stack 0
  4465                           tblptru	equ	0xFF8
  4466                           tblptrh	equ	0xFF7
  4467                           tblptrl	equ	0xFF6
  4468                           tablat	equ	0xFF5
  4469                           prodl	equ	0xFF3
  4470                           intcon	equ	0xFF2
  4471                           intcon2	equ	0xFF1
  4472                           postinc0	equ	0xFEE
  4473                           wreg	equ	0xFE8
  4474                           status	equ	0xFD8
  4475                           
  4476 ;; *************** function _OpenTimer0 *****************
  4477 ;; Defined at:
  4478 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t0open.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  config          1    wreg     unsigned char 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  config          1   35[COMRAM] unsigned char 
  4483 ;; Return value:  Size  Location     Type
  4484 ;;		None               void
  4485 ;; Registers used:
  4486 ;;		wreg, status,2, status,0
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1
  4492 ;;      Params:         0       0       0
  4493 ;;      Locals:         1       0       0
  4494 ;;      Temps:          0       0       0
  4495 ;;      Totals:         1       0       0
  4496 ;;Total ram usage:        1 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:    3
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_OpenSRF04
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           	psect	text29
  4507  00119E                     __ptext29:
  4508                           	opt stack 0
  4509  00119E                     _OpenTimer0:
  4510                           	opt stack 26
  4511                           
  4512                           ;incstack = 0
  4513                           ;OpenTimer0@config stored from wreg
  4514  00119E  6E24               	movwf	OpenTimer0@config,c
  4515  0011A0  5024               	movf	OpenTimer0@config,w,c
  4516  0011A2  0B7F               	andlw	127
  4517  0011A4  6ED5               	movwf	4053,c	;volatile
  4518  0011A6  0E00               	movlw	0
  4519  0011A8  6ED7               	movwf	4055,c	;volatile
  4520  0011AA  0E00               	movlw	0
  4521  0011AC  6ED6               	movwf	4054,c	;volatile
  4522  0011AE  94F2               	bcf	intcon,2,c	;volatile
  4523  0011B0  AE24               	btfss	OpenTimer0@config,7,c
  4524  0011B2  D002               	goto	l294
  4525  0011B4  8AF2               	bsf	intcon,5,c	;volatile
  4526  0011B6  D001               	goto	l295
  4527  0011B8                     l294:
  4528  0011B8  9AF2               	bcf	intcon,5,c	;volatile
  4529  0011BA                     l295:
  4530  0011BA  8ED5               	bsf	4053,7,c	;volatile
  4531  0011BC  0012               	return	
  4532  0011BE                     __end_of_OpenTimer0:
  4533                           	opt stack 0
  4534                           tblptru	equ	0xFF8
  4535                           tblptrh	equ	0xFF7
  4536                           tblptrl	equ	0xFF6
  4537                           tablat	equ	0xFF5
  4538                           prodl	equ	0xFF3
  4539                           intcon	equ	0xFF2
  4540                           intcon2	equ	0xFF1
  4541                           postinc0	equ	0xFEE
  4542                           wreg	equ	0xFE8
  4543                           status	equ	0xFD8
  4544                           
  4545 ;; *************** function _OpenCMPS03 *****************
  4546 ;; Defined at:
  4547 ;;		line 27 in file "cmps03.h"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;		None
  4552 ;; Return value:  Size  Location     Type
  4553 ;;		None               void
  4554 ;; Registers used:
  4555 ;;		wreg, status,2, status,0, cstack
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1
  4561 ;;      Params:         0       0       0
  4562 ;;      Locals:         0       0       0
  4563 ;;      Temps:          0       0       0
  4564 ;;      Totals:         0       0       0
  4565 ;;Total ram usage:        0 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:    4
  4568 ;; This function calls:
  4569 ;;		_OpenI2C
  4570 ;; This function is called by:
  4571 ;;		_main
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text30
  4576  00120E                     __ptext30:
  4577                           	opt stack 0
  4578  00120E                     _OpenCMPS03:
  4579                           	opt stack 26
  4580                           
  4581                           ;cmps03.h: 34: TRISCbits.TRISC3 = 1;
  4582                           
  4583                           ;incstack = 0
  4584  00120E  8694               	bsf	3988,3,c	;volatile
  4585                           
  4586                           ;cmps03.h: 35: TRISCbits.TRISC4 = 1;
  4587  001210  8894               	bsf	3988,4,c	;volatile
  4588                           
  4589                           ;cmps03.h: 40: SSPADD = 0x09;
  4590  001212  0E09               	movlw	9
  4591  001214  6EC8               	movwf	4040,c	;volatile
  4592                           
  4593                           ;cmps03.h: 43: OpenI2C(0b00001000, 0b10000000);
  4594  001216  0E80               	movlw	128
  4595  001218  6E24               	movwf	OpenI2C@slew,c
  4596  00121A  0E08               	movlw	8
  4597  00121C  ECDF  F008         	call	_OpenI2C
  4598  001220  0012               	return	
  4599  001222                     __end_of_OpenCMPS03:
  4600                           	opt stack 0
  4601                           tblptru	equ	0xFF8
  4602                           tblptrh	equ	0xFF7
  4603                           tblptrl	equ	0xFF6
  4604                           tablat	equ	0xFF5
  4605                           prodl	equ	0xFF3
  4606                           intcon	equ	0xFF2
  4607                           intcon2	equ	0xFF1
  4608                           postinc0	equ	0xFEE
  4609                           wreg	equ	0xFE8
  4610                           status	equ	0xFD8
  4611                           
  4612 ;; *************** function _OpenI2C *****************
  4613 ;; Defined at:
  4614 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_open.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;  sync_mode       1    wreg     unsigned char 
  4617 ;;  slew            1   35[COMRAM] unsigned char 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  sync_mode       1   36[COMRAM] unsigned char 
  4620 ;; Return value:  Size  Location     Type
  4621 ;;		None               void
  4622 ;; Registers used:
  4623 ;;		wreg, status,2, status,0
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMRAM   BANK0   BANK1
  4629 ;;      Params:         1       0       0
  4630 ;;      Locals:         1       0       0
  4631 ;;      Temps:          0       0       0
  4632 ;;      Totals:         2       0       0
  4633 ;;Total ram usage:        2 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; Hardware stack levels required when called:    3
  4636 ;; This function calls:
  4637 ;;		Nothing
  4638 ;; This function is called by:
  4639 ;;		_OpenCMPS03
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text31
  4644  0011BE                     __ptext31:
  4645                           	opt stack 0
  4646  0011BE                     _OpenI2C:
  4647                           	opt stack 26
  4648                           
  4649                           ;incstack = 0
  4650                           ;OpenI2C@sync_mode stored from wreg
  4651  0011BE  6E25               	movwf	OpenI2C@sync_mode,c
  4652  0011C0  0E3F               	movlw	63
  4653  0011C2  16C7               	andwf	4039,f,c	;volatile
  4654  0011C4  0E00               	movlw	0
  4655  0011C6  6EC6               	movwf	4038,c	;volatile
  4656  0011C8  0E00               	movlw	0
  4657  0011CA  6EC5               	movwf	4037,c	;volatile
  4658  0011CC  5025               	movf	OpenI2C@sync_mode,w,c
  4659  0011CE  12C6               	iorwf	4038,f,c	;volatile
  4660  0011D0  5024               	movf	OpenI2C@slew,w,c
  4661  0011D2  12C7               	iorwf	4039,f,c	;volatile
  4662  0011D4  8694               	bsf	3988,3,c	;volatile
  4663  0011D6  8894               	bsf	3988,4,c	;volatile
  4664  0011D8  8AC6               	bsf	4038,5,c	;volatile
  4665  0011DA  0012               	return	
  4666  0011DC                     __end_of_OpenI2C:
  4667                           	opt stack 0
  4668                           tblptru	equ	0xFF8
  4669                           tblptrh	equ	0xFF7
  4670                           tblptrl	equ	0xFF6
  4671                           tablat	equ	0xFF5
  4672                           prodl	equ	0xFF3
  4673                           intcon	equ	0xFF2
  4674                           intcon2	equ	0xFF1
  4675                           postinc0	equ	0xFEE
  4676                           wreg	equ	0xFE8
  4677                           status	equ	0xFD8
  4678                           
  4679 ;; *************** function _lowISR *****************
  4680 ;; Defined at:
  4681 ;;		line 30 in file "Main.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;		None
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;		None
  4686 ;; Return value:  Size  Location     Type
  4687 ;;		None               void
  4688 ;; Registers used:
  4689 ;;		wreg, status,2, status,0, cstack
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMRAM   BANK0   BANK1
  4695 ;;      Params:         0       0       0
  4696 ;;      Locals:         0       0       0
  4697 ;;      Temps:         17       0       0
  4698 ;;      Totals:        17       0       0
  4699 ;;Total ram usage:       17 bytes
  4700 ;; Hardware stack levels used:    1
  4701 ;; Hardware stack levels required when called:    2
  4702 ;; This function calls:
  4703 ;;		_ReadTimer0
  4704 ;;		_WriteTimer0
  4705 ;; This function is called by:
  4706 ;;		Interrupt level 1
  4707 ;; This function uses a non-reentrant model
  4708 ;;
  4709                           
  4710                           	psect	intcodelo
  4711  000018                     __pintcodelo:
  4712                           	opt stack 0
  4713  000018                     _lowISR:
  4714                           	opt stack 25
  4715                           
  4716                           ;incstack = 0
  4717  000018  CFD8 F013          	movff	status,??_lowISR
  4718  00001C  CFE8 F014          	movff	wreg,??_lowISR+1
  4719  000020  CFE0 F015          	movff	bsr,??_lowISR+2
  4720  000024  CFFA F016          	movff	pclath,??_lowISR+3
  4721  000028  CFFB F017          	movff	pclatu,??_lowISR+4
  4722  00002C  CFE9 F018          	movff	fsr0l,??_lowISR+5
  4723  000030  CFEA F019          	movff	fsr0h,??_lowISR+6
  4724  000034  CFE1 F01A          	movff	fsr1l,??_lowISR+7
  4725  000038  CFE2 F01B          	movff	fsr1h,??_lowISR+8
  4726  00003C  CFD9 F01C          	movff	fsr2l,??_lowISR+9
  4727  000040  CFDA F01D          	movff	fsr2h,??_lowISR+10
  4728  000044  CFF3 F01E          	movff	prodl,??_lowISR+11
  4729  000048  CFF4 F01F          	movff	prodh,??_lowISR+12
  4730  00004C  CFF6 F020          	movff	tblptrl,??_lowISR+13
  4731  000050  CFF7 F021          	movff	tblptrh,??_lowISR+14
  4732  000054  CFF8 F022          	movff	tblptru,??_lowISR+15
  4733  000058  CFF5 F023          	movff	tablat,??_lowISR+16
  4734                           
  4735                           ;Main.c: 32: if (INTCONbits.RBIF == 1) {
  4736  00005C  A0F2               	btfss	intcon,0,c	;volatile
  4737  00005E  D02F               	goto	i1l165
  4738                           
  4739                           ;Main.c: 34: if (PORTBbits.RB5 == 1 && PORTBbits.RB4 == 0) {
  4740  000060  BA81               	btfsc	3969,5,c	;volatile
  4741  000062  B881               	btfsc	3969,4,c	;volatile
  4742  000064  D008               	goto	i1l159
  4743                           
  4744                           ;Main.c: 35: WriteTimer0(0);
  4745  000066  0E00               	movlw	0
  4746  000068  6E10               	movwf	WriteTimer0@timer0+1,c
  4747  00006A  0E00               	movlw	0
  4748  00006C  6E0F               	movwf	WriteTimer0@timer0,c
  4749  00006E  EC1A  F009         	call	_WriteTimer0	;wreg free
  4750                           
  4751                           ;Main.c: 36: ticksRL = 2;
  4752  000072  0E02               	movlw	2
  4753  000074  D00A               	goto	L11
  4754  000076                     i1l159:
  4755                           
  4756                           ;Main.c: 39: else if (PORTBbits.RB5 == 0 && PORTBbits.RB4 == 1) {
  4757  000076  AA81               	btfss	3969,5,c	;volatile
  4758  000078  A881               	btfss	3969,4,c	;volatile
  4759  00007A  D008               	goto	i1l1476
  4760                           
  4761                           ;Main.c: 40: WriteTimer0(0);
  4762  00007C  0E00               	movlw	0
  4763  00007E  6E10               	movwf	WriteTimer0@timer0+1,c
  4764  000080  0E00               	movlw	0
  4765  000082  6E0F               	movwf	WriteTimer0@timer0,c
  4766  000084  EC1A  F009         	call	_WriteTimer0	;wreg free
  4767                           
  4768                           ;Main.c: 41: ticksRL = 1;
  4769  000088  0E01               	movlw	1
  4770  00008A                     L11:
  4771  00008A  6E5A               	movwf	_ticksRL,c	;volatile
  4772  00008C                     i1l1476:
  4773                           
  4774                           ;Main.c: 43: }
  4775                           ;Main.c: 45: if (PORTBbits.RB5 == 0 && PORTBbits.RB4 == 0) {
  4776  00008C  AA81               	btfss	3969,5,c	;volatile
  4777  00008E  B881               	btfsc	3969,4,c	;volatile
  4778  000090  D013               	goto	i1l1488
  4779                           
  4780                           ;Main.c: 46: if (ticksRL == 2)
  4781  000092  505A               	movf	_ticksRL,w,c	;volatile
  4782  000094  0A02               	xorlw	2
  4783  000096  A4D8               	btfss	status,2,c
  4784  000098  D006               	goto	i1l1484
  4785                           
  4786                           ;Main.c: 47: {
  4787                           ;Main.c: 48: ticksLeft = ReadTimer0();
  4788  00009A  EC23  F009         	call	_ReadTimer0	;wreg free
  4789  00009E  C00F  F055         	movff	?_ReadTimer0,_ticksLeft	;volatile
  4790  0000A2  C010  F056         	movff	?_ReadTimer0+1,_ticksLeft+1	;volatile
  4791  0000A6                     i1l1484:
  4792                           
  4793                           ;Main.c: 49: }
  4794                           ;Main.c: 50: if (ticksRL == 1)
  4795  0000A6  045A               	decf	_ticksRL,w,c	;volatile
  4796  0000A8  A4D8               	btfss	status,2,c
  4797  0000AA  D006               	goto	i1l1488
  4798                           
  4799                           ;Main.c: 51: {
  4800                           ;Main.c: 52: ticksRight = ReadTimer0();
  4801  0000AC  EC23  F009         	call	_ReadTimer0	;wreg free
  4802  0000B0  C00F  F057         	movff	?_ReadTimer0,_ticksRight	;volatile
  4803  0000B4  C010  F058         	movff	?_ReadTimer0+1,_ticksRight+1	;volatile
  4804  0000B8                     i1l1488:
  4805                           
  4806                           ;Main.c: 53: }
  4807                           ;Main.c: 54: }
  4808                           ;Main.c: 55: portB = PORTB;
  4809  0000B8  CF81 F059          	movff	3969,_portB	;volatile
  4810                           
  4811                           ;Main.c: 57: INTCONbits.RBIF = 0;
  4812  0000BC  90F2               	bcf	intcon,0,c	;volatile
  4813  0000BE                     i1l165:
  4814  0000BE  C023  FFF5         	movff	??_lowISR+16,tablat
  4815  0000C2  C022  FFF8         	movff	??_lowISR+15,tblptru
  4816  0000C6  C021  FFF7         	movff	??_lowISR+14,tblptrh
  4817  0000CA  C020  FFF6         	movff	??_lowISR+13,tblptrl
  4818  0000CE  C01F  FFF4         	movff	??_lowISR+12,prodh
  4819  0000D2  C01E  FFF3         	movff	??_lowISR+11,prodl
  4820  0000D6  C01D  FFDA         	movff	??_lowISR+10,fsr2h
  4821  0000DA  C01C  FFD9         	movff	??_lowISR+9,fsr2l
  4822  0000DE  C01B  FFE2         	movff	??_lowISR+8,fsr1h
  4823  0000E2  C01A  FFE1         	movff	??_lowISR+7,fsr1l
  4824  0000E6  C019  FFEA         	movff	??_lowISR+6,fsr0h
  4825  0000EA  C018  FFE9         	movff	??_lowISR+5,fsr0l
  4826  0000EE  C017  FFFB         	movff	??_lowISR+4,pclatu
  4827  0000F2  C016  FFFA         	movff	??_lowISR+3,pclath
  4828  0000F6  C015  FFE0         	movff	??_lowISR+2,bsr
  4829  0000FA  C014  FFE8         	movff	??_lowISR+1,wreg
  4830  0000FE  C013  FFD8         	movff	??_lowISR,status
  4831  000102  0010               	retfie	
  4832  000104                     __end_of_lowISR:
  4833                           	opt stack 0
  4834                           pclatu	equ	0xFFB
  4835                           pclath	equ	0xFFA
  4836                           tblptru	equ	0xFF8
  4837                           tblptrh	equ	0xFF7
  4838                           tblptrl	equ	0xFF6
  4839                           tablat	equ	0xFF5
  4840                           prodh	equ	0xFF4
  4841                           prodl	equ	0xFF3
  4842                           intcon	equ	0xFF2
  4843                           intcon2	equ	0xFF1
  4844                           postinc0	equ	0xFEE
  4845                           fsr0h	equ	0xFEA
  4846                           fsr0l	equ	0xFE9
  4847                           wreg	equ	0xFE8
  4848                           fsr1h	equ	0xFE2
  4849                           fsr1l	equ	0xFE1
  4850                           bsr	equ	0xFE0
  4851                           fsr2h	equ	0xFDA
  4852                           fsr2l	equ	0xFD9
  4853                           status	equ	0xFD8
  4854                           
  4855 ;; *************** function _WriteTimer0 *****************
  4856 ;; Defined at:
  4857 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t0write.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;  timer0          2   14[COMRAM] unsigned int 
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;  timer           2   16[COMRAM] struct Timers
  4862 ;; Return value:  Size  Location     Type
  4863 ;;		None               void
  4864 ;; Registers used:
  4865 ;;		None
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1
  4871 ;;      Params:         2       0       0
  4872 ;;      Locals:         2       0       0
  4873 ;;      Temps:          0       0       0
  4874 ;;      Totals:         4       0       0
  4875 ;;Total ram usage:        4 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; Hardware stack levels required when called:    1
  4878 ;; This function calls:
  4879 ;;		Nothing
  4880 ;; This function is called by:
  4881 ;;		_lowISR
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           	psect	text33
  4886  001234                     __ptext33:
  4887                           	opt stack 0
  4888  001234                     _WriteTimer0:
  4889                           	opt stack 25
  4890                           
  4891                           ;incstack = 0
  4892  001234  C00F  F011         	movff	WriteTimer0@timer0,WriteTimer0@timer
  4893  001238  C010  F012         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  4894  00123C  C012  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  4895  001240  C011  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  4896  001244  0012               	return	
  4897  001246                     __end_of_WriteTimer0:
  4898                           	opt stack 0
  4899                           pclatu	equ	0xFFB
  4900                           pclath	equ	0xFFA
  4901                           tblptru	equ	0xFF8
  4902                           tblptrh	equ	0xFF7
  4903                           tblptrl	equ	0xFF6
  4904                           tablat	equ	0xFF5
  4905                           prodh	equ	0xFF4
  4906                           prodl	equ	0xFF3
  4907                           intcon	equ	0xFF2
  4908                           intcon2	equ	0xFF1
  4909                           postinc0	equ	0xFEE
  4910                           fsr0h	equ	0xFEA
  4911                           fsr0l	equ	0xFE9
  4912                           wreg	equ	0xFE8
  4913                           fsr1h	equ	0xFE2
  4914                           fsr1l	equ	0xFE1
  4915                           bsr	equ	0xFE0
  4916                           fsr2h	equ	0xFDA
  4917                           fsr2l	equ	0xFD9
  4918                           status	equ	0xFD8
  4919                           
  4920 ;; *************** function _ReadTimer0 *****************
  4921 ;; Defined at:
  4922 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t0read.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;		None
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;  timer           2   16[COMRAM] struct Timers
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  2   14[COMRAM] unsigned int 
  4929 ;; Registers used:
  4930 ;;		None
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMRAM   BANK0   BANK1
  4936 ;;      Params:         2       0       0
  4937 ;;      Locals:         2       0       0
  4938 ;;      Temps:          0       0       0
  4939 ;;      Totals:         4       0       0
  4940 ;;Total ram usage:        4 bytes
  4941 ;; Hardware stack levels used:    1
  4942 ;; Hardware stack levels required when called:    1
  4943 ;; This function calls:
  4944 ;;		Nothing
  4945 ;; This function is called by:
  4946 ;;		_lowISR
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text34
  4951  001246                     __ptext34:
  4952                           	opt stack 0
  4953  001246                     _ReadTimer0:
  4954                           	opt stack 25
  4955                           
  4956                           ;incstack = 0
  4957  001246  CFD6 F011          	movff	4054,ReadTimer0@timer	;volatile
  4958  00124A  CFD7 F012          	movff	4055,ReadTimer0@timer+1	;volatile
  4959  00124E  C011  F00F         	movff	ReadTimer0@timer,?_ReadTimer0
  4960  001252  C012  F010         	movff	ReadTimer0@timer+1,?_ReadTimer0+1
  4961  001256  0012               	return	
  4962  001258                     __end_of_ReadTimer0:
  4963                           	opt stack 0
  4964                           pclatu	equ	0xFFB
  4965                           pclath	equ	0xFFA
  4966                           tblptru	equ	0xFF8
  4967                           tblptrh	equ	0xFF7
  4968                           tblptrl	equ	0xFF6
  4969                           tablat	equ	0xFF5
  4970                           prodh	equ	0xFF4
  4971                           prodl	equ	0xFF3
  4972                           intcon	equ	0xFF2
  4973                           intcon2	equ	0xFF1
  4974                           postinc0	equ	0xFEE
  4975                           fsr0h	equ	0xFEA
  4976                           fsr0l	equ	0xFE9
  4977                           wreg	equ	0xFE8
  4978                           fsr1h	equ	0xFE2
  4979                           fsr1l	equ	0xFE1
  4980                           bsr	equ	0xFE0
  4981                           fsr2h	equ	0xFDA
  4982                           fsr2l	equ	0xFD9
  4983                           status	equ	0xFD8
  4984                           
  4985 ;; *************** function _highISR *****************
  4986 ;; Defined at:
  4987 ;;		line 69 in file "Main.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;		None
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;		None
  4992 ;; Return value:  Size  Location     Type
  4993 ;;		None               void
  4994 ;; Registers used:
  4995 ;;		status,2, status,0
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMRAM   BANK0   BANK1
  5001 ;;      Params:         0       0       0
  5002 ;;      Locals:         0       0       0
  5003 ;;      Temps:         14       0       0
  5004 ;;      Totals:        14       0       0
  5005 ;;Total ram usage:       14 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; This function calls:
  5008 ;;		Nothing
  5009 ;; This function is called by:
  5010 ;;		Interrupt level 2
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	intcode
  5015  000008                     __pintcode:
  5016                           	opt stack 0
  5017  000008                     _highISR:
  5018                           	opt stack 25
  5019                           
  5020                           ;incstack = 0
  5021  000008  CFFA F001          	movff	pclath,??_highISR
  5022  00000C  CFFB F002          	movff	pclatu,??_highISR+1
  5023  000010  CFE9 F003          	movff	fsr0l,??_highISR+2
  5024  000014  EFE8  F006         	goto	int_func
  5025                           pclatu	equ	0xFFB
  5026                           pclath	equ	0xFFA
  5027                           tblptru	equ	0xFF8
  5028                           tblptrh	equ	0xFF7
  5029                           tblptrl	equ	0xFF6
  5030                           tablat	equ	0xFF5
  5031                           prodh	equ	0xFF4
  5032                           prodl	equ	0xFF3
  5033                           intcon	equ	0xFF2
  5034                           intcon2	equ	0xFF1
  5035                           postinc0	equ	0xFEE
  5036                           fsr0h	equ	0xFEA
  5037                           fsr0l	equ	0xFE9
  5038                           wreg	equ	0xFE8
  5039                           fsr1h	equ	0xFE2
  5040                           fsr1l	equ	0xFE1
  5041                           bsr	equ	0xFE0
  5042                           fsr2h	equ	0xFDA
  5043                           fsr2l	equ	0xFD9
  5044                           status	equ	0xFD8
  5045                           
  5046                           	psect	intcode_body
  5047  000DD0                     __pintcode_body:
  5048                           	opt stack 25
  5049  000DD0                     int_func:
  5050                           	opt stack 25
  5051  000DD0  CFEA F004          	movff	fsr0h,??_highISR+3
  5052  000DD4  CFE1 F005          	movff	fsr1l,??_highISR+4
  5053  000DD8  CFE2 F006          	movff	fsr1h,??_highISR+5
  5054  000DDC  CFD9 F007          	movff	fsr2l,??_highISR+6
  5055  000DE0  CFDA F008          	movff	fsr2h,??_highISR+7
  5056  000DE4  CFF3 F009          	movff	prodl,??_highISR+8
  5057  000DE8  CFF4 F00A          	movff	prodh,??_highISR+9
  5058  000DEC  CFF6 F00B          	movff	tblptrl,??_highISR+10
  5059  000DF0  CFF7 F00C          	movff	tblptrh,??_highISR+11
  5060  000DF4  CFF8 F00D          	movff	tblptru,??_highISR+12
  5061  000DF8  CFF5 F00E          	movff	tablat,??_highISR+13
  5062                           
  5063                           ;Main.c: 70: if (1 == PIR2bits.TMR3IF) {
  5064  000DFC  A2A1               	btfss	4001,1,c	;volatile
  5065  000DFE  D002               	goto	i2l1496
  5066                           
  5067                           ;Main.c: 71: tick_units++;
  5068  000E00  4A53               	infsnz	_tick_units,f,c	;volatile
  5069  000E02  2A54               	incf	_tick_units+1,f,c	;volatile
  5070  000E04                     i2l1496:
  5071                           
  5072                           ;Main.c: 72: }
  5073                           ;Main.c: 73: PIR2bits.TMR3IF = 0;
  5074  000E04  92A1               	bcf	4001,1,c	;volatile
  5075  000E06  C00E  FFF5         	movff	??_highISR+13,tablat
  5076  000E0A  C00D  FFF8         	movff	??_highISR+12,tblptru
  5077  000E0E  C00C  FFF7         	movff	??_highISR+11,tblptrh
  5078  000E12  C00B  FFF6         	movff	??_highISR+10,tblptrl
  5079  000E16  C00A  FFF4         	movff	??_highISR+9,prodh
  5080  000E1A  C009  FFF3         	movff	??_highISR+8,prodl
  5081  000E1E  C008  FFDA         	movff	??_highISR+7,fsr2h
  5082  000E22  C007  FFD9         	movff	??_highISR+6,fsr2l
  5083  000E26  C006  FFE2         	movff	??_highISR+5,fsr1h
  5084  000E2A  C005  FFE1         	movff	??_highISR+4,fsr1l
  5085  000E2E  C004  FFEA         	movff	??_highISR+3,fsr0h
  5086  000E32  C003  FFE9         	movff	??_highISR+2,fsr0l
  5087  000E36  C002  FFFB         	movff	??_highISR+1,pclatu
  5088  000E3A  C001  FFFA         	movff	??_highISR,pclath
  5089  000E3E  0011               	retfie		f
  5090  000E40                     __end_of_highISR:
  5091                           	opt stack 0
  5092  0000                     pclatu	equ	0xFFB
  5093                           pclath	equ	0xFFA
  5094                           tblptru	equ	0xFF8
  5095                           tblptrh	equ	0xFF7
  5096                           tblptrl	equ	0xFF6
  5097                           tablat	equ	0xFF5
  5098                           prodh	equ	0xFF4
  5099                           prodl	equ	0xFF3
  5100                           intcon	equ	0xFF2
  5101                           intcon2	equ	0xFF1
  5102                           postinc0	equ	0xFEE
  5103                           fsr0h	equ	0xFEA
  5104                           fsr0l	equ	0xFE9
  5105                           wreg	equ	0xFE8
  5106                           fsr1h	equ	0xFE2
  5107                           fsr1l	equ	0xFE1
  5108                           bsr	equ	0xFE0
  5109                           fsr2h	equ	0xFDA
  5110                           fsr2l	equ	0xFD9
  5111                           status	equ	0xFD8
  5112                           pclatu	equ	0xFFB
  5113                           pclath	equ	0xFFA
  5114                           tblptru	equ	0xFF8
  5115                           tblptrh	equ	0xFF7
  5116                           tblptrl	equ	0xFF6
  5117                           tablat	equ	0xFF5
  5118                           prodh	equ	0xFF4
  5119                           prodl	equ	0xFF3
  5120                           intcon	equ	0xFF2
  5121                           intcon2	equ	0xFF1
  5122                           postinc0	equ	0xFEE
  5123                           fsr0h	equ	0xFEA
  5124                           fsr0l	equ	0xFE9
  5125                           wreg	equ	0xFE8
  5126                           fsr1h	equ	0xFE2
  5127                           fsr1l	equ	0xFE1
  5128                           bsr	equ	0xFE0
  5129                           fsr2h	equ	0xFDA
  5130                           fsr2l	equ	0xFD9
  5131                           status	equ	0xFD8
  5132                           
  5133                           	psect	rparam
  5134  0000                     pclatu	equ	0xFFB
  5135                           pclath	equ	0xFFA
  5136                           tblptru	equ	0xFF8
  5137                           tblptrh	equ	0xFF7
  5138                           tblptrl	equ	0xFF6
  5139                           tablat	equ	0xFF5
  5140                           prodh	equ	0xFF4
  5141                           prodl	equ	0xFF3
  5142                           intcon	equ	0xFF2
  5143                           intcon2	equ	0xFF1
  5144                           postinc0	equ	0xFEE
  5145                           fsr0h	equ	0xFEA
  5146                           fsr0l	equ	0xFE9
  5147                           wreg	equ	0xFE8
  5148                           fsr1h	equ	0xFE2
  5149                           fsr1l	equ	0xFE1
  5150                           bsr	equ	0xFE0
  5151                           fsr2h	equ	0xFDA
  5152                           fsr2l	equ	0xFD9
  5153                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     82      90
    BANK0           128     39      39
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_custom_delay
    _delay_s->_Delay10KTCYx
    _delay_ms->_Delay10KTCYx
    _custom_delay->___fttol
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _Runlchb100->_SetDCPWM1
    _Runlchb100->_SetDCPWM2
    _SetDCPWM2->_abs
    _SetDCPWM1->_abs
    _ReadCMPS03->_WriteI2C
    _WriteI2C->_IdleI2C
    _Openlchb100->_OpenPWM2
    _OpenSRF04->_OpenTimer0
    _OpenCMPS03->_OpenI2C

Critical Paths under _lowISR in COMRAM

    _lowISR->_ReadTimer0
    _lowISR->_WriteTimer0

Critical Paths under _highISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _lowISR in BANK0

    None.

Critical Paths under _highISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _lowISR in BANK1

    None.

Critical Paths under _highISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    34      5   12166
                                              0 BANK0     39    34      5
                       _Closelchb100
                         _OpenCMPS03
                          _OpenSRF04
                        _Openlchb100
                         _ReadCMPS03
                         _Runlchb100
                   _TriggerLeftSRF04
                  _TriggerRightSRF04
                           ___awtoft
                            ___ftmul
                            ___fttol
                            ___lwdiv
                       _custom_delay
                           _delay_ms
                            _delay_s
                            _openLED
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _setLED                                               1     1      0      22
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _openLED                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              2     0      2     150
                                             37 COMRAM     2     0      2
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             4     2      2     150
                                             37 COMRAM     4     2      2
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     2      0      22
                                             35 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _custom_delay                                         5     3      2    1234
                                             77 COMRAM     5     3      2
                        _Delay10TCYx
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _Delay10TCYx                                          1     1      0      22
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     374
                                             35 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     305
                                             62 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2119
                                             47 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1751
                                             43 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1607
                                             35 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _TriggerRightSRF04                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TriggerLeftSRF04                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Runlchb100                                           4     0      4    2118
                                             45 COMRAM     4     0      4
                       _Closelchb100
                          _SetDCPWM1
                          _SetDCPWM2
                                _abs
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     172
                                             35 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM2                                            6     4      2     121
                                             39 COMRAM     6     4      2
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM1                                            6     4      2     121
                                             39 COMRAM     6     4      2
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (2) _Closelchb100                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadCMPS03                                           1     1      0      46
                                             38 COMRAM     1     1      0
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      22
                                             36 COMRAM     2     2      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (3) _IdleI2C                                              1     1      0       0
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Openlchb100                                          0     0      0     112
                           _OpenPWM1
                           _OpenPWM2
                         _OpenTimer2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      44
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM2                                             4     4      0      46
                                             35 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM1                                             1     1      0      22
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenSRF04                                            0     0      0      44
                         _OpenTimer0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      44
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenCMPS03                                           0     0      0      97
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1      97
                                             35 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _lowISR                                              17    17      0     161
                                             18 COMRAM    17    17      0
                         _ReadTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (5) _WriteTimer0                                          4     2      2     131
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _ReadTimer0                                           4     2      2      30
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _highISR                                             14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Closelchb100
   _OpenCMPS03
     _OpenI2C
   _OpenSRF04
     _OpenTimer0
   _Openlchb100
     _OpenPWM1
     _OpenPWM2
     _OpenTimer2
   _ReadCMPS03
     _IdleI2C
     _ReadI2C
     _WriteI2C
       _IdleI2C
   _Runlchb100
     _Closelchb100
     _SetDCPWM1
       _abs (ARG)
     _SetDCPWM2
       _abs (ARG)
     _abs
   _TriggerLeftSRF04
   _TriggerRightSRF04
   ___awtoft
     ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   ___lwdiv
   _custom_delay
     _Delay10TCYx
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _delay_ms
     _Delay10KTCYx
   _delay_s
     _Delay10KTCYx
   _openLED
   _setLED

 _lowISR (ROOT)
   _ReadTimer0
   _WriteTimer0

 _highISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     27      27       4       30.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     52      5A       1       70.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      81       7        0.0%
DATA                 0      0      81       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Apr 13 10:34:34 2015

               _SSPSTATbits 000FC7                 __CFG_BOR$ON 000000                          bsr 000FE0  
              __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000                __CFG_CP2$OFF 000000  
              __CFG_CP3$OFF 000000                 __CFG_OSC$HS 000000                         l107 0C88  
                       l143 0EAE                         l152 0EF2                         l146 0ECC  
                       l323 11F2                         l324 11F4                         l412 0EA2  
                       l149 0EE8                         l271 102C                         l415 0E6C  
                       l272 1036                         l424 0E98                         l273 1038  
                       l294 11B8                         l390 10C2                         l295 11BA  
                       l391 10C4                         l478 1070                         l479 1078  
                       l665 125A                         l658 11FA                         l755 0DCE  
                       l839 0BA2                         l961 0F42                         l859 0C76  
              __CFG_CPB$OFF 000000                         _PR2 000FCB                __CFG_CPD$OFF 000000  
      __size_of_WriteTimer0 0012                         _abs 1042                __CFG_BORV$42 000000  
                       wreg 000FE8             ReadTimer0@timer 0011                __CFG_LVP$OFF 000000  
              __CFG_WDT$OFF 000000                        ?_abs 0024                        l2100 0B32  
                      l2110 0B5A                        l2104 0B42                        l2130 0F70  
                      l2114 0B6A                        l2140 0BBE                        l2080 0ADA  
                      l2072 108E                        l2170 0C4C                        l2162 0C28  
                      l2172 0C50                        l2068 1084                        l2086 0B00  
                      l2158 0C18                        l2190 0F1C                        l2176 0C66  
                      l2168 0C40                        l2186 0F10                        l2188 0F18  
                      l2620 0354                        l2612 0324                        l1830 1028  
                      l2198 0F38                        l1920 0D38                        l2640 03BE  
                      l2714 06B0                        l2642 03C2                        l2626 037A  
                      l1932 0D84                        l1924 0D46                        l2804 0A7C  
                      l2660 0440                        l2644 03CA                        l2652 03E2  
                      l2636 03A8                        l1934 0DA2                        l1926 0D50  
                      l2734 079C                        l2670 046C                        l2646 03D2  
                      l2654 041E                        l2574 01A4                        l1936 0DAC  
                      l1928 0D6E                        l2760 0870                        l2648 03DA  
                      l2592 0296                        l2576 01B4                        l2808 0A80  
                      l2754 084A                        l2594 029A                        l2586 01FA  
                      l1796 1268                        l1892 0E78                        l2692 058E  
                      l2860 0412                        l2588 0200                        l1992 0CC6  
                      l2768 08A2                        l1986 0CA6                        l2786 0990  
                      l2858 0400                        l1998 0CF6                        _DDRD 000F95  
                      u1005 0FD8                        u1015 0F9E                        u2107 1106  
                      u1411 0BB4                        u2027 1200                        u2117 110E  
                      u1341 0AD0                        u2037 125C                        u1430 0BDC  
                      u2047 10D0                        _LATD 000F8C                        u2057 10D8  
                      u1361 0AEA                        u1370 0AF2                        u2067 10E0  
                      u1435 0BD4                        u1460 0C2E                        u2077 10E8  
                      u2087 10F6                        u2097 10FE                        u1920 03BA  
                      _TMR2 000FCC                __CFG_PWRT$ON 000000                        abs@a 0024  
               main@rightCM 009B                        _main 0108                ___ftpack@arg 0024  
              ___ftpack@exp 0027                        fsr0h 000FEA                        fsr1h 000FE2  
                      fsr0l 000FE9                        fsr2h 000FDA                        fsr1l 000FE1  
                      fsr2l 000FD9                        pclat 000FFA                        prodh 000FF4  
                      prodl 000FF3                        start 0104               __CFG_PBAD$DIG 000000  
             __CFG_FSCM$OFF 000000               __CFG_IESO$OFF 000000             __end_of_IdleI2C 1278  
__size_of_TriggerRightSRF04 0026               __CFG_MCLRE$ON 000000                ___ftmul@cntr 003D  
              ___ftmul@sign 003E             __end_of_ReadI2C 10CC                 _Delay10TCYx 1258  
           __end_of_OpenI2C 11DC                ___fttol@exp1 004D                       ??_abs 0026  
              ___fttol@lval 0049              __CFG_CCP2MX$ON 000000                       ?_main 0080  
           __end_of___ftmul 0BA4                       _T0CON 000FD5             __end_of___fttol 0C78  
                     _T2CON 000FCA                       _T3CON 000FB1              __CFG_DEBUG$OFF 000000  
           __end_of___lwdiv 0F4C                       i1l165 00BE                       i1l159 0076  
                     _TMR0H 000FD7                       _TMR0L 000FD6                       _TMR3H 000FB3  
                     _TMR3L 000FB2                       _PORTB 000F81        main@intended_bearing 008D  
     __size_of_Delay10KTCYx 0016             __end_of_delay_s 1284               __CFG_WRT0$OFF 000000  
             __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000  
           __end_of_highISR 0E40              __CFG_EBTR0$OFF 000000              __CFG_EBTR1$OFF 000000  
            __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000               __CFG_STVR$OFF 000000  
             __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000  
            __CFG_EBTRB$OFF 000000               ___awtoft@sign 002F               ___ftpack@sign 0028  
                     _portB 0059             __end_of_openLED 129C                       tablat 000FF5  
                _ReadCMPS03 0EA4                       status 000FD8             __initialization 1118  
              __end_of_main 0AC0                  _ReadTimer0 1246                _Delay10KTCYx 11F8  
   main@allowed_error_dodge 009E        __end_of_Closelchb100 128E            __end_of_OpenPWM1 1234  
          __end_of_OpenPWM2 1042                      ??_main 0085               ___fttol@sign1 0048  
             __activetblptr 000003                  _OpenCMPS03 120E         main@current_bearing 00A4  
                    _ADCON1 000FC1               ??_Openlchb100 0027                      _CCPR1L 000FBE  
                    _CCPR2L 000FBB            __end_of_WriteI2C 0EA4            __end_of___awtoft 0F94  
          __end_of___ftpack 0DD0                 OpenI2C@slew 0024                      i1l1484 00A6  
                    i1l1476 008C                      i1l1488 00B8                  _OpenTimer0 119E  
                _OpenTimer2 11DC                      i2l1496 0E04                   ??_IdleI2C 0024  
     main@travel_time_dodge 0093          __size_of_SetDCPWM1 003A          __size_of_SetDCPWM2 003A  
                    _SSPADD 000FC8                      _SSPBUF 000FC9                   ??_ReadI2C 0024  
          __end_of_delay_ms 115E                   ??_OpenI2C 0025   __size_of_TriggerLeftSRF04 0026  
        __size_of_OpenSRF04 0020                   ??___ftmul 0036                   ??___fttol 0043  
          OpenTimer0@config 0024                   ??___lwdiv 0028         main@motor_tick_rate 00A2  
                    _lowISR 0018                      _setLED 128E            OpenTimer2@config 0024  
                    clear_0 111E               ?_custom_delay 004E                   ??_delay_s 0028  
               setLED@value 0024                   ??_highISR 0001       ___ftmul@f3_as_product 003A  
              __pdataCOMRAM 005A                   ??_openLED 0024                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                  _Runlchb100 0C78  
               ?_ReadCMPS03 0001                  __accesstop 0080     __end_of__initialization 1136  
       __end_of_Openlchb100 117E                  ___awtoft@c 002C              ReadCMPS03@byte 0027  
                ___ftmul@f1 0030                  ___ftmul@f2 0033                  ___fttol@f1 003F  
            __pcstackCOMRAM 0001                 ?_ReadTimer0 000F              ??_custom_delay 0050  
         __end_of_SetDCPWM1 1008           __end_of_SetDCPWM2 0FCE                 ?_OpenCMPS03 0001  
        main@bearing_adjust 008F    main@allowed_error_normal 0090           __end_of_OpenSRF04 119E  
               ?_OpenTimer0 0001                 ?_OpenTimer2 0001                   ?_OpenPWM1 0001  
                 ?_OpenPWM2 0001       __size_of_Closelchb100 000A                ?_Delay10TCYx 0001  
                   _CCP1CON 000FBD                     _CCP2CON 000FBA            WriteTimer0@timer 0011  
                   ?_lowISR 0001                     ?_setLED 0001               ??_WriteTimer0 0011  
                 ?_WriteI2C 0001                   ?___awtoft 002C                   ?___ftpack 0024  
       __size_of_ReadCMPS03 0056              Runlchb100@port 0030         Runlchb100@starboard 002E  
                 ?_delay_ms 0026                     _SSPCON1 000FC6                     _SSPCON2 000FC5  
                   _SSPSTAT 000FC7                 _Openlchb100 115E                 ?_Runlchb100 002E  
       __size_of_ReadTimer0 0012                     _IdleI2C 1268                _Closelchb100 1284  
                   _ReadI2C 10A4                  ??_OpenPWM1 0024                  ??_OpenPWM2 0024  
                   _OpenI2C 11BE         __size_of_OpenCMPS03 0014     main@right_turn_distance 0092  
                   __Hparam 0000            _TriggerLeftSRF04 10F2                     __Lparam 0000  
 main@bearing_adjust_amount 0091                     ___ftmul 0AC0                     ___fttol 0BA4  
                   ___lwdiv 0EFA                     __pcinit 1118                  ??_WriteI2C 0025  
                ??___awtoft 002F             __size_of_lowISR 00EC                  ??___ftpack 0029  
           __size_of_setLED 0008                     _delay_s 1278             Delay10TCYx@unit 0024  
                   __ramtop 0200         __size_of_OpenTimer0 0020         __size_of_OpenTimer2 001C  
                   _highISR 0008                     __ptext0 0108                     __ptext1 128E  
                   __ptext2 1296                     __ptext3 1278                     __ptext4 113C  
                   __ptext5 11F8                     __ptext6 107A                     __ptext7 1258  
                   __ptext8 0EFA                     __ptext9 0BA4                   _T0CONbits 000FD5  
                 _T2CONbits 000FCA                __size_of_abs 0038                   _T3CONbits 000FB1  
                   _openLED 1296         __end_of_WriteTimer0 1246                  ??_delay_ms 0028  
                   _ticksRL 005A        main@motor_speed_left 00A5              __pintcode_body 0DD0  
      end_of_initialization 1136        __end_of_custom_delay 10A4                     int_func 0DD0  
                _tick_units 0053                  _ticksRight 0057       main@adjusted_intended 00A3  
                   postinc0 000FEE         __size_of_Runlchb100 00B0                   _PORTBbits 000F81  
 main@travel_time_all_clear 0095                   _TRISBbits 000F93                   _TRISCbits 000F94  
              ??_ReadCMPS03 0027                  main@leftCM 0099           main@dodge_bearing 008C  
               ___ftmul@exp 0039                ??_ReadTimer0 0011        __size_of_Delay10TCYx 0010  
             __pidataCOMRAM 129C                 _WriteTimer0 1234              __end_of_lowISR 0104  
            __end_of_setLED 1296      main@left_turn_distance 008E                ??_OpenCMPS03 0026  
        __end_of_ReadCMPS03 0EFA         start_initialization 1118                   _SetDCPWM1 0FCE  
                 _SetDCPWM2 0F94             SetDCPWM1@DCycle 002C                 __end_of_abs 107A  
           SetDCPWM2@DCycle 002C            WriteI2C@data_out 0026                ??_OpenTimer0 0024  
              ??_OpenTimer2 0024          __end_of_ReadTimer0 1258                   _OpenSRF04 117E  
           main@degree_turn 0097          __end_of_OpenCMPS03 1222           __size_of_OpenPWM1 0012  
         __size_of_OpenPWM2 003A                    ??_lowISR 0013                    ??_setLED 0024  
        __end_of_OpenTimer0 11BE          __end_of_OpenTimer2 11F8           __size_of_WriteI2C 0064  
         __size_of___awtoft 0048           __size_of___ftpack 00A8                 __pbssCOMRAM 0053  
             __pcstackBANK0 0080    __end_of_TriggerLeftSRF04 1118                  ?_SetDCPWM1 0028  
                ?_SetDCPWM2 0028       __size_of_custom_delay 002A                ?_Openlchb100 0001  
         __size_of_delay_ms 0022                ??_Runlchb100 0032                  ?_OpenSRF04 0001  
                  ?_IdleI2C 0001                    ?_ReadI2C 0001                    ?_OpenI2C 0024  
          ___lwdiv@dividend 0024                   __pintcode 0008                    ?___ftmul 0030  
                  ?___fttol 003F               ?_Delay10KTCYx 0001                    ?___lwdiv 0024  
               __pintcodelo 0018                    ?_delay_s 0026                _custom_delay 107A  
                  ?_highISR 0001          __end_of_Runlchb100 0D28           WriteTimer0@timer0 000F  
                  ?_openLED 0001            ___lwdiv@quotient 0028                    _DDRAbits 000F92  
                  _LATAbits 000F89                    _LATBbits 000F8A                   delay_ms@x 0026  
                  _IPR2bits 000FA2                    _PIE1bits 000F9D                    _PIE2bits 000FA0  
                  _PIR1bits 000F9E                    _PIR2bits 000FA1                   _ticksLeft 0055  
                  _RCONbits 000FD0              ??_Delay10KTCYx 0024                   main@state 009D  
               ??_SetDCPWM1 002A                 ??_SetDCPWM2 002A            Delay10KTCYx@unit 0025  
               _INTCON2bits 000FF1                 ??_OpenSRF04 0025            OpenI2C@sync_mode 0025  
        SetDCPWM1@dutycycle 0028            __size_of_IdleI2C 0010                    _OpenPWM1 1222  
                  _OpenPWM2 1008            __size_of_ReadI2C 0028                    __Hrparam 0000  
          __size_of_OpenI2C 001E                    __Lrparam 0000          SetDCPWM2@dutycycle 0028  
          __size_of___ftmul 00E4            __size_of___fttol 00D4            __size_of___lwdiv 0052  
                  _WriteI2C 0E40                ?_WriteTimer0 000F                    ___awtoft 0F4C  
                  ___ftpack 0D28              OpenPWM2@ccp2mx 0026            __size_of_delay_s 000C  
          __size_of_highISR 0E38      main@detection_distance 009F              OpenPWM1@period 0024  
            OpenPWM2@period 0025                    _delay_ms 113C             ___lwdiv@divisor 0026  
          __size_of_openLED 0006             ___lwdiv@counter 002A                    __ptext10 0AC0  
                  __ptext11 0F4C                    __ptext20 0EA4                    __ptext12 0D28  
                  __ptext21 0E40                    __ptext13 10CC                    __ptext30 120E  
                  __ptext22 1268                    __ptext14 10F2                    __ptext31 11BE  
                  __ptext23 10A4                    __ptext15 0C78                    __ptext24 115E  
                  __ptext16 1042                    __ptext33 1234                    __ptext25 11DC  
                  __ptext17 0F94                    __ptext34 1246                    __ptext26 1008  
                  __ptext18 0FCE                    __ptext27 1222                    __ptext19 1284  
                  __ptext28 117E                    __ptext29 119E        __size_of_Openlchb100 0020  
             __size_of_main 09B8                    delay_s@x 0026               ??_Delay10TCYx 0024  
         _TriggerRightSRF04 10CC                    main@argc 0080                    main@argv 0082  
                  main@lane 00A0          ?_TriggerRightSRF04 0001       main@motor_speed_right 00A6  
                _INTCONbits 000FF2         ??_TriggerRightSRF04 0024      custom_delay@iterations 004E  
         ?_TriggerLeftSRF04 0001        __end_of_Delay10KTCYx 120E          ??_TriggerLeftSRF04 0024  
                  intlevel1 0000                    intlevel2 0000               ?_Closelchb100 0001  
 __end_of_TriggerRightSRF04 10F2         __end_of_Delay10TCYx 1268                 _SSPCON1bits 000FC6  
               _SSPCON2bits 000FC5              ??_Closelchb100 0024               custom_delay@i 0051  
