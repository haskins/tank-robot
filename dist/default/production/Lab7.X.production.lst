

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Mar 30 11:06:56 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4320
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    30  0000                     _ADCON1	set	4033
    31  0000                     _CCP1CON	set	4029
    32  0000                     _CCP2CON	set	4026
    33  0000                     _CCPR1L	set	4030
    34  0000                     _CCPR2L	set	4027
    35  0000                     _DDRAbits	set	3986
    36  0000                     _DDRD	set	3989
    37  0000                     _INTCONbits	set	4082
    38  0000                     _IPR2bits	set	4002
    39  0000                     _LATAbits	set	3977
    40  0000                     _LATD	set	3980
    41  0000                     _PIE1bits	set	3997
    42  0000                     _PIE2bits	set	4000
    43  0000                     _PIR1bits	set	3998
    44  0000                     _PIR2bits	set	4001
    45  0000                     _PR2	set	4043
    46  0000                     _RCONbits	set	4048
    47  0000                     _SSPADD	set	4040
    48  0000                     _SSPBUF	set	4041
    49  0000                     _SSPCON1	set	4038
    50  0000                     _SSPCON1bits	set	4038
    51  0000                     _SSPCON2	set	4037
    52  0000                     _SSPCON2bits	set	4037
    53  0000                     _SSPSTAT	set	4039
    54  0000                     _SSPSTATbits	set	4039
    55  0000                     _T2CON	set	4042
    56  0000                     _T2CONbits	set	4042
    57  0000                     _T3CON	set	4017
    58  0000                     _T3CONbits	set	4017
    59  0000                     _TMR2	set	4044
    60  0000                     _TMR3H	set	4019
    61  0000                     _TMR3L	set	4018
    62  0000                     _TRISBbits	set	3987
    63  0000                     _TRISCbits	set	3988
    64                           
    65 ;;
    66 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
    67 ;;
    68 ;; *************** function _main *****************
    69 ;; Defined at:
    70 ;;		line 26 in file "Main.c"
    71 ;; Parameters:    Size  Location     Type
    72 ;;  argc            2   14[COMRAM] int 
    73 ;;  argv            3   16[COMRAM] PTR PTR unsigned char 
    74 ;; Auto vars:     Size  Location     Type
    75 ;;  current_bear    1   30[COMRAM] unsigned char 
    76 ;;  intended_bea    1   29[COMRAM] unsigned char 
    77 ;;  allowed_erro    1   28[COMRAM] unsigned char 
    78 ;;  right_turn_d    1   27[COMRAM] unsigned char 
    79 ;;  left_turn_di    1   26[COMRAM] unsigned char 
    80 ;; Return value:  Size  Location     Type
    81 ;;                  2   14[COMRAM] int 
    82 ;; Registers used:
    83 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
    84 ;; Tracked objects:
    85 ;;		On entry : 0/0
    86 ;;		On exit  : 0/0
    87 ;;		Unchanged: 0/0
    88 ;; Data sizes:     COMRAM   BANK0   BANK1
    89 ;;      Params:         5       0       0
    90 ;;      Locals:         5       0       0
    91 ;;      Temps:          7       0       0
    92 ;;      Totals:        17       0       0
    93 ;;Total ram usage:       17 bytes
    94 ;; Hardware stack levels required when called:    3
    95 ;; This function calls:
    96 ;;		_Closelchb100
    97 ;;		_OpenCMPS03
    98 ;;		_Openlchb100
    99 ;;		_ReadCMPS03
   100 ;;		_Runlchb100
   101 ;;		_delay_s
   102 ;;		_openLED
   103 ;;		_setLED
   104 ;; This function is called by:
   105 ;;		Startup code after reset
   106 ;; This function uses a non-reentrant model
   107 ;;
   108                           
   109                           	psect	text0
   110  001E1C                     __ptext0:
   111                           	opt stack 0
   112  001E1C                     _main:
   113                           	opt stack 28
   114                           
   115                           ;Main.c: 29: openLED();
   116                           
   117                           ;incstack = 0
   118  001E1C  EC68  F00D         	call	_openLED	;wreg free
   119                           
   120                           ;Main.c: 30: Openlchb100();
   121  001E20  ECC2  F00D         	call	_Openlchb100	;wreg free
   122                           
   123                           ;Main.c: 31: OpenCMPS03();
   124  001E24  EC90  F00D         	call	_OpenCMPS03	;wreg free
   125                           
   126                           ;Main.c: 33: unsigned char intended_bearing = 16;
   127  001E28  0E10               	movlw	16
   128  001E2A  6E1E               	movwf	main@intended_bearing,c
   129                           
   130                           ;Main.c: 34: char right_turn_distance = 0;
   131  001E2C  0E00               	movlw	0
   132  001E2E  6E1C               	movwf	main@right_turn_distance,c
   133                           
   134                           ;Main.c: 35: char left_turn_distance = 0;
   135  001E30  0E00               	movlw	0
   136  001E32  6E1B               	movwf	main@left_turn_distance,c
   137                           
   138                           ;Main.c: 36: char allowed_error = 5;
   139  001E34  0E05               	movlw	5
   140  001E36  6E1D               	movwf	main@allowed_error,c
   141  001E38                     l1109:
   142                           
   143                           ;Main.c: 41: current_bearing = ReadCMPS03();
   144  001E38  EC59  F00E         	call	_ReadCMPS03	;wreg free
   145  001E3C  6E1F               	movwf	main@current_bearing,c
   146                           
   147                           ;Main.c: 44: if (current_bearing >= intended_bearing + allowed_error
   148                           ;Main.c: 45: || current_bearing <= intended_bearing - allowed_error) {
   149  001E3E  501D               	movf	main@allowed_error,w,c
   150  001E40  C01E  F014         	movff	main@intended_bearing,??_main
   151  001E44  6A15               	clrf	(??_main+1)& (0+255),c
   152  001E46  2614               	addwf	??_main,f,c
   153  001E48  0E00               	movlw	0
   154  001E4A  2215               	addwfc	??_main+1,f,c
   155  001E4C  501F               	movf	main@current_bearing,w,c
   156  001E4E  6E16               	movwf	(??_main+2)& (0+255),c
   157  001E50  6A17               	clrf	(??_main+3)& (0+255),c
   158  001E52  5017               	movf	??_main+3,w,c
   159  001E54  0A80               	xorlw	128
   160  001E56  6E18               	movwf	(??_main+4)& (0+255),c
   161  001E58  5014               	movf	??_main,w,c
   162  001E5A  5C16               	subwf	??_main+2,w,c
   163  001E5C  5015               	movf	??_main+1,w,c
   164  001E5E  0A80               	xorlw	128
   165  001E60  5818               	subwfb	(??_main+4)& (0+255),w,c
   166  001E62  B0D8               	btfsc	status,0,c
   167  001E64  D01B               	goto	l1115
   168  001E66  501F               	movf	main@current_bearing,w,c
   169  001E68  6E14               	movwf	??_main& (0+255),c
   170  001E6A  6A15               	clrf	(??_main+1)& (0+255),c
   171  001E6C  501D               	movf	main@allowed_error,w,c
   172  001E6E  6E16               	movwf	(??_main+2)& (0+255),c
   173  001E70  6A17               	clrf	(??_main+3)& (0+255),c
   174  001E72  1E16               	comf	??_main+2,f,c
   175  001E74  1E17               	comf	??_main+3,f,c
   176  001E76  4A16               	infsnz	??_main+2,f,c
   177  001E78  2A17               	incf	??_main+3,f,c
   178  001E7A  501E               	movf	main@intended_bearing,w,c
   179  001E7C  6E18               	movwf	(??_main+4)& (0+255),c
   180  001E7E  6A19               	clrf	(??_main+5)& (0+255),c
   181  001E80  5016               	movf	??_main+2,w,c
   182  001E82  2618               	addwf	??_main+4,f,c
   183  001E84  5017               	movf	??_main+3,w,c
   184  001E86  2219               	addwfc	??_main+5,f,c
   185  001E88  5019               	movf	??_main+5,w,c
   186  001E8A  0A80               	xorlw	128
   187  001E8C  6E1A               	movwf	(??_main+6)& (0+255),c
   188  001E8E  5014               	movf	??_main,w,c
   189  001E90  5C18               	subwf	??_main+4,w,c
   190  001E92  5015               	movf	??_main+1,w,c
   191  001E94  0A80               	xorlw	128
   192  001E96  581A               	subwfb	(??_main+6)& (0+255),w,c
   193  001E98  A0D8               	btfss	status,0,c
   194  001E9A  D09D               	goto	l1145
   195  001E9C                     l1115:
   196                           
   197                           ;Main.c: 49: right_turn_distance = intended_bearing - current_bearing;
   198  001E9C  501F               	movf	main@current_bearing,w,c
   199  001E9E  0800               	sublw	0
   200  001EA0  241E               	addwf	main@intended_bearing,w,c
   201  001EA2  6E1C               	movwf	main@right_turn_distance,c
   202                           
   203                           ;Main.c: 50: left_turn_distance = 255 - right_turn_distance;
   204  001EA4  501C               	movf	main@right_turn_distance,w,c
   205  001EA6  0800               	sublw	0
   206  001EA8  6E14               	movwf	??_main& (0+255),c
   207  001EAA  0414               	decf	??_main,w,c
   208  001EAC  6E1B               	movwf	main@left_turn_distance,c
   209                           
   210                           ;Main.c: 53: if (right_turn_distance < left_turn_distance) {
   211  001EAE  501B               	movf	main@left_turn_distance,w,c
   212  001EB0  5C1C               	subwf	main@right_turn_distance,w,c
   213  001EB2  B0D8               	btfsc	status,0,c
   214  001EB4  D048               	goto	l1131
   215  001EB6                     l1117:
   216                           
   217                           ;Main.c: 55: current_bearing = ReadCMPS03();
   218  001EB6  EC59  F00E         	call	_ReadCMPS03	;wreg free
   219  001EBA  6E1F               	movwf	main@current_bearing,c
   220                           
   221                           ;Main.c: 56: Runlchb100(210, -210);
   222  001EBC  0E00               	movlw	0
   223  001EBE  6E0C               	movwf	Runlchb100@starboard+1,c
   224  001EC0  0ED2               	movlw	210
   225  001EC2  6E0B               	movwf	Runlchb100@starboard,c
   226  001EC4  0EFF               	movlw	255
   227  001EC6  6E0E               	movwf	Runlchb100@port+1,c
   228  001EC8  0E2E               	movlw	46
   229  001ECA  6E0D               	movwf	Runlchb100@port,c
   230  001ECC  ECB6  F00E         	call	_Runlchb100	;wreg free
   231                           
   232                           ;Main.c: 57: setLED(current_bearing);
   233  001ED0  501F               	movf	main@current_bearing,w,c
   234  001ED2  EC6B  F00D         	call	_setLED
   235                           
   236                           ;Main.c: 58: if (current_bearing >= intended_bearing - allowed_error
   237                           ;Main.c: 59: && current_bearing <= intended_bearing
   238                           ;Main.c: 60: + allowed_error) {
   239  001ED6  501D               	movf	main@allowed_error,w,c
   240  001ED8  6E14               	movwf	??_main& (0+255),c
   241  001EDA  6A15               	clrf	(??_main+1)& (0+255),c
   242  001EDC  1E14               	comf	??_main,f,c
   243  001EDE  1E15               	comf	??_main+1,f,c
   244  001EE0  4A14               	infsnz	??_main,f,c
   245  001EE2  2A15               	incf	??_main+1,f,c
   246  001EE4  501E               	movf	main@intended_bearing,w,c
   247  001EE6  6E16               	movwf	(??_main+2)& (0+255),c
   248  001EE8  6A17               	clrf	(??_main+3)& (0+255),c
   249  001EEA  5014               	movf	??_main,w,c
   250  001EEC  2616               	addwf	??_main+2,f,c
   251  001EEE  5015               	movf	??_main+1,w,c
   252  001EF0  2217               	addwfc	??_main+3,f,c
   253  001EF2  501F               	movf	main@current_bearing,w,c
   254  001EF4  6E18               	movwf	(??_main+4)& (0+255),c
   255  001EF6  6A19               	clrf	(??_main+5)& (0+255),c
   256  001EF8  5019               	movf	??_main+5,w,c
   257  001EFA  0A80               	xorlw	128
   258  001EFC  6E1A               	movwf	(??_main+6)& (0+255),c
   259  001EFE  5016               	movf	??_main+2,w,c
   260  001F00  5C18               	subwf	??_main+4,w,c
   261  001F02  5017               	movf	??_main+3,w,c
   262  001F04  0A80               	xorlw	128
   263  001F06  581A               	subwfb	(??_main+6)& (0+255),w,c
   264  001F08  A0D8               	btfss	status,0,c
   265  001F0A  D7D5               	goto	l1117
   266  001F0C  501F               	movf	main@current_bearing,w,c
   267  001F0E  6E14               	movwf	??_main& (0+255),c
   268  001F10  6A15               	clrf	(??_main+1)& (0+255),c
   269  001F12  501D               	movf	main@allowed_error,w,c
   270  001F14  C01E  F016         	movff	main@intended_bearing,??_main+2
   271  001F18  6A17               	clrf	(??_main+3)& (0+255),c
   272  001F1A  2616               	addwf	??_main+2,f,c
   273  001F1C  0E00               	movlw	0
   274  001F1E  2217               	addwfc	??_main+3,f,c
   275  001F20  5017               	movf	??_main+3,w,c
   276  001F22  0A80               	xorlw	128
   277  001F24  6E18               	movwf	(??_main+4)& (0+255),c
   278  001F26  5014               	movf	??_main,w,c
   279  001F28  5C16               	subwf	??_main+2,w,c
   280  001F2A  5015               	movf	??_main+1,w,c
   281  001F2C  0A80               	xorlw	128
   282  001F2E  5818               	subwfb	(??_main+4)& (0+255),w,c
   283  001F30  A0D8               	btfss	status,0,c
   284  001F32  D7C1               	goto	l1117
   285                           
   286                           ;Main.c: 61: Closelchb100();
   287  001F34  EC6F  F00D         	call	_Closelchb100	;wreg free
   288                           
   289                           ;Main.c: 62: delay_s(1);
   290  001F38  0E00               	movlw	0
   291  001F3A  6E04               	movwf	delay_s@x+1,c
   292  001F3C  0E01               	movlw	1
   293  001F3E  6E03               	movwf	delay_s@x,c
   294  001F40  EC79  F00D         	call	_delay_s	;wreg free
   295                           
   296                           ;Main.c: 63: break;
   297  001F44  D058               	goto	l1149
   298  001F46                     l1131:
   299                           
   300                           ;Main.c: 69: current_bearing = ReadCMPS03();
   301  001F46  EC59  F00E         	call	_ReadCMPS03	;wreg free
   302  001F4A  6E1F               	movwf	main@current_bearing,c
   303                           
   304                           ;Main.c: 70: Runlchb100(-210, 210);
   305  001F4C  0EFF               	movlw	255
   306  001F4E  6E0C               	movwf	Runlchb100@starboard+1,c
   307  001F50  0E2E               	movlw	46
   308  001F52  6E0B               	movwf	Runlchb100@starboard,c
   309  001F54  0E00               	movlw	0
   310  001F56  6E0E               	movwf	Runlchb100@port+1,c
   311  001F58  0ED2               	movlw	210
   312  001F5A  6E0D               	movwf	Runlchb100@port,c
   313  001F5C  ECB6  F00E         	call	_Runlchb100	;wreg free
   314                           
   315                           ;Main.c: 71: setLED(current_bearing);
   316  001F60  501F               	movf	main@current_bearing,w,c
   317  001F62  EC6B  F00D         	call	_setLED
   318                           
   319                           ;Main.c: 72: if (current_bearing >= intended_bearing - allowed_error &&
   320                           ;Main.c: 73: current_bearing <= intended_bearing
   321                           ;Main.c: 74: + allowed_error) {
   322  001F66  501D               	movf	main@allowed_error,w,c
   323  001F68  6E14               	movwf	??_main& (0+255),c
   324  001F6A  6A15               	clrf	(??_main+1)& (0+255),c
   325  001F6C  1E14               	comf	??_main,f,c
   326  001F6E  1E15               	comf	??_main+1,f,c
   327  001F70  4A14               	infsnz	??_main,f,c
   328  001F72  2A15               	incf	??_main+1,f,c
   329  001F74  501E               	movf	main@intended_bearing,w,c
   330  001F76  6E16               	movwf	(??_main+2)& (0+255),c
   331  001F78  6A17               	clrf	(??_main+3)& (0+255),c
   332  001F7A  5014               	movf	??_main,w,c
   333  001F7C  2616               	addwf	??_main+2,f,c
   334  001F7E  5015               	movf	??_main+1,w,c
   335  001F80  2217               	addwfc	??_main+3,f,c
   336  001F82  501F               	movf	main@current_bearing,w,c
   337  001F84  6E18               	movwf	(??_main+4)& (0+255),c
   338  001F86  6A19               	clrf	(??_main+5)& (0+255),c
   339  001F88  5019               	movf	??_main+5,w,c
   340  001F8A  0A80               	xorlw	128
   341  001F8C  6E1A               	movwf	(??_main+6)& (0+255),c
   342  001F8E  5016               	movf	??_main+2,w,c
   343  001F90  5C18               	subwf	??_main+4,w,c
   344  001F92  5017               	movf	??_main+3,w,c
   345  001F94  0A80               	xorlw	128
   346  001F96  581A               	subwfb	(??_main+6)& (0+255),w,c
   347  001F98  A0D8               	btfss	status,0,c
   348  001F9A  D7D5               	goto	l1131
   349  001F9C  501F               	movf	main@current_bearing,w,c
   350  001F9E  6E14               	movwf	??_main& (0+255),c
   351  001FA0  6A15               	clrf	(??_main+1)& (0+255),c
   352  001FA2  501D               	movf	main@allowed_error,w,c
   353  001FA4  C01E  F016         	movff	main@intended_bearing,??_main+2
   354  001FA8  6A17               	clrf	(??_main+3)& (0+255),c
   355  001FAA  2616               	addwf	??_main+2,f,c
   356  001FAC  0E00               	movlw	0
   357  001FAE  2217               	addwfc	??_main+3,f,c
   358  001FB0  5017               	movf	??_main+3,w,c
   359  001FB2  0A80               	xorlw	128
   360  001FB4  6E18               	movwf	(??_main+4)& (0+255),c
   361  001FB6  5014               	movf	??_main,w,c
   362  001FB8  5C16               	subwf	??_main+2,w,c
   363  001FBA  5015               	movf	??_main+1,w,c
   364  001FBC  0A80               	xorlw	128
   365  001FBE  5818               	subwfb	(??_main+4)& (0+255),w,c
   366  001FC0  A0D8               	btfss	status,0,c
   367  001FC2  D7C1               	goto	l1131
   368                           
   369                           ;Main.c: 75: Closelchb100();
   370  001FC4  EC6F  F00D         	call	_Closelchb100	;wreg free
   371                           
   372                           ;Main.c: 76: delay_s(1);
   373  001FC8  0E00               	movlw	0
   374  001FCA  6E04               	movwf	delay_s@x+1,c
   375  001FCC  0E01               	movlw	1
   376  001FCE  6E03               	movwf	delay_s@x,c
   377  001FD0  EC79  F00D         	call	_delay_s	;wreg free
   378                           
   379                           ;Main.c: 77: break;
   380  001FD4  D010               	goto	l1149
   381  001FD6                     l1145:
   382                           
   383                           ;Main.c: 82: else {
   384                           ;Main.c: 83: Runlchb100(210, 210);
   385  001FD6  0E00               	movlw	0
   386  001FD8  6E0C               	movwf	Runlchb100@starboard+1,c
   387  001FDA  0ED2               	movlw	210
   388  001FDC  6E0B               	movwf	Runlchb100@starboard,c
   389  001FDE  0E00               	movlw	0
   390  001FE0  6E0E               	movwf	Runlchb100@port+1,c
   391  001FE2  0ED2               	movlw	210
   392  001FE4  6E0D               	movwf	Runlchb100@port,c
   393  001FE6  ECB6  F00E         	call	_Runlchb100	;wreg free
   394                           
   395                           ;Main.c: 84: delay_s(1);
   396  001FEA  0E00               	movlw	0
   397  001FEC  6E04               	movwf	delay_s@x+1,c
   398  001FEE  0E01               	movlw	1
   399  001FF0  6E03               	movwf	delay_s@x,c
   400  001FF2  EC79  F00D         	call	_delay_s	;wreg free
   401  001FF6                     l1149:
   402                           
   403                           ;Main.c: 85: }
   404                           ;Main.c: 86: setLED(ReadCMPS03());
   405  001FF6  EC59  F00E         	call	_ReadCMPS03	;wreg free
   406  001FFA  EC6B  F00D         	call	_setLED
   407  001FFE  D71C               	goto	l1109
   408  002000                     __end_of_main:
   409                           	opt stack 0
   410                           status	equ	0xFD8
   411                           
   412                           	psect	cinit
   413  001AE8                     __pcinit:
   414                           	opt stack 0
   415  001AE8                     start_initialization:
   416                           	opt stack 0
   417  001AE8                     __initialization:
   418                           	opt stack 0
   419                           
   420                           ; Clear objects allocated to COMRAM (2 bytes)
   421  001AE8  6A21               	clrf	(__pbssCOMRAM+1)& (0+255),c
   422  001AEA  6A20               	clrf	__pbssCOMRAM& (0+255),c
   423  001AEC                     end_of_initialization:
   424                           	opt stack 0
   425  001AEC                     __end_of__initialization:
   426                           	opt stack 0
   427  001AEC  0100               	movlb	0
   428  001AEE  EF0E  F00F         	goto	_main	;jump to C main() function
   429                           status	equ	0xFD8
   430                           
   431                           	psect	bssCOMRAM
   432  000020                     __pbssCOMRAM:
   433                           	opt stack 0
   434  000020                     _tick_units:
   435                           	opt stack 0
   436  000020                     	ds	2
   437                           status	equ	0xFD8
   438                           
   439                           	psect	cstackCOMRAM
   440  000001                     __pcstackCOMRAM:
   441                           	opt stack 0
   442  000001                     ??_Delay10KTCYx:
   443  000001                     ??_OpenPWM2:
   444  000001                     ??_IdleI2C:
   445  000001                     ??_ReadI2C:
   446  000001                     ?_abs:
   447                           	opt stack 0
   448  000001                     setLED@value:
   449                           	opt stack 0
   450  000001                     OpenPWM1@period:
   451                           	opt stack 0
   452  000001                     OpenTimer2@config:
   453                           	opt stack 0
   454  000001                     OpenI2C@slew:
   455                           	opt stack 0
   456  000001                     abs@a:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x0
   460  000001                     	ds	1
   461  000002                     ??_WriteI2C:
   462  000002                     OpenPWM2@period:
   463                           	opt stack 0
   464  000002                     OpenI2C@sync_mode:
   465                           	opt stack 0
   466  000002                     Delay10KTCYx@unit:
   467                           	opt stack 0
   468                           
   469                           ; 1 bytes @ 0x1
   470  000002                     	ds	1
   471  000003                     ??_abs:
   472  000003                     OpenPWM2@ccp2mx:
   473                           	opt stack 0
   474  000003                     WriteI2C@data_out:
   475                           	opt stack 0
   476  000003                     delay_s@x:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x2
   480  000003                     	ds	1
   481  000004                     ReadCMPS03@byte:
   482                           	opt stack 0
   483                           
   484                           ; 1 bytes @ 0x3
   485  000004                     	ds	1
   486  000005                     SetDCPWM1@dutycycle:
   487                           	opt stack 0
   488  000005                     SetDCPWM2@dutycycle:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x4
   492  000005                     	ds	2
   493  000007                     ??_SetDCPWM1:
   494  000007                     ??_SetDCPWM2:
   495                           
   496                           ; 0 bytes @ 0x6
   497  000007                     	ds	2
   498  000009                     SetDCPWM1@DCycle:
   499                           	opt stack 0
   500  000009                     SetDCPWM2@DCycle:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x8
   504  000009                     	ds	2
   505  00000B                     Runlchb100@starboard:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0xA
   509  00000B                     	ds	2
   510  00000D                     Runlchb100@port:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0xC
   514  00000D                     	ds	2
   515  00000F                     
   516                           ; 2 bytes @ 0xE
   517  00000F                     	ds	2
   518  000011                     
   519                           ; 3 bytes @ 0x10
   520  000011                     	ds	3
   521  000014                     ??_main:
   522                           
   523                           ; 0 bytes @ 0x13
   524  000014                     	ds	7
   525  00001B                     main@left_turn_distance:
   526                           	opt stack 0
   527                           
   528                           ; 1 bytes @ 0x1A
   529  00001B                     	ds	1
   530  00001C                     main@right_turn_distance:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x1B
   534  00001C                     	ds	1
   535  00001D                     main@allowed_error:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x1C
   539  00001D                     	ds	1
   540  00001E                     main@intended_bearing:
   541                           	opt stack 0
   542                           
   543                           ; 1 bytes @ 0x1D
   544  00001E                     	ds	1
   545  00001F                     main@current_bearing:
   546                           	opt stack 0
   547                           
   548                           ; 1 bytes @ 0x1E
   549  00001F                     	ds	1
   550                           status	equ	0xFD8
   551                           
   552 ;; *************** function _setLED *****************
   553 ;; Defined at:
   554 ;;		line 47 in file "led.h"
   555 ;; Parameters:    Size  Location     Type
   556 ;;  value           1    wreg     unsigned char 
   557 ;; Auto vars:     Size  Location     Type
   558 ;;  value           1    0[COMRAM] unsigned char 
   559 ;; Return value:  Size  Location     Type
   560 ;;		None               void
   561 ;; Registers used:
   562 ;;		wreg
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1
   568 ;;      Params:         0       0       0
   569 ;;      Locals:         1       0       0
   570 ;;      Temps:          0       0       0
   571 ;;      Totals:         1       0       0
   572 ;;Total ram usage:        1 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; This function calls:
   575 ;;		Nothing
   576 ;; This function is called by:
   577 ;;		_main
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           	psect	text1
   582  001AD6                     __ptext1:
   583                           	opt stack 0
   584  001AD6                     _setLED:
   585                           	opt stack 30
   586                           
   587                           ;incstack = 0
   588                           ;setLED@value stored from wreg
   589  001AD6  6E01               	movwf	setLED@value,c
   590                           
   591                           ;led.h: 48: LATD = value;
   592  001AD8  C001  FF8C         	movff	setLED@value,3980	;volatile
   593  001ADC  0012               	return	
   594  001ADE                     __end_of_setLED:
   595                           	opt stack 0
   596                           status	equ	0xFD8
   597                           
   598 ;; *************** function _openLED *****************
   599 ;; Defined at:
   600 ;;		line 28 in file "led.h"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;		None               void
   607 ;; Registers used:
   608 ;;		wreg, status,2
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMRAM   BANK0   BANK1
   614 ;;      Params:         0       0       0
   615 ;;      Locals:         0       0       0
   616 ;;      Temps:          0       0       0
   617 ;;      Totals:         0       0       0
   618 ;;Total ram usage:        0 bytes
   619 ;; Hardware stack levels used:    1
   620 ;; This function calls:
   621 ;;		Nothing
   622 ;; This function is called by:
   623 ;;		_main
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text2
   628  001AD0                     __ptext2:
   629                           	opt stack 0
   630  001AD0                     _openLED:
   631                           	opt stack 30
   632                           
   633                           ;led.h: 30: DDRD = 0;
   634                           
   635                           ;incstack = 0
   636  001AD0  0E00               	movlw	0
   637  001AD2  6E95               	movwf	3989,c	;volatile
   638  001AD4  0012               	return	
   639  001AD6                     __end_of_openLED:
   640                           	opt stack 0
   641                           status	equ	0xFD8
   642                           
   643 ;; *************** function _delay_s *****************
   644 ;; Defined at:
   645 ;;		line 37 in file "delay.h"
   646 ;; Parameters:    Size  Location     Type
   647 ;;  x               2    2[COMRAM] unsigned int 
   648 ;; Auto vars:     Size  Location     Type
   649 ;;		None
   650 ;; Return value:  Size  Location     Type
   651 ;;		None               void
   652 ;; Registers used:
   653 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMRAM   BANK0   BANK1
   659 ;;      Params:         2       0       0
   660 ;;      Locals:         0       0       0
   661 ;;      Temps:          0       0       0
   662 ;;      Totals:         2       0       0
   663 ;;Total ram usage:        2 bytes
   664 ;; Hardware stack levels used:    1
   665 ;; Hardware stack levels required when called:    1
   666 ;; This function calls:
   667 ;;		_Delay10KTCYx
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	text3
   674  001AF2                     __ptext3:
   675                           	opt stack 0
   676  001AF2                     _delay_s:
   677                           	opt stack 29
   678                           
   679                           ;delay.h: 38: Delay10KTCYx(x * 100);
   680                           
   681                           ;incstack = 0
   682  001AF2  5003               	movf	delay_s@x,w,c
   683  001AF4  0D64               	mullw	100
   684  001AF6  50F3               	movf	prodl,w,c
   685  001AF8  EC9A  F00D         	call	_Delay10KTCYx
   686  001AFC  0012               	return	
   687  001AFE                     __end_of_delay_s:
   688                           	opt stack 0
   689                           prodl	equ	0xFF3
   690                           status	equ	0xFD8
   691                           
   692 ;; *************** function _Delay10KTCYx *****************
   693 ;; Defined at:
   694 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d10ktcyx.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;  unit            1    wreg     unsigned char 
   697 ;; Auto vars:     Size  Location     Type
   698 ;;  unit            1    1[COMRAM] unsigned char 
   699 ;; Return value:  Size  Location     Type
   700 ;;		None               void
   701 ;; Registers used:
   702 ;;		wreg
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK0   BANK1
   708 ;;      Params:         0       0       0
   709 ;;      Locals:         1       0       0
   710 ;;      Temps:          1       0       0
   711 ;;      Totals:         2       0       0
   712 ;;Total ram usage:        2 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; This function calls:
   715 ;;		Nothing
   716 ;; This function is called by:
   717 ;;		_delay_s
   718 ;;		_delay_ms
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           	psect	text4
   723  001B34                     __ptext4:
   724                           	opt stack 0
   725  001B34                     _Delay10KTCYx:
   726                           	opt stack 29
   727                           
   728                           ;incstack = 0
   729                           ;Delay10KTCYx@unit stored from wreg
   730  001B34  6E02               	movwf	Delay10KTCYx@unit,c
   731  001B36                     l526:
   732  001B36  0E0D               	movlw	13
   733  001B38  6E01               	movwf	??_Delay10KTCYx& (0+255),c
   734  001B3A  0EFC               	movlw	252
   735  001B3C                     u397:
   736  001B3C  2EE8               	decfsz	wreg,f,c
   737  001B3E  D7FE               	goto	u397
   738  001B40  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
   739  001B42  D7FC               	goto	u397
   740  001B44  2E02               	decfsz	Delay10KTCYx@unit,f,c
   741  001B46  D7F7               	goto	l526
   742  001B48  0012               	return	
   743  001B4A                     __end_of_Delay10KTCYx:
   744                           	opt stack 0
   745                           prodl	equ	0xFF3
   746                           wreg	equ	0xFE8
   747                           status	equ	0xFD8
   748                           
   749 ;; *************** function _Runlchb100 *****************
   750 ;; Defined at:
   751 ;;		line 104 in file "lcbh100.h"
   752 ;; Parameters:    Size  Location     Type
   753 ;;  starboard       2   10[COMRAM] int 
   754 ;;  port            2   12[COMRAM] int 
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  2   10[COMRAM] int 
   759 ;; Registers used:
   760 ;;		wreg, status,2, status,0, prodl, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1
   766 ;;      Params:         4       0       0
   767 ;;      Locals:         0       0       0
   768 ;;      Temps:          0       0       0
   769 ;;      Totals:         4       0       0
   770 ;;Total ram usage:        4 bytes
   771 ;; Hardware stack levels used:    1
   772 ;; Hardware stack levels required when called:    1
   773 ;; This function calls:
   774 ;;		_Closelchb100
   775 ;;		_SetDCPWM1
   776 ;;		_SetDCPWM2
   777 ;;		_abs
   778 ;; This function is called by:
   779 ;;		_main
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           	psect	text5
   784  001D6C                     __ptext5:
   785                           	opt stack 0
   786  001D6C                     _Runlchb100:
   787                           	opt stack 29
   788                           
   789                           ;lcbh100.h: 105: Closelchb100();
   790                           
   791                           ;incstack = 0
   792  001D6C  EC6F  F00D         	call	_Closelchb100	;wreg free
   793                           
   794                           ;lcbh100.h: 108: if (port >= 0 && starboard >= 0) {
   795  001D70  AE0E               	btfss	Runlchb100@port+1,7,c
   796  001D72  BE0C               	btfsc	Runlchb100@starboard+1,7,c
   797  001D74  D003               	goto	l85
   798                           
   799                           ;lcbh100.h: 109: LATAbits.LATA0 = 1;
   800  001D76  8089               	bsf	3977,0,c	;volatile
   801                           
   802                           ;lcbh100.h: 110: LATAbits.LATA1 = 0;
   803  001D78  9289               	bcf	3977,1,c	;volatile
   804  001D7A  D01C               	goto	L1
   805  001D7C                     l85:
   806                           
   807                           ;lcbh100.h: 116: else if (port >= 0 && starboard < 0) {
   808  001D7C  BE0E               	btfsc	Runlchb100@port+1,7,c
   809  001D7E  D00D               	goto	l1031
   810  001D80  500C               	movf	Runlchb100@starboard+1,w,c
   811  001D82  0A80               	xorlw	128
   812  001D84  6EF3               	movwf	prodl,c
   813  001D86  0E80               	movlw	128
   814  001D88  5CF3               	subwf	prodl,w,c
   815  001D8A  0E00               	movlw	0
   816  001D8C  B4D8               	btfsc	status,2,c
   817  001D8E  5C0B               	subwf	Runlchb100@starboard,w,c
   818  001D90  B0D8               	btfsc	status,0,c
   819  001D92  D003               	goto	l1031
   820                           
   821                           ;lcbh100.h: 117: LATAbits.LATA0 = 1;
   822  001D94  8089               	bsf	3977,0,c	;volatile
   823                           
   824                           ;lcbh100.h: 118: LATAbits.LATA1 = 0;
   825  001D96  9289               	bcf	3977,1,c	;volatile
   826  001D98  D026               	goto	L2
   827  001D9A                     l1031:
   828                           
   829                           ;lcbh100.h: 124: else if (port < 0 && starboard >= 0) {
   830  001D9A  500E               	movf	Runlchb100@port+1,w,c
   831  001D9C  0A80               	xorlw	128
   832  001D9E  6EF3               	movwf	prodl,c
   833  001DA0  0E80               	movlw	128
   834  001DA2  5CF3               	subwf	prodl,w,c
   835  001DA4  0E00               	movlw	0
   836  001DA6  B4D8               	btfsc	status,2,c
   837  001DA8  5C0D               	subwf	Runlchb100@port,w,c
   838  001DAA  A0D8               	btfss	status,0,c
   839  001DAC  BE0C               	btfsc	Runlchb100@starboard+1,7,c
   840  001DAE  D005               	goto	l1037
   841                           
   842                           ;lcbh100.h: 125: LATAbits.LATA0 = 0;
   843  001DB0  9089               	bcf	3977,0,c	;volatile
   844                           
   845                           ;lcbh100.h: 126: LATAbits.LATA1 = 1;
   846  001DB2  8289               	bsf	3977,1,c	;volatile
   847  001DB4                     L1:
   848                           
   849                           ;lcbh100.h: 127: LATAbits.LATA2 = 1;
   850  001DB4  8489               	bsf	3977,2,c	;volatile
   851                           
   852                           ;lcbh100.h: 128: LATAbits.LATA3 = 0;
   853  001DB6  9689               	bcf	3977,3,c	;volatile
   854                           
   855                           ;lcbh100.h: 130: }
   856  001DB8  D018               	goto	l1043
   857  001DBA                     l1037:
   858                           
   859                           ;lcbh100.h: 132: else if (port < 0 && starboard < 0) {
   860  001DBA  500E               	movf	Runlchb100@port+1,w,c
   861  001DBC  0A80               	xorlw	128
   862  001DBE  6EF3               	movwf	prodl,c
   863  001DC0  0E80               	movlw	128
   864  001DC2  5CF3               	subwf	prodl,w,c
   865  001DC4  0E00               	movlw	0
   866  001DC6  B4D8               	btfsc	status,2,c
   867  001DC8  5C0D               	subwf	Runlchb100@port,w,c
   868  001DCA  B0D8               	btfsc	status,0,c
   869  001DCC  D00E               	goto	l1043
   870  001DCE  500C               	movf	Runlchb100@starboard+1,w,c
   871  001DD0  0A80               	xorlw	128
   872  001DD2  6EF3               	movwf	prodl,c
   873  001DD4  0E80               	movlw	128
   874  001DD6  5CF3               	subwf	prodl,w,c
   875  001DD8  0E00               	movlw	0
   876  001DDA  B4D8               	btfsc	status,2,c
   877  001DDC  5C0B               	subwf	Runlchb100@starboard,w,c
   878  001DDE  B0D8               	btfsc	status,0,c
   879  001DE0  D004               	goto	l1043
   880                           
   881                           ;lcbh100.h: 133: LATAbits.LATA0 = 0;
   882  001DE2  9089               	bcf	3977,0,c	;volatile
   883                           
   884                           ;lcbh100.h: 134: LATAbits.LATA1 = 1;
   885  001DE4  8289               	bsf	3977,1,c	;volatile
   886  001DE6                     L2:
   887                           
   888                           ;lcbh100.h: 135: LATAbits.LATA2 = 0;
   889  001DE6  9489               	bcf	3977,2,c	;volatile
   890                           
   891                           ;lcbh100.h: 136: LATAbits.LATA3 = 1;
   892  001DE8  8689               	bsf	3977,3,c	;volatile
   893  001DEA                     l1043:
   894                           
   895                           ;lcbh100.h: 137: }
   896                           ;lcbh100.h: 140: SetDCPWM1(abs(port));
   897  001DEA  C00D  F001         	movff	Runlchb100@port,abs@a
   898  001DEE  C00E  F002         	movff	Runlchb100@port+1,abs@a+1
   899  001DF2  ECE6  F00D         	call	_abs	;wreg free
   900  001DF6  C001  F005         	movff	?_abs,SetDCPWM1@dutycycle
   901  001DFA  C002  F006         	movff	?_abs+1,SetDCPWM1@dutycycle+1
   902  001DFE  EC1F  F00E         	call	_SetDCPWM1	;wreg free
   903                           
   904                           ;lcbh100.h: 141: SetDCPWM2(abs(starboard));
   905  001E02  C00B  F001         	movff	Runlchb100@starboard,abs@a
   906  001E06  C00C  F002         	movff	Runlchb100@starboard+1,abs@a+1
   907  001E0A  ECE6  F00D         	call	_abs	;wreg free
   908  001E0E  C001  F005         	movff	?_abs,SetDCPWM2@dutycycle
   909  001E12  C002  F006         	movff	?_abs+1,SetDCPWM2@dutycycle+1
   910  001E16  EC3C  F00E         	call	_SetDCPWM2	;wreg free
   911  001E1A  0012               	return	
   912  001E1C                     __end_of_Runlchb100:
   913                           	opt stack 0
   914                           prodl	equ	0xFF3
   915                           wreg	equ	0xFE8
   916                           status	equ	0xFD8
   917                           
   918 ;; *************** function _abs *****************
   919 ;; Defined at:
   920 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\abs.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;  a               2    0[COMRAM] int 
   923 ;; Auto vars:     Size  Location     Type
   924 ;;		None
   925 ;; Return value:  Size  Location     Type
   926 ;;                  2    0[COMRAM] int 
   927 ;; Registers used:
   928 ;;		wreg, status,2, status,0, prodl
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1
   934 ;;      Params:         2       0       0
   935 ;;      Locals:         0       0       0
   936 ;;      Temps:          2       0       0
   937 ;;      Totals:         4       0       0
   938 ;;Total ram usage:        4 bytes
   939 ;; Hardware stack levels used:    1
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		_Runlchb100
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text6
   948  001BCC                     __ptext6:
   949                           	opt stack 0
   950  001BCC                     _abs:
   951                           	opt stack 29
   952                           
   953                           ;incstack = 0
   954  001BCC  5002               	movf	abs@a+1,w,c
   955  001BCE  0A80               	xorlw	128
   956  001BD0  6EF3               	movwf	prodl,c
   957  001BD2  0E80               	movlw	128
   958  001BD4  5CF3               	subwf	prodl,w,c
   959  001BD6  0E00               	movlw	0
   960  001BD8  B4D8               	btfsc	status,2,c
   961  001BDA  5C01               	subwf	abs@a,w,c
   962  001BDC  B0D8               	btfsc	status,0,c
   963  001BDE  D00D               	goto	l346
   964  001BE0  C001  F003         	movff	abs@a,??_abs
   965  001BE4  C002  F004         	movff	abs@a+1,??_abs+1
   966  001BE8  1E03               	comf	??_abs,f,c
   967  001BEA  1E04               	comf	??_abs+1,f,c
   968  001BEC  4A03               	infsnz	??_abs,f,c
   969  001BEE  2A04               	incf	??_abs+1,f,c
   970  001BF0  C003  F001         	movff	??_abs,?_abs
   971  001BF4  C004  F002         	movff	??_abs+1,?_abs+1
   972  001BF8  D004               	goto	l347
   973  001BFA                     l346:
   974  001BFA  C001  F001         	movff	abs@a,?_abs
   975  001BFE  C002  F002         	movff	abs@a+1,?_abs+1
   976  001C02                     l347:
   977  001C02  0012               	return	
   978  001C04                     __end_of_abs:
   979                           	opt stack 0
   980                           prodl	equ	0xFF3
   981                           wreg	equ	0xFE8
   982                           status	equ	0xFD8
   983                           
   984 ;; *************** function _SetDCPWM2 *****************
   985 ;; Defined at:
   986 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2setdc.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;  dutycycle       2    4[COMRAM] unsigned int 
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  DCycle          2    8[COMRAM] struct PWMDC
   991 ;; Return value:  Size  Location     Type
   992 ;;		None               void
   993 ;; Registers used:
   994 ;;		wreg, status,2, status,0
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1
  1000 ;;      Params:         2       0       0
  1001 ;;      Locals:         2       0       0
  1002 ;;      Temps:          2       0       0
  1003 ;;      Totals:         6       0       0
  1004 ;;Total ram usage:        6 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_Runlchb100
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           	psect	text7
  1014  001C78                     __ptext7:
  1015                           	opt stack 0
  1016  001C78                     _SetDCPWM2:
  1017                           	opt stack 29
  1018                           
  1019                           ;incstack = 0
  1020  001C78  C005  F007         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  1021  001C7C  C006  F008         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  1022  001C80  0E06               	movlw	6
  1023  001C82                     u85:
  1024  001C82  90D8               	bcf	status,0,c
  1025  001C84  3607               	rlcf	??_SetDCPWM2,f,c
  1026  001C86  3608               	rlcf	??_SetDCPWM2+1,f,c
  1027  001C88  2EE8               	decfsz	wreg,f,c
  1028  001C8A  D7FB               	goto	u85
  1029  001C8C  C007  F009         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  1030  001C90  C008  F00A         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  1031  001C94  C00A  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  1032  001C98  C009  F007         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  1033  001C9C  90D8               	bcf	status,0,c
  1034  001C9E  3207               	rrcf	??_SetDCPWM2,f,c
  1035  001CA0  90D8               	bcf	status,0,c
  1036  001CA2  3207               	rrcf	??_SetDCPWM2,f,c
  1037  001CA4  0E30               	movlw	48
  1038  001CA6  1607               	andwf	??_SetDCPWM2,f,c
  1039  001CA8  50BA               	movf	4026,w,c	;volatile
  1040  001CAA  0BCF               	andlw	207
  1041  001CAC  1007               	iorwf	??_SetDCPWM2,w,c
  1042  001CAE  6EBA               	movwf	4026,c	;volatile
  1043  001CB0  0012               	return	
  1044  001CB2                     __end_of_SetDCPWM2:
  1045                           	opt stack 0
  1046                           prodl	equ	0xFF3
  1047                           wreg	equ	0xFE8
  1048                           status	equ	0xFD8
  1049                           
  1050 ;; *************** function _SetDCPWM1 *****************
  1051 ;; Defined at:
  1052 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1setdc.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  dutycycle       2    4[COMRAM] unsigned int 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  DCycle          2    8[COMRAM] struct PWMDC
  1057 ;; Return value:  Size  Location     Type
  1058 ;;		None               void
  1059 ;; Registers used:
  1060 ;;		wreg, status,2, status,0
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1
  1066 ;;      Params:         2       0       0
  1067 ;;      Locals:         2       0       0
  1068 ;;      Temps:          2       0       0
  1069 ;;      Totals:         6       0       0
  1070 ;;Total ram usage:        6 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; This function calls:
  1073 ;;		Nothing
  1074 ;; This function is called by:
  1075 ;;		_Runlchb100
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text8
  1080  001C3E                     __ptext8:
  1081                           	opt stack 0
  1082  001C3E                     _SetDCPWM1:
  1083                           	opt stack 29
  1084                           
  1085                           ;incstack = 0
  1086  001C3E  C005  F007         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  1087  001C42  C006  F008         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  1088  001C46  0E06               	movlw	6
  1089  001C48                     u75:
  1090  001C48  90D8               	bcf	status,0,c
  1091  001C4A  3607               	rlcf	??_SetDCPWM1,f,c
  1092  001C4C  3608               	rlcf	??_SetDCPWM1+1,f,c
  1093  001C4E  2EE8               	decfsz	wreg,f,c
  1094  001C50  D7FB               	goto	u75
  1095  001C52  C007  F009         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  1096  001C56  C008  F00A         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  1097  001C5A  C00A  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  1098  001C5E  C009  F007         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  1099  001C62  90D8               	bcf	status,0,c
  1100  001C64  3207               	rrcf	??_SetDCPWM1,f,c
  1101  001C66  90D8               	bcf	status,0,c
  1102  001C68  3207               	rrcf	??_SetDCPWM1,f,c
  1103  001C6A  0E30               	movlw	48
  1104  001C6C  1607               	andwf	??_SetDCPWM1,f,c
  1105  001C6E  50BD               	movf	4029,w,c	;volatile
  1106  001C70  0BCF               	andlw	207
  1107  001C72  1007               	iorwf	??_SetDCPWM1,w,c
  1108  001C74  6EBD               	movwf	4029,c	;volatile
  1109  001C76  0012               	return	
  1110  001C78                     __end_of_SetDCPWM1:
  1111                           	opt stack 0
  1112                           prodl	equ	0xFF3
  1113                           wreg	equ	0xFE8
  1114                           status	equ	0xFD8
  1115                           
  1116 ;; *************** function _Closelchb100 *****************
  1117 ;; Defined at:
  1118 ;;		line 84 in file "lcbh100.h"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  2   81[COMRAM] int 
  1125 ;; Registers used:
  1126 ;;		None
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1
  1132 ;;      Params:         0       0       0
  1133 ;;      Locals:         0       0       0
  1134 ;;      Temps:          0       0       0
  1135 ;;      Totals:         0       0       0
  1136 ;;Total ram usage:        0 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_Runlchb100
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text9
  1147  001ADE                     __ptext9:
  1148                           	opt stack 0
  1149  001ADE                     _Closelchb100:
  1150                           	opt stack 29
  1151                           
  1152                           ;lcbh100.h: 85: LATAbits.LATA0 = 0;
  1153                           
  1154                           ;incstack = 0
  1155  001ADE  9089               	bcf	3977,0,c	;volatile
  1156                           
  1157                           ;lcbh100.h: 86: LATAbits.LATA1 = 0;
  1158  001AE0  9289               	bcf	3977,1,c	;volatile
  1159                           
  1160                           ;lcbh100.h: 87: LATAbits.LATA2 = 0;
  1161  001AE2  9489               	bcf	3977,2,c	;volatile
  1162                           
  1163                           ;lcbh100.h: 88: LATAbits.LATA3 = 0;
  1164  001AE4  9689               	bcf	3977,3,c	;volatile
  1165  001AE6  0012               	return	
  1166  001AE8                     __end_of_Closelchb100:
  1167                           	opt stack 0
  1168                           prodl	equ	0xFF3
  1169                           wreg	equ	0xFE8
  1170                           status	equ	0xFD8
  1171                           
  1172 ;; *************** function _ReadCMPS03 *****************
  1173 ;; Defined at:
  1174 ;;		line 41 in file "cmps03.h"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;		None
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  byte            1    3[COMRAM] unsigned char 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      unsigned char 
  1181 ;; Registers used:
  1182 ;;		wreg, status,2, status,0, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1
  1188 ;;      Params:         0       0       0
  1189 ;;      Locals:         1       0       0
  1190 ;;      Temps:          0       0       0
  1191 ;;      Totals:         1       0       0
  1192 ;;Total ram usage:        1 bytes
  1193 ;; Hardware stack levels used:    1
  1194 ;; Hardware stack levels required when called:    2
  1195 ;; This function calls:
  1196 ;;		_IdleI2C
  1197 ;;		_ReadI2C
  1198 ;;		_WriteI2C
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text10
  1205  001CB2                     __ptext10:
  1206                           	opt stack 0
  1207  001CB2                     _ReadCMPS03:
  1208                           	opt stack 28
  1209                           
  1210                           ;cmps03.h: 42: unsigned char byte = 0;
  1211                           
  1212                           ;incstack = 0
  1213  001CB2  0E00               	movlw	0
  1214  001CB4  6E04               	movwf	ReadCMPS03@byte,c
  1215                           
  1216                           ;cmps03.h: 44: IdleI2C();
  1217  001CB6  EC7F  F00D         	call	_IdleI2C	;wreg free
  1218                           
  1219                           ;cmps03.h: 45: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  1220  001CBA  80C5               	bsf	4037,0,c	;volatile
  1221  001CBC                     l101:
  1222  001CBC  B0C5               	btfsc	4037,0,c	;volatile
  1223  001CBE  D7FE               	goto	l101
  1224                           
  1225                           ;cmps03.h: 46: IdleI2C();
  1226  001CC0  EC7F  F00D         	call	_IdleI2C	;wreg free
  1227                           
  1228                           ;cmps03.h: 47: WriteI2C(0xC0);
  1229  001CC4  0EC0               	movlw	192
  1230  001CC6  EC84  F00E         	call	_WriteI2C
  1231                           
  1232                           ;cmps03.h: 48: IdleI2C();
  1233  001CCA  EC7F  F00D         	call	_IdleI2C	;wreg free
  1234                           
  1235                           ;cmps03.h: 49: WriteI2C(0x01);
  1236  001CCE  0E01               	movlw	1
  1237  001CD0  EC84  F00E         	call	_WriteI2C
  1238                           
  1239                           ;cmps03.h: 50: IdleI2C();
  1240  001CD4  EC7F  F00D         	call	_IdleI2C	;wreg free
  1241                           
  1242                           ;cmps03.h: 51: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  1243  001CD8  82C5               	bsf	4037,1,c	;volatile
  1244  001CDA                     l104:
  1245  001CDA  B2C5               	btfsc	4037,1,c	;volatile
  1246  001CDC  D7FE               	goto	l104
  1247                           
  1248                           ;cmps03.h: 52: IdleI2C();
  1249  001CDE  EC7F  F00D         	call	_IdleI2C	;wreg free
  1250                           
  1251                           ;cmps03.h: 53: WriteI2C(0xC1);
  1252  001CE2  0EC1               	movlw	193
  1253  001CE4  EC84  F00E         	call	_WriteI2C
  1254                           
  1255                           ;cmps03.h: 54: IdleI2C();
  1256  001CE8  EC7F  F00D         	call	_IdleI2C	;wreg free
  1257                           
  1258                           ;cmps03.h: 55: byte = ReadI2C();
  1259  001CEC  ECD2  F00D         	call	_ReadI2C	;wreg free
  1260  001CF0  6E04               	movwf	ReadCMPS03@byte,c
  1261                           
  1262                           ;cmps03.h: 58: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  1263  001CF2  8AC5               	bsf	4037,5,c	;volatile
  1264  001CF4  88C5               	bsf	4037,4,c	;volatile
  1265  001CF6                     l107:
  1266  001CF6  B8C5               	btfsc	4037,4,c	;volatile
  1267  001CF8  D7FE               	goto	l107
  1268                           
  1269                           ;cmps03.h: 60: IdleI2C();
  1270  001CFA  EC7F  F00D         	call	_IdleI2C	;wreg free
  1271                           
  1272                           ;cmps03.h: 61: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  1273  001CFE  84C5               	bsf	4037,2,c	;volatile
  1274  001D00                     l110:
  1275  001D00  B4C5               	btfsc	4037,2,c	;volatile
  1276  001D02  D7FE               	goto	l110
  1277                           
  1278                           ;cmps03.h: 63: return (byte);
  1279  001D04  5004               	movf	ReadCMPS03@byte,w,c
  1280  001D06  0012               	return	
  1281  001D08                     __end_of_ReadCMPS03:
  1282                           	opt stack 0
  1283                           prodl	equ	0xFF3
  1284                           wreg	equ	0xFE8
  1285                           status	equ	0xFD8
  1286                           
  1287 ;; *************** function _WriteI2C *****************
  1288 ;; Defined at:
  1289 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_writ.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  data_out        1    wreg     unsigned char 
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  data_out        1    2[COMRAM] unsigned char 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      char 
  1296 ;; Registers used:
  1297 ;;		wreg, status,2, status,0, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1
  1303 ;;      Params:         0       0       0
  1304 ;;      Locals:         1       0       0
  1305 ;;      Temps:          1       0       0
  1306 ;;      Totals:         2       0       0
  1307 ;;Total ram usage:        2 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; Hardware stack levels required when called:    1
  1310 ;; This function calls:
  1311 ;;		_IdleI2C
  1312 ;; This function is called by:
  1313 ;;		_ReadCMPS03
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text11
  1318  001D08                     __ptext11:
  1319                           	opt stack 0
  1320  001D08                     _WriteI2C:
  1321                           	opt stack 28
  1322                           
  1323                           ;incstack = 0
  1324                           ;WriteI2C@data_out stored from wreg
  1325  001D08  6E03               	movwf	WriteI2C@data_out,c
  1326  001D0A  C003  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  1327  001D0E  BEC6               	btfsc	4038,7,c	;volatile
  1328  001D10  D02C               	goto	l280
  1329                           
  1330                           ;	Return value of _WriteI2C is never used
  1331  001D12  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  1332  001D16  0E0F               	movlw	15
  1333  001D18  1602               	andwf	??_WriteI2C,f,c
  1334  001D1A  5002               	movf	??_WriteI2C,w,c
  1335  001D1C  0A08               	xorlw	8
  1336  001D1E  B4D8               	btfsc	status,2,c
  1337  001D20  D00F               	goto	l977
  1338  001D22  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  1339  001D26  0E0F               	movlw	15
  1340  001D28  1602               	andwf	??_WriteI2C,f,c
  1341  001D2A  5002               	movf	??_WriteI2C,w,c
  1342  001D2C  0A0B               	xorlw	11
  1343  001D2E  B4D8               	btfsc	status,2,c
  1344  001D30  D007               	goto	l977
  1345  001D32  88C6               	bsf	4038,4,c	;volatile
  1346  001D34                     l283:
  1347  001D34  A69E               	btfss	3998,3,c	;volatile
  1348  001D36  D7FE               	goto	l283
  1349  001D38  B4C7               	btfsc	4039,2,c	;volatile
  1350  001D3A  D017               	goto	l280
  1351  001D3C  50C7               	movf	4039,w,c	;volatile
  1352  001D3E  D015               	goto	l280
  1353  001D40                     l977:
  1354  001D40  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  1355  001D44  0E0F               	movlw	15
  1356  001D46  1602               	andwf	??_WriteI2C,f,c
  1357  001D48  5002               	movf	??_WriteI2C,w,c
  1358  001D4A  0A08               	xorlw	8
  1359  001D4C  B4D8               	btfsc	status,2,c
  1360  001D4E  D008               	goto	l292
  1361  001D50  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  1362  001D54  0E0F               	movlw	15
  1363  001D56  1602               	andwf	??_WriteI2C,f,c
  1364  001D58  5002               	movf	??_WriteI2C,w,c
  1365  001D5A  0A0B               	xorlw	11
  1366  001D5C  A4D8               	btfss	status,2,c
  1367  001D5E  D005               	goto	l280
  1368  001D60                     l292:
  1369  001D60  B0C7               	btfsc	4039,0,c	;volatile
  1370  001D62  D7FE               	goto	l292
  1371  001D64  EC7F  F00D         	call	_IdleI2C	;wreg free
  1372  001D68  50C5               	movf	4037,w,c	;volatile
  1373  001D6A                     l280:
  1374  001D6A  0012               	return	
  1375  001D6C                     __end_of_WriteI2C:
  1376                           	opt stack 0
  1377                           prodl	equ	0xFF3
  1378                           wreg	equ	0xFE8
  1379                           status	equ	0xFD8
  1380                           
  1381 ;; *************** function _IdleI2C *****************
  1382 ;; Defined at:
  1383 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_idle.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;		None
  1388 ;; Return value:  Size  Location     Type
  1389 ;;		None               void
  1390 ;; Registers used:
  1391 ;;		wreg, status,2, status,0
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1
  1397 ;;      Params:         0       0       0
  1398 ;;      Locals:         0       0       0
  1399 ;;      Temps:          1       0       0
  1400 ;;      Totals:         1       0       0
  1401 ;;Total ram usage:        1 bytes
  1402 ;; Hardware stack levels used:    1
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		_ReadCMPS03
  1407 ;;		_WriteI2C
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           	psect	text12
  1412  001AFE                     __ptext12:
  1413                           	opt stack 0
  1414  001AFE                     _IdleI2C:
  1415                           	opt stack 28
  1416  001AFE                     l893:
  1417  001AFE  CFC5 F001          	movff	4037,??_IdleI2C	;volatile
  1418  001B02  0E1F               	movlw	31
  1419  001B04  1601               	andwf	??_IdleI2C,f,c
  1420  001B06  B4D8               	btfsc	status,2,c
  1421  001B08  B4C7               	btfsc	4039,2,c	;volatile
  1422  001B0A  D7F9               	goto	l893
  1423  001B0C  0012               	return	
  1424  001B0E                     __end_of_IdleI2C:
  1425                           	opt stack 0
  1426                           prodl	equ	0xFF3
  1427                           wreg	equ	0xFE8
  1428                           status	equ	0xFD8
  1429                           
  1430 ;; *************** function _ReadI2C *****************
  1431 ;; Defined at:
  1432 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_read.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      unsigned char 
  1439 ;; Registers used:
  1440 ;;		wreg, status,2, status,0
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1
  1446 ;;      Params:         0       0       0
  1447 ;;      Locals:         0       0       0
  1448 ;;      Temps:          1       0       0
  1449 ;;      Totals:         1       0       0
  1450 ;;Total ram usage:        1 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; This function calls:
  1453 ;;		Nothing
  1454 ;; This function is called by:
  1455 ;;		_ReadCMPS03
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text13
  1460  001BA4                     __ptext13:
  1461                           	opt stack 0
  1462  001BA4                     _ReadI2C:
  1463                           	opt stack 29
  1464                           
  1465                           ;incstack = 0
  1466  001BA4  CFC6 F001          	movff	4038,??_ReadI2C	;volatile
  1467  001BA8  0E0F               	movlw	15
  1468  001BAA  1601               	andwf	??_ReadI2C,f,c
  1469  001BAC  5001               	movf	??_ReadI2C,w,c
  1470  001BAE  0A08               	xorlw	8
  1471  001BB0  B4D8               	btfsc	status,2,c
  1472  001BB2  D007               	goto	l258
  1473  001BB4  CFC6 F001          	movff	4038,??_ReadI2C	;volatile
  1474  001BB8  0E0F               	movlw	15
  1475  001BBA  1601               	andwf	??_ReadI2C,f,c
  1476  001BBC  5001               	movf	??_ReadI2C,w,c
  1477  001BBE  0A0B               	xorlw	11
  1478  001BC0  B4D8               	btfsc	status,2,c
  1479  001BC2                     l258:
  1480  001BC2  86C5               	bsf	4037,3,c	;volatile
  1481  001BC4                     l259:
  1482  001BC4  A0C7               	btfss	4039,0,c	;volatile
  1483  001BC6  D7FE               	goto	l259
  1484  001BC8  50C9               	movf	4041,w,c	;volatile
  1485  001BCA  0012               	return	
  1486  001BCC                     __end_of_ReadI2C:
  1487                           	opt stack 0
  1488                           prodl	equ	0xFF3
  1489                           wreg	equ	0xFE8
  1490                           status	equ	0xFD8
  1491                           
  1492 ;; *************** function _Openlchb100 *****************
  1493 ;; Defined at:
  1494 ;;		line 49 in file "lcbh100.h"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  2   78[COMRAM] int 
  1501 ;; Registers used:
  1502 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1
  1508 ;;      Params:         0       0       0
  1509 ;;      Locals:         0       0       0
  1510 ;;      Temps:          0       0       0
  1511 ;;      Totals:         0       0       0
  1512 ;;Total ram usage:        0 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    1
  1515 ;; This function calls:
  1516 ;;		_OpenPWM1
  1517 ;;		_OpenPWM2
  1518 ;;		_OpenTimer2
  1519 ;; This function is called by:
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text14
  1525  001B84                     __ptext14:
  1526                           	opt stack 0
  1527  001B84                     _Openlchb100:
  1528                           	opt stack 29
  1529                           
  1530                           ;lcbh100.h: 55: ADCON1 = 0b00001111;
  1531                           
  1532                           ;incstack = 0
  1533  001B84  0E0F               	movlw	15
  1534  001B86  6EC1               	movwf	4033,c	;volatile
  1535                           
  1536                           ;lcbh100.h: 61: DDRAbits.RA0 = 0;
  1537  001B88  9092               	bcf	3986,0,c	;volatile
  1538                           
  1539                           ;lcbh100.h: 62: DDRAbits.RA1 = 0;
  1540  001B8A  9292               	bcf	3986,1,c	;volatile
  1541                           
  1542                           ;lcbh100.h: 63: DDRAbits.RA2 = 0;
  1543  001B8C  9492               	bcf	3986,2,c	;volatile
  1544                           
  1545                           ;lcbh100.h: 64: DDRAbits.RA3 = 0;
  1546  001B8E  9692               	bcf	3986,3,c	;volatile
  1547                           
  1548                           ;lcbh100.h: 70: OpenTimer2(0b01111111 & 0b11111100 & 0b10000111);
  1549  001B90  0E04               	movlw	4
  1550  001B92  ECA5  F00D         	call	_OpenTimer2
  1551                           
  1552                           ;lcbh100.h: 76: OpenPWM1(0x3F);
  1553  001B96  0E3F               	movlw	63
  1554  001B98  EC87  F00D         	call	_OpenPWM1
  1555                           
  1556                           ;lcbh100.h: 77: OpenPWM2(0x3F);
  1557  001B9C  0E3F               	movlw	63
  1558  001B9E  EC02  F00E         	call	_OpenPWM2
  1559  001BA2  0012               	return	
  1560  001BA4                     __end_of_Openlchb100:
  1561                           	opt stack 0
  1562                           prodl	equ	0xFF3
  1563                           wreg	equ	0xFE8
  1564                           status	equ	0xFD8
  1565                           
  1566 ;; *************** function _OpenTimer2 *****************
  1567 ;; Defined at:
  1568 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t2open.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  config          1    wreg     unsigned char 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  config          1    0[COMRAM] unsigned char 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;		None               void
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1
  1582 ;;      Params:         0       0       0
  1583 ;;      Locals:         1       0       0
  1584 ;;      Temps:          0       0       0
  1585 ;;      Totals:         1       0       0
  1586 ;;Total ram usage:        1 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_Openlchb100
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text15
  1596  001B4A                     __ptext15:
  1597                           	opt stack 0
  1598  001B4A                     _OpenTimer2:
  1599                           	opt stack 29
  1600                           
  1601                           ;incstack = 0
  1602                           ;OpenTimer2@config stored from wreg
  1603  001B4A  6E01               	movwf	OpenTimer2@config,c
  1604  001B4C  5001               	movf	OpenTimer2@config,w,c
  1605  001B4E  0BFB               	andlw	251
  1606  001B50  6ECA               	movwf	4042,c	;volatile
  1607  001B52  0E00               	movlw	0
  1608  001B54  6ECC               	movwf	4044,c	;volatile
  1609  001B56  929E               	bcf	3998,1,c	;volatile
  1610  001B58  AE01               	btfss	OpenTimer2@config,7,c
  1611  001B5A  D002               	goto	l191
  1612  001B5C  829D               	bsf	3997,1,c	;volatile
  1613  001B5E  D001               	goto	l192
  1614  001B60                     l191:
  1615  001B60  929D               	bcf	3997,1,c	;volatile
  1616  001B62                     l192:
  1617  001B62  84CA               	bsf	4042,2,c	;volatile
  1618  001B64  0012               	return	
  1619  001B66                     __end_of_OpenTimer2:
  1620                           	opt stack 0
  1621                           prodl	equ	0xFF3
  1622                           wreg	equ	0xFE8
  1623                           status	equ	0xFD8
  1624                           
  1625 ;; *************** function _OpenPWM2 *****************
  1626 ;; Defined at:
  1627 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2open.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  period          1    wreg     unsigned char 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  period          1    1[COMRAM] unsigned char 
  1632 ;;  ccp2mx          1    2[COMRAM] unsigned char 
  1633 ;;  pmmode          1    0        unsigned char 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;		None               void
  1636 ;; Registers used:
  1637 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1
  1643 ;;      Params:         0       0       0
  1644 ;;      Locals:         2       0       0
  1645 ;;      Temps:          1       0       0
  1646 ;;      Totals:         3       0       0
  1647 ;;Total ram usage:        3 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; This function calls:
  1650 ;;		Nothing
  1651 ;; This function is called by:
  1652 ;;		_Openlchb100
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text16
  1657  001C04                     __ptext16:
  1658                           	opt stack 0
  1659  001C04                     _OpenPWM2:
  1660                           	opt stack 29
  1661                           
  1662                           ;incstack = 0
  1663                           ;OpenPWM2@period stored from wreg
  1664  001C04  6E02               	movwf	OpenPWM2@period,c
  1665  001C06  0E0C               	movlw	12
  1666  001C08  6EBA               	movwf	4026,c	;volatile
  1667  001C0A  0E05               	movlw	5
  1668  001C0C  6EF6               	movwf	tblptrl,c
  1669  001C0E                     	if	1	;There is more than 1 active tblptr byte
  1670  001C0E  0E00               	movlw	0
  1671  001C10  6EF7               	movwf	tblptrh,c
  1672  001C12                     	endif
  1673  001C12                     	if	1	;There are 3 active tblptr bytes
  1674  001C12  0E30               	movlw	48
  1675  001C14  6EF8               	movwf	tblptru,c
  1676  001C16                     	endif
  1677  001C16  0008               	tblrd		*
  1678  001C18  CFF5 F001          	movff	tablat,??_OpenPWM2
  1679  001C1C  A001               	btfss	??_OpenPWM2,0,c
  1680  001C1E  D002               	goto	l927
  1681  001C20  6803               	setf	OpenPWM2@ccp2mx,c
  1682  001C22  D002               	goto	l168
  1683  001C24                     l927:
  1684  001C24  0E00               	movlw	0
  1685  001C26  6E03               	movwf	OpenPWM2@ccp2mx,c
  1686  001C28                     l168:
  1687  001C28  5003               	movf	OpenPWM2@ccp2mx,w,c
  1688  001C2A  B4D8               	btfsc	status,2,c
  1689  001C2C  D002               	goto	l169
  1690  001C2E  9294               	bcf	3988,1,c	;volatile
  1691  001C30  D001               	goto	l170
  1692  001C32                     l169:
  1693  001C32  9693               	bcf	3987,3,c	;volatile
  1694  001C34                     l170:
  1695  001C34  94CA               	bcf	4042,2,c	;volatile
  1696  001C36  C002  FFCB         	movff	OpenPWM2@period,4043	;volatile
  1697  001C3A  84CA               	bsf	4042,2,c	;volatile
  1698  001C3C  0012               	return	
  1699  001C3E                     __end_of_OpenPWM2:
  1700                           	opt stack 0
  1701                           tblptru	equ	0xFF8
  1702                           tblptrh	equ	0xFF7
  1703                           tblptrl	equ	0xFF6
  1704                           tablat	equ	0xFF5
  1705                           prodl	equ	0xFF3
  1706                           wreg	equ	0xFE8
  1707                           status	equ	0xFD8
  1708                           
  1709 ;; *************** function _OpenPWM1 *****************
  1710 ;; Defined at:
  1711 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1open.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  period          1    wreg     unsigned char 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  period          1    0[COMRAM] unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;		None               void
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1
  1725 ;;      Params:         0       0       0
  1726 ;;      Locals:         1       0       0
  1727 ;;      Temps:          0       0       0
  1728 ;;      Totals:         1       0       0
  1729 ;;Total ram usage:        1 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; This function calls:
  1732 ;;		Nothing
  1733 ;; This function is called by:
  1734 ;;		_Openlchb100
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           	psect	text17
  1739  001B0E                     __ptext17:
  1740                           	opt stack 0
  1741  001B0E                     _OpenPWM1:
  1742                           	opt stack 29
  1743                           
  1744                           ;incstack = 0
  1745                           ;OpenPWM1@period stored from wreg
  1746  001B0E  6E01               	movwf	OpenPWM1@period,c
  1747  001B10  0E0C               	movlw	12
  1748  001B12  12BD               	iorwf	4029,f,c	;volatile
  1749  001B14  9494               	bcf	3988,2,c	;volatile
  1750  001B16  94CA               	bcf	4042,2,c	;volatile
  1751  001B18  C001  FFCB         	movff	OpenPWM1@period,4043	;volatile
  1752  001B1C  84CA               	bsf	4042,2,c	;volatile
  1753  001B1E  0012               	return	
  1754  001B20                     __end_of_OpenPWM1:
  1755                           	opt stack 0
  1756                           tblptru	equ	0xFF8
  1757                           tblptrh	equ	0xFF7
  1758                           tblptrl	equ	0xFF6
  1759                           tablat	equ	0xFF5
  1760                           prodl	equ	0xFF3
  1761                           wreg	equ	0xFE8
  1762                           status	equ	0xFD8
  1763                           
  1764 ;; *************** function _OpenCMPS03 *****************
  1765 ;; Defined at:
  1766 ;;		line 18 in file "cmps03.h"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;		None
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;		None
  1771 ;; Return value:  Size  Location     Type
  1772 ;;		None               void
  1773 ;; Registers used:
  1774 ;;		wreg, status,2, status,0, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1
  1780 ;;      Params:         0       0       0
  1781 ;;      Locals:         0       0       0
  1782 ;;      Temps:          0       0       0
  1783 ;;      Totals:         0       0       0
  1784 ;;Total ram usage:        0 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; Hardware stack levels required when called:    1
  1787 ;; This function calls:
  1788 ;;		_OpenI2C
  1789 ;; This function is called by:
  1790 ;;		_main
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text18
  1795  001B20                     __ptext18:
  1796                           	opt stack 0
  1797  001B20                     _OpenCMPS03:
  1798                           	opt stack 29
  1799                           
  1800                           ;cmps03.h: 25: TRISCbits.TRISC3 = 1;
  1801                           
  1802                           ;incstack = 0
  1803  001B20  8694               	bsf	3988,3,c	;volatile
  1804                           
  1805                           ;cmps03.h: 26: TRISCbits.TRISC4 = 1;
  1806  001B22  8894               	bsf	3988,4,c	;volatile
  1807                           
  1808                           ;cmps03.h: 31: SSPADD = 0x09;
  1809  001B24  0E09               	movlw	9
  1810  001B26  6EC8               	movwf	4040,c	;volatile
  1811                           
  1812                           ;cmps03.h: 33: OpenI2C(0b00001000, 0b10000000);
  1813  001B28  0E80               	movlw	128
  1814  001B2A  6E01               	movwf	OpenI2C@slew,c
  1815  001B2C  0E08               	movlw	8
  1816  001B2E  ECB3  F00D         	call	_OpenI2C
  1817  001B32  0012               	return	
  1818  001B34                     __end_of_OpenCMPS03:
  1819                           	opt stack 0
  1820                           tblptru	equ	0xFF8
  1821                           tblptrh	equ	0xFF7
  1822                           tblptrl	equ	0xFF6
  1823                           tablat	equ	0xFF5
  1824                           prodl	equ	0xFF3
  1825                           wreg	equ	0xFE8
  1826                           status	equ	0xFD8
  1827                           
  1828 ;; *************** function _OpenI2C *****************
  1829 ;; Defined at:
  1830 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_open.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  sync_mode       1    wreg     unsigned char 
  1833 ;;  slew            1    0[COMRAM] unsigned char 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  sync_mode       1    1[COMRAM] unsigned char 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;		None               void
  1838 ;; Registers used:
  1839 ;;		wreg, status,2, status,0
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMRAM   BANK0   BANK1
  1845 ;;      Params:         1       0       0
  1846 ;;      Locals:         1       0       0
  1847 ;;      Temps:          0       0       0
  1848 ;;      Totals:         2       0       0
  1849 ;;Total ram usage:        2 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_OpenCMPS03
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text19
  1859  001B66                     __ptext19:
  1860                           	opt stack 0
  1861  001B66                     _OpenI2C:
  1862                           	opt stack 29
  1863                           
  1864                           ;incstack = 0
  1865                           ;OpenI2C@sync_mode stored from wreg
  1866  001B66  6E02               	movwf	OpenI2C@sync_mode,c
  1867  001B68  0E3F               	movlw	63
  1868  001B6A  16C7               	andwf	4039,f,c	;volatile
  1869  001B6C  0E00               	movlw	0
  1870  001B6E  6EC6               	movwf	4038,c	;volatile
  1871  001B70  0E00               	movlw	0
  1872  001B72  6EC5               	movwf	4037,c	;volatile
  1873  001B74  5002               	movf	OpenI2C@sync_mode,w,c
  1874  001B76  12C6               	iorwf	4038,f,c	;volatile
  1875  001B78  5001               	movf	OpenI2C@slew,w,c
  1876  001B7A  12C7               	iorwf	4039,f,c	;volatile
  1877  001B7C  8694               	bsf	3988,3,c	;volatile
  1878  001B7E  8894               	bsf	3988,4,c	;volatile
  1879  001B80  8AC6               	bsf	4038,5,c	;volatile
  1880  001B82  0012               	return	
  1881  001B84                     __end_of_OpenI2C:
  1882                           	opt stack 0
  1883  0000                     tblptru	equ	0xFF8
  1884                           tblptrh	equ	0xFF7
  1885                           tblptrl	equ	0xFF6
  1886                           tablat	equ	0xFF5
  1887                           prodl	equ	0xFF3
  1888                           wreg	equ	0xFE8
  1889                           status	equ	0xFD8
  1890                           tblptru	equ	0xFF8
  1891                           tblptrh	equ	0xFF7
  1892                           tblptrl	equ	0xFF6
  1893                           tablat	equ	0xFF5
  1894                           prodl	equ	0xFF3
  1895                           wreg	equ	0xFE8
  1896                           status	equ	0xFD8
  1897                           
  1898                           	psect	rparam
  1899  0000                     tblptru	equ	0xFF8
  1900                           tblptrh	equ	0xFF7
  1901                           tblptrl	equ	0xFF6
  1902                           tablat	equ	0xFF5
  1903                           prodl	equ	0xFF3
  1904                           wreg	equ	0xFE8
  1905                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     31      33
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Runlchb100
    _delay_s->_Delay10KTCYx
    _Runlchb100->_SetDCPWM1
    _Runlchb100->_SetDCPWM2
    _SetDCPWM2->_abs
    _SetDCPWM1->_abs
    _ReadCMPS03->_WriteI2C
    _WriteI2C->_IdleI2C
    _Openlchb100->_OpenPWM2
    _OpenCMPS03->_OpenI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    12      5    1442
                                             14 COMRAM    17    12      5
                       _Closelchb100
                         _OpenCMPS03
                        _Openlchb100
                         _ReadCMPS03
                         _Runlchb100
                            _delay_s
                            _openLED
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _setLED                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _openLED                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              2     0      2     159
                                              2 COMRAM     2     0      2
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Runlchb100                                           4     0      4     715
                                             10 COMRAM     4     0      4
                       _Closelchb100
                          _SetDCPWM1
                          _SetDCPWM2
                                _abs
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     131
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM2                                            6     4      2      88
                                              4 COMRAM     6     4      2
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM1                                            6     4      2      88
                                              4 COMRAM     6     4      2
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (2) _Closelchb100                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadCMPS03                                           1     1      0      30
                                              3 COMRAM     1     1      0
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      15
                                              1 COMRAM     2     2      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (3) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Openlchb100                                          0     0      0      75
                           _OpenPWM1
                           _OpenPWM2
                         _OpenTimer2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM2                                             4     4      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM1                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenCMPS03                                           0     0      0      73
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1      73
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Closelchb100
   _OpenCMPS03
     _OpenI2C
   _Openlchb100
     _OpenPWM1
     _OpenPWM2
     _OpenTimer2
   _ReadCMPS03
     _IdleI2C
     _ReadI2C
     _WriteI2C
       _IdleI2C
   _Runlchb100
     _Closelchb100
     _SetDCPWM1
       _abs (ARG)
     _SetDCPWM2
       _abs (ARG)
     _abs
   _delay_s
     _Delay10KTCYx
   _openLED
   _setLED

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1F      21       1       26.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      21       7        0.0%
DATA                 0      0      21       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Mar 30 11:06:56 2015

            _SSPSTATbits 000FC7                       l85 1D7C                       u75 1C48  
                     u85 1C82              __CFG_BOR$ON 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_OSC$HS 000000                      l101 1CBC                      l110 1D00  
                    l104 1CDA                      l107 1CF6                      l170 1C34  
                    l191 1B60                      l168 1C28                      l192 1B62  
                    l280 1D6A                      l169 1C32                      l258 1BC2  
                    l346 1BFA                      l259 1BC4                      l283 1D34  
                    l347 1C02                      l292 1D60                      l526 1B36  
                    l927 1C24                      l893 1AFE                      l977 1D40  
           __CFG_CPB$OFF 000000                      _PR2 000FCB             __CFG_CPD$OFF 000000  
                    u397 1B3C                      _abs 1BCC             __CFG_BORV$42 000000  
                    wreg 000FE8             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   l1031 1D9A                     l1043 1DEA                     l1131 1F46  
                   l1115 1E9C                     ?_abs 0001                     l1037 1DBA  
                   l1117 1EB6                     l1109 1E38                     l1145 1FD6  
                   l1149 1FF6                     _DDRD 000F95                     _LATD 000F8C  
                   _TMR2 000FCC             __CFG_PWRT$ON 000000                     abs@a 0001  
                   _main 1E1C                     prodl 000FF3                     start 0000  
          __CFG_PBAD$DIG 000000            __CFG_FSCM$OFF 000000            __CFG_IESO$OFF 000000  
        __end_of_IdleI2C 1B0E            __CFG_MCLRE$ON 000000          __end_of_ReadI2C 1BCC  
        __end_of_OpenI2C 1B84                    ??_abs 0003           __CFG_CCP2MX$ON 000000  
                  ?_main 000F                    _T2CON 000FCA                    _T3CON 000FB1  
         __CFG_DEBUG$OFF 000000                    _TMR3H 000FB3                    _TMR3L 000FB2  
   main@intended_bearing 001E    __size_of_Delay10KTCYx 0016          __end_of_delay_s 1AFE  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_STVR$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000          __end_of_openLED 1AD6                    tablat 000FF5  
             _ReadCMPS03 1CB2                    status 000FD8          __initialization 1AE8  
           __end_of_main 2000             _Delay10KTCYx 1B34     __end_of_Closelchb100 1AE8  
       __end_of_OpenPWM1 1B20         __end_of_OpenPWM2 1C3E                   ??_main 0014  
          __activetblptr 000003               _OpenCMPS03 1B20      main@current_bearing 001F  
                 _ADCON1 000FC1            ??_Openlchb100 0004                   _CCPR1L 000FBE  
                 _CCPR2L 000FBB         __end_of_WriteI2C 1D6C              OpenI2C@slew 0001  
             _OpenTimer2 1B4A                ??_IdleI2C 0001       __size_of_SetDCPWM1 003A  
     __size_of_SetDCPWM2 003A                   _SSPADD 000FC8                   _SSPBUF 000FC9  
              ??_ReadI2C 0001                ??_OpenI2C 0002                   _setLED 1AD6  
       OpenTimer2@config 0001                ??_delay_s 0005              setLED@value 0001  
              ??_openLED 0001                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               _Runlchb100 1D6C              ?_ReadCMPS03 0001  
             __accesstop 0080  __end_of__initialization 1AEC      __end_of_Openlchb100 1BA4  
         ReadCMPS03@byte 0004           __pcstackCOMRAM 0001        __end_of_SetDCPWM1 1C78  
      __end_of_SetDCPWM2 1CB2              ?_OpenCMPS03 0001              ?_OpenTimer2 0001  
              ?_OpenPWM1 0001                ?_OpenPWM2 0001    __size_of_Closelchb100 000A  
                _CCP1CON 000FBD                  _CCP2CON 000FBA                  ?_setLED 0001  
              ?_WriteI2C 0001      __size_of_ReadCMPS03 0056           Runlchb100@port 000D  
    Runlchb100@starboard 000B                  _SSPCON1 000FC6                  _SSPCON2 000FC5  
                _SSPSTAT 000FC7              _Openlchb100 1B84              ?_Runlchb100 000B  
                _IdleI2C 1AFE             _Closelchb100 1ADE                  _ReadI2C 1BA4  
             ??_OpenPWM1 0001               ??_OpenPWM2 0001                  _OpenI2C 1B66  
    __size_of_OpenCMPS03 0014  main@right_turn_distance 001C                  __Hparam 0000  
                __Lparam 0000                  __pcinit 1AE8               ??_WriteI2C 0002  
        __size_of_setLED 0008                  _delay_s 1AF2                  __ramtop 0200  
    __size_of_OpenTimer2 001C                  __ptext0 1E1C                  __ptext1 1AD6  
                __ptext2 1AD0                  __ptext3 1AF2                  __ptext4 1B34  
                __ptext5 1D6C                  __ptext6 1BCC                  __ptext7 1C78  
                __ptext8 1C3E                  __ptext9 1ADE                _T2CONbits 000FCA  
           __size_of_abs 0038                _T3CONbits 000FB1                  _openLED 1AD0  
   end_of_initialization 1AEC               _tick_units 0020      __size_of_Runlchb100 00B0  
              _TRISBbits 000F93                _TRISCbits 000F94             ??_ReadCMPS03 0004  
      main@allowed_error 001D           __end_of_setLED 1ADE   main@left_turn_distance 001B  
           ??_OpenCMPS03 0003       __end_of_ReadCMPS03 1D08      start_initialization 1AE8  
              _SetDCPWM1 1C3E                _SetDCPWM2 1C78          SetDCPWM1@DCycle 0009  
            __end_of_abs 1C04          SetDCPWM2@DCycle 0009         WriteI2C@data_out 0003  
           ??_OpenTimer2 0001       __end_of_OpenCMPS03 1B34        __size_of_OpenPWM1 0012  
      __size_of_OpenPWM2 003A                 ??_setLED 0001       __end_of_OpenTimer2 1B66  
      __size_of_WriteI2C 0064              __pbssCOMRAM 0020               ?_SetDCPWM1 0005  
             ?_SetDCPWM2 0005             ?_Openlchb100 0001             ??_Runlchb100 000F  
               ?_IdleI2C 0001                 ?_ReadI2C 0001                 ?_OpenI2C 0001  
          ?_Delay10KTCYx 0001                 ?_delay_s 0003       __end_of_Runlchb100 1E1C  
               ?_openLED 0001                 _DDRAbits 000F92                 _LATAbits 000F89  
               _IPR2bits 000FA2                 _PIE1bits 000F9D                 _PIE2bits 000FA0  
               _PIR1bits 000F9E                 _PIR2bits 000FA1                 _RCONbits 000FD0  
         ??_Delay10KTCYx 0001              ??_SetDCPWM1 0007              ??_SetDCPWM2 0007  
       Delay10KTCYx@unit 0002         OpenI2C@sync_mode 0002       SetDCPWM1@dutycycle 0005  
       __size_of_IdleI2C 0010                 _OpenPWM1 1B0E                 _OpenPWM2 1C04  
       __size_of_ReadI2C 0028                 __Hrparam 0000         __size_of_OpenI2C 001E  
               __Lrparam 0000       SetDCPWM2@dutycycle 0005                 _WriteI2C 1D08  
         OpenPWM2@ccp2mx 0003         __size_of_delay_s 000C           OpenPWM1@period 0001  
         OpenPWM2@period 0002         __size_of_openLED 0006                 __ptext10 1CB2  
               __ptext11 1D08                 __ptext12 1AFE                 __ptext13 1BA4  
               __ptext14 1B84                 __ptext15 1B4A                 __ptext16 1C04  
               __ptext17 1B0E                 __ptext18 1B20                 __ptext19 1B66  
   __size_of_Openlchb100 0020            __size_of_main 01E4                 delay_s@x 0003  
               main@argc 000F                 main@argv 0011               _INTCONbits 000FF2  
   __end_of_Delay10KTCYx 1B4A            ?_Closelchb100 0001              _SSPCON1bits 000FC6  
            _SSPCON2bits 000FC5           ??_Closelchb100 0001  
